(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    897416,      17631]
NotebookOptionsPosition[    889998,      17517]
NotebookOutlinePosition[    890428,      17534]
CellTagsIndexPosition[    890385,      17531]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Analiza po\[ZHacek]arov v naravi  ZDA od leta 1926 do 2019", "Title",
 CellChangeTimes->{{3.932525938728897*^9, 3.932525950560407*^9}, {
  3.933921949704745*^9, 
  3.933921956528562*^9}},ExpressionUUID->"cd5cdfde-a1b8-4f8c-9356-\
23962c548238"],

Cell[CellGroupData[{

Cell["Pridobivanje podatkov", "Section",
 CellChangeTimes->{{3.9325259550245123`*^9, 
  3.9325259692594914`*^9}},ExpressionUUID->"e427a261-146d-4715-87a5-\
5e46a7dd4ffb"],

Cell["\<\
Podatke za po\[ZHacek]are sem poiskal v podatkovni bazi Wolfram data \
repository. 
Podatke o temperaturah pa sem dobil iz spletne strani \
https://kilthub.cmu.edu/articles/dataset/Compiled_daily_temperature_and_\
precipitation_data_for_the_U_S_cities/7890488?file=48711145.
Pridobivanje podatkov:\
\>", "Text",
 CellChangeTimes->{{3.932525971887471*^9, 3.932526049796497*^9}, {
  3.9339100658842144`*^9, 3.9339100951880884`*^9}, {3.934027813976528*^9, 
  3.934027815602215*^9}},ExpressionUUID->"34123523-3fca-434b-8fb5-\
856375786daf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"podatki", "=", 
  RowBox[{"ResourceData", "[", 
   RowBox[{
   "ResourceObject", "[", 
    "\"\<Total Wildland Fires and Acres (1926-2019)\>\"", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"podatki2", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\sola\\\\ROM\\\\USW00013737.csv\>\"", ",", "\"\<Dataset\>\"", 
    ",", 
    RowBox[{"\"\<HeaderLines\>\"", "->", "1"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.920556974217825*^9, 3.920556978479772*^9}, {
   3.9205574243616886`*^9, 3.920557451424997*^9}, {3.920557706938862*^9, 
   3.9205577206709843`*^9}, {3.9205577990052896`*^9, 3.92055782499811*^9}, {
   3.9303041992435894`*^9, 3.93030422474005*^9}, {3.9303043058353577`*^9, 
   3.930304466611706*^9}, {3.9303044998204083`*^9, 3.9303045201793947`*^9}, {
   3.9303045712676425`*^9, 3.930304663624307*^9}, {3.930304909580757*^9, 
   3.9303049333360825`*^9}, {3.9303051352041693`*^9, 3.930305187019658*^9}, {
   3.930305247085045*^9, 3.930305265506925*^9}, {3.9303052968516145`*^9, 
   3.9303054016510553`*^9}, {3.9325260578519936`*^9, 3.932526086244333*^9}, {
   3.932975655842057*^9, 3.932975667657798*^9}, {3.933904005421626*^9, 
   3.933904024200485*^9}, {3.9339041441113544`*^9, 3.9339042461762953`*^9}, {
   3.9339043083140078`*^9, 3.9339043100161295`*^9}, 3.9339049858965054`*^9, {
   3.933906981614181*^9, 3.9339069855584292`*^9}, {3.93390703087032*^9, 
   3.9339070643147283`*^9}, {3.933907130911775*^9, 3.933907201562365*^9}, {
   3.9339072762307825`*^9, 3.9339073012500715`*^9}, {3.933907365430461*^9, 
   3.9339073843578377`*^9}, {3.9339074226623955`*^9, 3.93390748423005*^9}, {
   3.9339075156541233`*^9, 3.933907523797717*^9}, {3.933907583344057*^9, 
   3.9339076597903223`*^9}, {3.93390774704716*^9, 3.9339077484895763`*^9}, {
   3.933907847479175*^9, 3.933907849639003*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7d59329c-1169-4fab-b674-85db0ff17c06"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Year" -> DateObject[{2019}, "Year", "Gregorian", -5.], "Fires" -> 
        50477, "Acres" -> 4664364|>, <|
       "Year" -> DateObject[{2018}, "Year", "Gregorian", -5.], "Fires" -> 
        58083, "Acres" -> 8767492|>, <|
       "Year" -> DateObject[{2017}, "Year", "Gregorian", -5.], "Fires" -> 
        71499, "Acres" -> 10026086|>, <|
       "Year" -> DateObject[{2016}, "Year", "Gregorian", -5.], "Fires" -> 
        67743, "Acres" -> 5509995|>, <|
       "Year" -> DateObject[{2015}, "Year", "Gregorian", -5.], "Fires" -> 
        68151, "Acres" -> 10125149|>, <|
       "Year" -> DateObject[{2014}, "Year", "Gregorian", -5.], "Fires" -> 
        63312, "Acres" -> 3595613|>, <|
       "Year" -> DateObject[{2013}, "Year", "Gregorian", -5.], "Fires" -> 
        47579, "Acres" -> 4319546|>, <|
       "Year" -> DateObject[{2012}, "Year", "Gregorian", -5.], "Fires" -> 
        67774, "Acres" -> 9326238|>, <|
       "Year" -> DateObject[{2011}, "Year", "Gregorian", -5.], "Fires" -> 
        74126, "Acres" -> 8711367|>, <|
       "Year" -> DateObject[{2010}, "Year", "Gregorian", -5.], "Fires" -> 
        71971, "Acres" -> 3422724|>, <|
       "Year" -> DateObject[{2009}, "Year", "Gregorian", -5.], "Fires" -> 
        78792, "Acres" -> 5921786|>, <|
       "Year" -> DateObject[{2008}, "Year", "Gregorian", -5.], "Fires" -> 
        78979, "Acres" -> 5292468|>, <|
       "Year" -> DateObject[{2007}, "Year", "Gregorian", -5.], "Fires" -> 
        85705, "Acres" -> 9328045|>, <|
       "Year" -> DateObject[{2006}, "Year", "Gregorian", -5.], "Fires" -> 
        96385, "Acres" -> 9873745|>, <|
       "Year" -> DateObject[{2005}, "Year", "Gregorian", -5.], "Fires" -> 
        66753, "Acres" -> 8689389|>, <|
       "Year" -> DateObject[{2004}, "Year", "Gregorian", -5.], "Fires" -> 
        65461, "Acres" -> 8097880|>, <|
       "Year" -> DateObject[{2003}, "Year", "Gregorian", -5.], "Fires" -> 
        63629, "Acres" -> 3960842|>, <|
       "Year" -> DateObject[{2002}, "Year", "Gregorian", -5.], "Fires" -> 
        73457, "Acres" -> 7184712|>, <|
       "Year" -> DateObject[{2001}, "Year", "Gregorian", -5.], "Fires" -> 
        84079, "Acres" -> 3570911|>, <|
       "Year" -> DateObject[{2000}, "Year", "Gregorian", -5.], "Fires" -> 
        92250, "Acres" -> 7393493|>, <|
       "Year" -> DateObject[{1999}, "Year", "Gregorian", -5.], "Fires" -> 
        92487, "Acres" -> 5626093|>, <|
       "Year" -> DateObject[{1998}, "Year", "Gregorian", -5.], "Fires" -> 
        81043, "Acres" -> 1329704|>, <|
       "Year" -> DateObject[{1997}, "Year", "Gregorian", -5.], "Fires" -> 
        66196, "Acres" -> 2856959|>, <|
       "Year" -> DateObject[{1996}, "Year", "Gregorian", -5.], "Fires" -> 
        96363, "Acres" -> 6065998|>, <|
       "Year" -> DateObject[{1995}, "Year", "Gregorian", -5.], "Fires" -> 
        82234, "Acres" -> 1840546|>, <|
       "Year" -> DateObject[{1994}, "Year", "Gregorian", -5.], "Fires" -> 
        79107, "Acres" -> 4073579|>, <|
       "Year" -> DateObject[{1993}, "Year", "Gregorian", -5.], "Fires" -> 
        58810, "Acres" -> 1797574|>, <|
       "Year" -> DateObject[{1992}, "Year", "Gregorian", -5.], "Fires" -> 
        87394, "Acres" -> 2069929|>, <|
       "Year" -> DateObject[{1991}, "Year", "Gregorian", -5.], "Fires" -> 
        75754, "Acres" -> 2953578|>, <|
       "Year" -> DateObject[{1990}, "Year", "Gregorian", -5.], "Fires" -> 
        66481, "Acres" -> 4621621|>, <|
       "Year" -> DateObject[{1989}, "Year", "Gregorian", -5.], "Fires" -> 
        48949, "Acres" -> 1827310|>, <|
       "Year" -> DateObject[{1988}, "Year", "Gregorian", -5.], "Fires" -> 
        72750, "Acres" -> 5009290|>, <|
       "Year" -> DateObject[{1987}, "Year", "Gregorian", -5.], "Fires" -> 
        71300, "Acres" -> 2447296|>, <|
       "Year" -> DateObject[{1986}, "Year", "Gregorian", -5.], "Fires" -> 
        85907, "Acres" -> 2719162|>, <|
       "Year" -> DateObject[{1985}, "Year", "Gregorian", -5.], "Fires" -> 
        82591, "Acres" -> 2896147|>, <|
       "Year" -> DateObject[{1984}, "Year", "Gregorian", -5.], "Fires" -> 
        20493, "Acres" -> 1148409|>, <|
       "Year" -> DateObject[{1983}, "Year", "Gregorian", -5.], "Fires" -> 
        18229, "Acres" -> 1323666|>, <|
       "Year" -> DateObject[{1982}, "Year", "Gregorian", -5.], "Fires" -> 
        174755, "Acres" -> 2382036|>, <|
       "Year" -> DateObject[{1981}, "Year", "Gregorian", -5.], "Fires" -> 
        249370, "Acres" -> 4814206|>, <|
       "Year" -> DateObject[{1980}, "Year", "Gregorian", -5.], "Fires" -> 
        234892, "Acres" -> 5260825|>, <|
       "Year" -> DateObject[{1979}, "Year", "Gregorian", -5.], "Fires" -> 
        163196, "Acres" -> 2986826|>, <|
       "Year" -> DateObject[{1978}, "Year", "Gregorian", -5.], "Fires" -> 
        218842, "Acres" -> 3910913|>, <|
       "Year" -> DateObject[{1977}, "Year", "Gregorian", -5.], "Fires" -> 
        173998, "Acres" -> 3152644|>, <|
       "Year" -> DateObject[{1976}, "Year", "Gregorian", -5.], "Fires" -> 
        241699, "Acres" -> 5109926|>, <|
       "Year" -> DateObject[{1975}, "Year", "Gregorian", -5.], "Fires" -> 
        134872, "Acres" -> 1791327|>, <|
       "Year" -> DateObject[{1974}, "Year", "Gregorian", -5.], "Fires" -> 
        145868, "Acres" -> 2879095|>, <|
       "Year" -> DateObject[{1973}, "Year", "Gregorian", -5.], "Fires" -> 
        117957, "Acres" -> 1915273|>, <|
       "Year" -> DateObject[{1972}, "Year", "Gregorian", -5.], "Fires" -> 
        124554, "Acres" -> 2641166|>, <|
       "Year" -> DateObject[{1971}, "Year", "Gregorian", -5.], "Fires" -> 
        108398, "Acres" -> 4278472|>, <|
       "Year" -> DateObject[{1970}, "Year", "Gregorian", -5.], "Fires" -> 
        121736, "Acres" -> 3278565|>, <|
       "Year" -> DateObject[{1969}, "Year", "Gregorian", -5.], "Fires" -> 
        113351, "Acres" -> 6689081|>, <|
       "Year" -> DateObject[{1968}, "Year", "Gregorian", -5.], "Fires" -> 
        125371, "Acres" -> 4231996|>, <|
       "Year" -> DateObject[{1967}, "Year", "Gregorian", -5.], "Fires" -> 
        125025, "Acres" -> 4658586|>, <|
       "Year" -> DateObject[{1966}, "Year", "Gregorian", -5.], "Fires" -> 
        122500, "Acres" -> 4574389|>, <|
       "Year" -> DateObject[{1965}, "Year", "Gregorian", -5.], "Fires" -> 
        113684, "Acres" -> 2652112|>, <|
       "Year" -> DateObject[{1964}, "Year", "Gregorian", -5.], "Fires" -> 
        116358, "Acres" -> 4197309|>, <|
       "Year" -> DateObject[{1963}, "Year", "Gregorian", -5.], "Fires" -> 
        164183, "Acres" -> 7120768|>, <|
       "Year" -> DateObject[{1962}, "Year", "Gregorian", -5.], "Fires" -> 
        115345, "Acres" -> 4078894|>, <|
       "Year" -> DateObject[{1961}, "Year", "Gregorian", -5.], "Fires" -> 
        98517, "Acres" -> 3036219|>, <|
       "Year" -> DateObject[{1960}, "Year", "Gregorian", -5.], "Fires" -> 
        103387, "Acres" -> 4478188|>, <|
       "Year" -> DateObject[{1959}, "Year", "Gregorian", -5.], "Fires" -> 
        104662, "Acres" -> 4156000|>, <|
       "Year" -> DateObject[{1958}, "Year", "Gregorian", -5.], "Fires" -> 
        97910, "Acres" -> 3280000|>, <|
       "Year" -> DateObject[{1957}, "Year", "Gregorian", -5.], "Fires" -> 
        83392, "Acres" -> 3410000|>, <|
       "Year" -> DateObject[{1956}, "Year", "Gregorian", -5.], "Fires" -> 
        143485, "Acres" -> 6606000|>, <|
       "Year" -> DateObject[{1955}, "Year", "Gregorian", -5.], "Fires" -> 
        145180, "Acres" -> 8069000|>, <|
       "Year" -> DateObject[{1954}, "Year", "Gregorian", -5.], "Fires" -> 
        176891, "Acres" -> 8833000|>, <|
       "Year" -> DateObject[{1953}, "Year", "Gregorian", -5.], "Fires" -> 
        154160, "Acres" -> 9976000|>, <|
       "Year" -> DateObject[{1952}, "Year", "Gregorian", -5.], "Fires" -> 
        188277, "Acres" -> 14187000|>, <|
       "Year" -> DateObject[{1951}, "Year", "Gregorian", -5.], "Fires" -> 
        164090, "Acres" -> 10781000|>, <|
       "Year" -> DateObject[{1950}, "Year", "Gregorian", -5.], "Fires" -> 
        208402, "Acres" -> 15519000|>, <|
       "Year" -> DateObject[{1949}, "Year", "Gregorian", -5.], "Fires" -> 
        193774, "Acres" -> 15397000|>, <|
       "Year" -> DateObject[{1948}, "Year", "Gregorian", -5.], "Fires" -> 
        174189, "Acres" -> 16557000|>, <|
       "Year" -> DateObject[{1947}, "Year", "Gregorian", -5.], "Fires" -> 
        200799, "Acres" -> 23226000|>, <|
       "Year" -> DateObject[{1946}, "Year", "Gregorian", -5.], "Fires" -> 
        172278, "Acres" -> 20691000|>, <|
       "Year" -> DateObject[{1945}, "Year", "Gregorian", -5.], "Fires" -> 
        124728, "Acres" -> 17681000|>, <|
       "Year" -> DateObject[{1944}, "Year", "Gregorian", -5.], "Fires" -> 
        131229, "Acres" -> 16549000|>, <|
       "Year" -> DateObject[{1943}, "Year", "Gregorian", -5.], "Fires" -> 
        210326, "Acres" -> 32333000|>, <|
       "Year" -> DateObject[{1942}, "Year", "Gregorian", -5.], "Fires" -> 
        208218, "Acres" -> 31854000|>, <|
       "Year" -> DateObject[{1941}, "Year", "Gregorian", -5.], "Fires" -> 
        199702, "Acres" -> 26405000|>, <|
       "Year" -> DateObject[{1940}, "Year", "Gregorian", -5.], "Fires" -> 
        195427, "Acres" -> 25848000|>, <|
       "Year" -> DateObject[{1939}, "Year", "Gregorian", -5.], "Fires" -> 
        212671, "Acres" -> 30449000|>, <|
       "Year" -> DateObject[{1938}, "Year", "Gregorian", -5.], "Fires" -> 
        232229, "Acres" -> 33815000|>, <|
       "Year" -> DateObject[{1937}, "Year", "Gregorian", -5.], "Fires" -> 
        185209, "Acres" -> 21981000|>, <|
       "Year" -> DateObject[{1936}, "Year", "Gregorian", -5.], "Fires" -> 
        226285, "Acres" -> 43207000|>, <|
       "Year" -> DateObject[{1935}, "Year", "Gregorian", -5.], "Fires" -> 
        140297, "Acres" -> 30335000|>, <|
       "Year" -> DateObject[{1934}, "Year", "Gregorian", -5.], "Fires" -> 
        162663, "Acres" -> 41821000|>, <|
       "Year" -> DateObject[{1933}, "Year", "Gregorian", -5.], "Fires" -> 
        140722, "Acres" -> 43890000|>, <|
       "Year" -> DateObject[{1932}, "Year", "Gregorian", -5.], "Fires" -> 
        166399, "Acres" -> 42063000|>, <|
       "Year" -> DateObject[{1931}, "Year", "Gregorian", -5.], "Fires" -> 
        187214, "Acres" -> 51607000|>, <|
       "Year" -> DateObject[{1930}, "Year", "Gregorian", -5.], "Fires" -> 
        190980, "Acres" -> 52266000|>, <|
       "Year" -> DateObject[{1929}, "Year", "Gregorian", -5.], "Fires" -> 
        134895, "Acres" -> 46230000|>, <|
       "Year" -> DateObject[{1928}, "Year", "Gregorian", -5.], "Fires" -> 
        175934, "Acres" -> 43542000|>, <|
       "Year" -> DateObject[{1927}, "Year", "Gregorian", -5.], "Fires" -> 
        158438, "Acres" -> 38531000|>, <|
       "Year" -> DateObject[{1926}, "Year", "Gregorian", -5.], "Fires" -> 
        91793, "Acres" -> 24316000|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 1, {All, "Fires"} -> 
        1, {All, "Acres"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
            TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 94], 
     "Meta" -> <|"ID" -> 235819685486097|>, "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 1, {All, "Fires"} -> 
        1, {All, "Acres"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
            TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 94], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 94, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Year", 
                  Style[
                  "Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Year"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Year"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fires", 
                  Style[
                  "Fires", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Fires"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Fires"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Acres", 
                  Style[
                  "Acres", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Acres"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Acres"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50477"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4664364"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2018\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["58083"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8767492"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2017\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71499"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10026086"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2016\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["67743"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5509995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2015\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68151"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10125149"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2014\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63312"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3595613"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2013\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47579"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4319546"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2012\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["67774"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9326238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2011\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8711367"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2010\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71971"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3422724"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2009\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78792"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5921786"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2008\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78979"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5292468"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2007\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85705"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9328045"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2006\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["96385"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9873745"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2005\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["66753"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8689389"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2004\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["65461"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8097880"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2003\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63629"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3960842"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2002\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["73457"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7184712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2001\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84079"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3570911"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"2000\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92250"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Fires"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7393493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Acres"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 94, 1], {1, 94 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 94, 1], {1, 94 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[94, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[94, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 94, 1], {1, 94 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 94, 1], {1, 94 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{215., {299.63403309800196`, 305.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{215., {299.63403309800196`, 305.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.932526227649133*^9, 3.9328673511075687`*^9, 3.932869923282476*^9, 
   3.93297567293073*^9, 3.9338200617634563`*^9, 3.9339037768323965`*^9, 
   3.9339040293897886`*^9, 3.93390407737875*^9, 3.9339042470449753`*^9, 
   3.933904988358123*^9, 3.9339070677394667`*^9, {3.9339071334349017`*^9, 
   3.933907161172797*^9}, {3.933907193461607*^9, 3.9339072019951754`*^9}, 
   3.9339073026652822`*^9, 3.93390738506371*^9, 3.933907474719205*^9, {
   3.933907517974207*^9, 3.933907524707252*^9}, {3.933907574402964*^9, 
   3.933907599450059*^9}, 3.933907660630046*^9, 3.9339077489194117`*^9, 
   3.9339097635953636`*^9, 3.9339115742992363`*^9, 3.9339116553907557`*^9, 
   3.933915092471547*^9, 3.9339204008967347`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"dd790551-fe4d-4dc1-ad79-b46c15f70a97"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          9365861804403440323194680520512148309768497839078912831704], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, ""} -> 1, {All, "Date"} -> 
            1, {All, "tmax"} -> 1, {All, "tmin"} -> 1, {All, "prcp"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "" -> TypeSystem`PackageScope`AtomShape[34], "Date" -> 
                TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
                "tmax" -> TypeSystem`PackageScope`UnknownShape[False], "tmin" -> 
                TypeSystem`PackageScope`UnknownShape[False], "prcp" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 5, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"", "Date", "tmax", "tmin", "prcp"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 54786], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, ""} -> 1, {All, "Date"} -> 
            1, {All, "tmax"} -> 1, {All, "tmin"} -> 1, {All, "prcp"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "" -> TypeSystem`PackageScope`AtomShape[34], "Date" -> 
                TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
                "tmax" -> TypeSystem`PackageScope`UnknownShape[False], "tmin" -> 
                TypeSystem`PackageScope`UnknownShape[False], "prcp" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 5, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"", "Date", "tmax", "tmin", "prcp"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}], 54786], "Path" -> {}, "DisplayedRowCount" -> 
         20, "DisplayedColumnCount" -> 5, "DataRowCount" -> 54786, 
         "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["", 
                    Style[
                    "", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"]][{All, ""}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{All, ""}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Date", 
                    Style[
                    "Date", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"]][{All, "Date"}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{All, "Date"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["tmax", 
                    Style[
                    "tmax", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"]][{All, "tmax"}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{All, "tmax"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["tmin", 
                    Style[
                    "tmin", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"]][{All, "tmin"}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{All, "tmin"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["prcp", 
                    Style[
                    "prcp", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"]][{All, "prcp"}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{All, "prcp"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{1, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-01", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{1, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["50"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{1, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["29"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{1, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.01"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{1, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{2, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-02", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{2, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["60"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{2, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["48"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{2, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.07"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{2, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{3, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-03", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{3, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["67"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{3, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{3, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{3, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{4, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-04", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{4, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["70"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{4, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{4, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{4, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{5, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-05", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{5, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["68"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{5, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{5, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.12"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{5, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{6, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-06", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{6, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["61"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{6, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{6, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{6, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{7, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-07", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{7, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["65"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{7, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["52"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{7, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.98"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{7, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{8, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-08", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{8, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["55"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{8, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["40"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{8, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{8, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{9, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-09", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{9, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["55"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{9, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["34"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{9, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{9, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{10, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-10", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{10, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["56"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{10, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["40"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{10, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{10, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{11, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-11", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{11, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["56"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{11, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["40"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{11, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{11, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{12, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-12", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{12, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["44"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{12, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["34"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{12, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{12, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{13, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-13", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{13, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{13, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["36"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{13, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{13, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{14, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-14", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{14, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["43"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{14, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["32"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{14, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{14, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{15, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-15", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{15, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{15, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{15, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{15, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{16, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-16", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{16, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["26"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{16, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{16, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{16, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{17, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-17", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{17, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["30"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{17, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{17, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{17, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["18"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{18, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-18", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{18, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["48"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{18, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{18, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{18, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["19"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{19, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-19", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{19, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["51"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{19, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["38"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{19, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{19, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{20, 
                    Key[""]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["1874-01-20", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{20, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["51"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{20, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["34"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{20, 
                    Key["tmin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "84ab4ce6-348b-406b-8138-f79245288059"][{20, 
                    Key["prcp"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 54786, 1], {1, 54786 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 54786, 1], {1, 54786 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[54786, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[54786, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "84ab4ce6-348b-406b-8138-f79245288059"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "84ab4ce6-348b-406b-8138-f79245288059"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "84ab4ce6-348b-406b-8138-f79245288059"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "84ab4ce6-348b-406b-8138-f79245288059"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "84ab4ce6-348b-406b-8138-f79245288059"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 54786, 1], {1, 54786 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 54786, 1], {1, 54786 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    "84ab4ce6-348b-406b-8138-f79245288059", {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "84ab4ce6-348b-406b-8138-f79245288059"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "84ab4ce6-348b-406b-8138-f79245288059"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "84ab4ce6-348b-406b-8138-f79245288059"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "84ab4ce6-348b-406b-8138-f79245288059"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  "84ab4ce6-348b-406b-8138-f79245288059"][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {333., {302.63403309800196`, 308.36596690199804`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {333., {302.63403309800196`, 308.36596690199804`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 9365861804403440323194680520512148309768497839078912831704,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.932526227649133*^9, 3.9328673511075687`*^9, 3.932869923282476*^9, 
   3.93297567293073*^9, 3.9338200617634563`*^9, 3.9339037768323965`*^9, 
   3.9339040293897886`*^9, 3.93390407737875*^9, 3.9339042470449753`*^9, 
   3.933904988358123*^9, 3.9339070677394667`*^9, {3.9339071334349017`*^9, 
   3.933907161172797*^9}, {3.933907193461607*^9, 3.9339072019951754`*^9}, 
   3.9339073026652822`*^9, 3.93390738506371*^9, 3.933907474719205*^9, {
   3.933907517974207*^9, 3.933907524707252*^9}, {3.933907574402964*^9, 
   3.933907599450059*^9}, 3.933907660630046*^9, 3.9339077489194117`*^9, 
   3.9339097635953636`*^9, 3.9339115742992363`*^9, 3.9339116553907557`*^9, 
   3.933915092471547*^9, 3.933920402384266*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f650310d-7d09-4e91-98b2-42afb7b4c9c7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.933907273293955*^9, 3.933907311854475*^9},
 NumberMarks->False,
 CellLabel->"In[14]:=",ExpressionUUID->"048bce1f-80c5-4815-8ebd-88bb07cc7ae4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Procesiranje podatkov v uporabne oblike za nadaljno obdelovanje.\
\>", "Section",
 CellChangeTimes->{{3.9325260942076187`*^9, 3.9325261317801313`*^9}, {
  3.9328677737851353`*^9, 
  3.932867780808578*^9}},ExpressionUUID->"f5b3f871-ed71-466a-975c-\
c1edccb66453"],

Cell["\<\
Za risanje grafov ustvarimo tabele, s katerimi si bomo pomagali. Podatke za \
temperature sem preuredil, da so bolj primerni za na\[SHacek]e delo.
Ker imamo za po\[ZHacek]are podana le leta, sem se odlo\[CHacek]il, da bom \
delal kar s \[SHacek]tevilkami.
Pri temperaturah pa sem uporabil vrsto podatka \[OpenCurlyDoubleQuote]datum\
\[CloseCurlyDoubleQuote], ker imamo podane podatke za skoraj vsak dan v letu \
v obliki datuma.\
\>", "Text",
 CellChangeTimes->{{3.9339118913420076`*^9, 3.9339119137542114`*^9}, {
  3.933912964746066*^9, 3.933913112353094*^9}, {3.933920430961176*^9, 
  3.93392043403448*^9}, {3.9339223310050507`*^9, 3.933922332080143*^9}, {
  3.934027829127039*^9, 3.9340278307057858`*^9}, {3.934027881265561*^9, 
  3.9340278813144665`*^9}},ExpressionUUID->"e564cd88-fc16-42c4-82c5-\
fb2093343a77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", "datumObjekt_", "]"}], ":=", 
  RowBox[{
   RowBox[{"DateList", "[", "datumObjekt", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"povr\[SHacek]inaNaPo\[ZHacek]ar", "[", 
    RowBox[{"povr\[SHacek]ina_", ",", "\[SHacek]tPo\[ZHacek]arov_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"povr\[SHacek]ina", "/", "\[SHacek]tPo\[ZHacek]arov"}], "//", 
    "N"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[SHacek]teviloPodatkov", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Length", ",", "\"\<Year\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[SHacek]tpo\[ZHacek]arov", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{
     RowBox[{"podatki", "//", 
      RowBox[{"Query", "[", 
       RowBox[{"All", ",", "\"\<Fires\>\""}], "]"}]}], "//", "Normal"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmesneLetnice", "=", 
   RowBox[{
    RowBox[{"podatki", "//", 
     RowBox[{"Query", "[", 
      RowBox[{"All", ",", "\"\<Year\>\""}], "]"}]}], "//", "Normal"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"letnice", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", 
       RowBox[{"vmesneLetnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "\[SHacek]teviloPodatkov"}], "}"}]}], "]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pogorenaPovr\[SHacek]ina", "=", 
    RowBox[{"Reverse", "[", 
     RowBox[{
      RowBox[{"podatki", "//", 
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", "\"\<Acres\>\""}], "]"}]}], "//", "Normal"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FarnToCels", "[", "Temp_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Temp", "-", "30"}], ")"}], "/", "2"}], "//", "N"}], "//", 
    "Round"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Datum", "[", "datum_", "]"}], ":=", 
    RowBox[{"DateObject", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"datum", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<-0\>\"", ",", "\"\<-\>\""}], "}"}]}], "]"}]}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"podatki3", "=", 
   RowBox[{"podatki2", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"#", ",", 
        RowBox[{"\"\<Date\>\"", "\[Rule]", 
         RowBox[{"Datum", "[", "#Date", "]"}]}], ",", 
        RowBox[{"\"\<tmax\>\"", "->", 
         RowBox[{"FarnToCels", "[", "#tmax", "]"}]}]}], 
       "\[RightAssociation]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"podatki4", "=", 
   RowBox[{"podatki3", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"2019", ">=", 
        RowBox[{
         RowBox[{"DateList", "[", "#Date", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ">=", "1926"}], "&"}], "]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"podatkiTemp", "=", 
   RowBox[{"podatki4", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"KeyDrop", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<tmin\>\"", ",", "\"\<prcp\>\"", ",", "\"\<\>\""}], "}"}], 
      "]"}], "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datumTemp", "=", 
   RowBox[{
    RowBox[{"podatkiTemp", "//", 
     RowBox[{"Query", "[", 
      RowBox[{"All", ",", "\"\<Date\>\""}], "]"}]}], "//", "Normal"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxTemp", "=", 
   RowBox[{
    RowBox[{"podatkiTemp", "//", 
     RowBox[{"Query", "[", 
      RowBox[{"All", ",", "\"\<tmax\>\""}], "]"}]}], "//", "Normal"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[SHacek]teviloPodatkovTemp", "=", 
   RowBox[{"podatkiTemp", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Length", ",", "\"\<Date\>\""}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.932526088537495*^9, 3.9325260910929117`*^9}, {
   3.9325261720049763`*^9, 3.932526192532336*^9}, {3.932526248165558*^9, 
   3.932526273588915*^9}, {3.9325264652695465`*^9, 3.932526494618186*^9}, {
   3.932526552605215*^9, 3.9325266939706974`*^9}, {3.93252672874148*^9, 
   3.9325267291487427`*^9}, {3.9325267894065375`*^9, 
   3.9325268571780663`*^9}, {3.9325269596055927`*^9, 3.932526962637422*^9}, {
   3.932527221894001*^9, 3.932527257570397*^9}, {3.9325272893571787`*^9, 
   3.9325273513692117`*^9}, {3.9325274519018965`*^9, 
   3.9325274532907643`*^9}, {3.9328673614339647`*^9, 
   3.9328674375262423`*^9}, {3.932867491594219*^9, 3.9328677064491324`*^9}, {
   3.9328693607837467`*^9, 3.9328694026080704`*^9}, {3.932870371127906*^9, 
   3.932870420070671*^9}, {3.9338213782757516`*^9, 3.93382144038912*^9}, {
   3.9338234065556326`*^9, 3.9338235807644043`*^9}, {3.933823615964178*^9, 
   3.9338236224918804`*^9}, {3.9338236704200583`*^9, 
   3.9338237307549553`*^9}, {3.9338237798676825`*^9, 3.933823808811885*^9}, {
   3.933823854755496*^9, 3.933823891506995*^9}, {3.9338239375628414`*^9, 
   3.9338239456750484`*^9}, {3.933824510162424*^9, 3.9338246689064283`*^9}, {
   3.933824736514823*^9, 3.9338247571782975`*^9}, {3.9338248316221743`*^9, 
   3.933824976879225*^9}, {3.9338250095871315`*^9, 3.9338250495540423`*^9}, {
   3.9338251127878237`*^9, 3.9338251343060927`*^9}, {3.933825184082237*^9, 
   3.9338251842417774`*^9}, {3.9338258650977044`*^9, 
   3.9338258910604897`*^9}, {3.933907857853594*^9, 3.9339079696863585`*^9}, {
   3.9339080167736406`*^9, 3.9339080178384457`*^9}, {3.9339080605253377`*^9, 
   3.93390814591669*^9}, {3.9339082232773533`*^9, 3.933908288357379*^9}, {
   3.9339084365344152`*^9, 3.9339085261974792`*^9}, {3.9339086300527925`*^9, 
   3.9339086475414786`*^9}, {3.9339087396940465`*^9, 3.93390874424605*^9}, {
   3.9339087807255263`*^9, 3.9339088390375752`*^9}, {3.9339088767177486`*^9, 
   3.9339088786527863`*^9}, {3.9339089500381746`*^9, 
   3.9339090889570537`*^9}, {3.933909168062776*^9, 3.933909178828935*^9}, {
   3.9339092505824203`*^9, 3.9339092747134123`*^9}, {3.9339093161332817`*^9, 
   3.9339093305724015`*^9}, {3.933909367269495*^9, 3.9339094186606317`*^9}, {
   3.9339094629816427`*^9, 3.933909511524784*^9}, {3.933909546437477*^9, 
   3.933909625796472*^9}, {3.9339096682681017`*^9, 3.933909700708401*^9}, {
   3.9339097934453435`*^9, 3.933909801180932*^9}, {3.9339099205377097`*^9, 
   3.933909959940755*^9}, {3.9339101804692574`*^9, 3.933910293539556*^9}, {
   3.9339104002363596`*^9, 3.9339104553161097`*^9}, {3.933910487468759*^9, 
   3.933910505317371*^9}, 3.9339105354441023`*^9, 3.933910631668256*^9, {
   3.933910852539954*^9, 3.933910871923027*^9}, {3.933911337858965*^9, 
   3.9339113804666367`*^9}, {3.93391141509218*^9, 3.933911532955014*^9}, {
   3.9339115981887145`*^9, 3.9339116283484707`*^9}, {3.9339116740436845`*^9, 
   3.933911763770976*^9}, {3.933911829251852*^9, 3.933911876642475*^9}, {
   3.9339119815640774`*^9, 3.9339120756660757`*^9}, {3.9339121518667355`*^9, 
   3.9339122107446957`*^9}, {3.933912273331175*^9, 3.933912330794425*^9}, {
   3.933912471067005*^9, 3.9339124712754517`*^9}, {3.933912560729804*^9, 
   3.9339126672505603`*^9}, {3.9339127043153615`*^9, 3.933912705538339*^9}, {
   3.9339127908332233`*^9, 3.93391282081057*^9}, {3.933913240579131*^9, 
   3.9339133425228453`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"61040692-9fec-40d8-9546-78dabe795eb8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          9365861804403440323194680520512148309786944583152620433544], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Date"} -> 
            1, {All, "tmax"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Date" -> TypeSystem`PackageScope`AtomShape[75], "tmax" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 2, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Date", "tmax"}, {
             TypeSystem`Atom[DateObject], TypeSystem`AnyType}], 34333], 
         "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Date"} -> 
            1, {All, "tmax"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Date" -> TypeSystem`PackageScope`AtomShape[75], "tmax" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 2, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Date", "tmax"}, {
             TypeSystem`Atom[DateObject], TypeSystem`AnyType}], 34333], 
         "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2,
          "DataRowCount" -> 34333, "DataColumnCount" -> 2, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Date", 
                    Style[
                    "Date", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Date"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Date"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["tmax", 
                    Style[
                    "tmax", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "tmax"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "tmax"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 1 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Sat 2 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Sun 3 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Mon 4 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Tue 5 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Wed 6 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Thu 7 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 8 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Sat 9 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Sun 10 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Mon 11 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Tue 12 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Wed 13 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Thu 14 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 15 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Sat 16 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Sun 17 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Mon 18 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["18"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Tue 19 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Wed 20 Jan 1926\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["18"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["tmax"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 34333, 1], {1, 34333 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 34333, 1], {1, 34333 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[34333, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[34333, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 34333, 1], {1, 34333 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 34333, 1], {1, 34333 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             Module[{
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {183., {302.63403309800196`, 308.36596690199804`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {183., {302.63403309800196`, 308.36596690199804`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 9365861804403440323194680520512148309786944583152620433544,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.933911534887926*^9, {3.9339115812628326`*^9, 3.9339116289070086`*^9}, {
   3.9339116623003483`*^9, 3.933911676912196*^9}, {3.9339117491782217`*^9, 
   3.933911765120101*^9}, 3.9339118369686303`*^9, 3.933911879434164*^9, {
   3.933912052899208*^9, 3.933912077202082*^9}, 3.9339121627721515`*^9, 
   3.933912213413698*^9, 3.9339123345086823`*^9, 3.9339124772520065`*^9, 
   3.933912601962463*^9, {3.933912659518732*^9, 3.933912670465885*^9}, 
   3.9339128241030564`*^9, 3.933913348647221*^9, 3.9339151008736124`*^9, 
   3.9339204136265535`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ff39008e-1088-4b11-8b57-d7d52645620e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Risanje grafov za la\[ZHacek]jo predstavo podatkov.", "Section",
 CellChangeTimes->{
  3.9328677105494432`*^9, {3.9328677411448793`*^9, 3.9328677611006856`*^9}, {
   3.932867792864897*^9, 
   3.9328678211045675`*^9}},ExpressionUUID->"01f7cc6e-d90e-447d-b53b-\
3611731b54f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"letnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"\[SHacek]tpo\[ZHacek]arov", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "\[SHacek]teviloPodatkov"}], "}"}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Graf \[SHacek]tevila po\[ZHacek]arov\>\""}], ",", 
   RowBox[{"ImageSize", "->", "Full"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<leto\>\"", ",", "\"\<\[SHacek]tevilo po\[ZHacek]arov\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"letnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"pogorenaPovr\[SHacek]ina", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "\[SHacek]teviloPodatkov"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Graf pogorele povr\[SHacek]ine\>\""}], ",", 
   RowBox[{"ImageSize", "->", "Full"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<leto\>\"", ",", "\"\<Pogorela povr\[SHacek]ina (v hektarjih)\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"letnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"povr\[SHacek]inaNaPo\[ZHacek]ar", "[", 
        RowBox[{
         RowBox[{"pogorenaPovr\[SHacek]ina", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"\[SHacek]tpo\[ZHacek]arov", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "\[SHacek]teviloPodatkov"}], "}"}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Graf povpre\[CHacek]ne velikosti po\[ZHacek]arov\>\""}], ",", 
   RowBox[{"ImageSize", "->", "Full"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<leto\>\"", ",", 
      "\"\<Povpre\[CHacek]no pogorena povr\[SHacek]ina na po\[ZHacek]ar (v \
hektarjih)\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"datumTemp", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"maxTemp", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "\[SHacek]teviloPodatkovTemp"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Graf temperatur\>\""}], ",", 
   RowBox[{"ImageSize", "->", "Full"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<datum\>\"", ",", "\"\<temperatura\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.932867823789027*^9, 3.9328678427104053`*^9}, {
  3.9328683536976347`*^9, 3.9328685114647865`*^9}, {3.932869941665077*^9, 
  3.932869991463111*^9}, {3.932870176015312*^9, 3.932870350179631*^9}, {
  3.9328704364403396`*^9, 3.9328704494081984`*^9}, {3.93287050053435*^9, 
  3.932870609299269*^9}, {3.9328706412149925`*^9, 3.9328706486495447`*^9}, {
  3.932870739031135*^9, 3.9328709079426107`*^9}, {3.933825579603345*^9, 
  3.9338255996708837`*^9}, {3.933826149825691*^9, 3.933826158509598*^9}, {
  3.93390376246441*^9, 3.933903771952246*^9}, {3.933904041440448*^9, 
  3.9339040418482604`*^9}, {3.9339127118906517`*^9, 3.933912774601819*^9}, {
  3.933912828114086*^9, 3.933912858402564*^9}, {3.933913366835208*^9, 
  3.9339133908986673`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"52bdb619-73c1-404d-ac96-b3b29814fd83"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJwt1E9Ik3Ecx/EnXc1MY1GHHTw8gYcNDHbwMHDCIg87DHoIK4MRD2HwFEIP
NGyBxCobiwxGCAVGDirysMMOUTt0sOhgYKHgQbLDDpGjhq5Sm2lR7vMWxo8X
v9/v++/54eFzl06cbzIM4+z/387a+PM/iu4svgsbjdXokEOnm482bMq1q7vl
Tjl1xZADsml55S7Z/bhHDsn14x65W84d2SWH5fAS+SJyzGQ/KjuT++Q+eWaC
+DE5cKZNjpNvfa9syf4l6uuXi3aLPCDPXeR8gv0CtuWKh34H5fTlv5qXw3kv
8xki/w3iu9R/jP0k83lGPSnm4ZJvhHq8zCstT23R7yj555vkrLx4n/hjcrnE
/HLUfxOPy0ZiTesD2V7+JT/EdzflPP314iey1V6Xp3g/wW25IJdaqb9IPIf9
53L09ZZcwpU/8iviZZjvNPkn8FvmV+D+DPMocX+W/od/y3Ny3uH+AvXPUs8i
9X1gPp/k6WG+d5n3c71d/kz+XuZd4Xu9aJWr5P/Ge64Rv8D7XOO8u1+uE/8k
8baZx/t51WdMys0LskeuBfl+LXJoE7dx3vku++TyG3xIzn9Zlv2yr6cmd7B/
7YdsyuapdbmT+C+rcoD81k+5i/sHqSckFzO8r27uB8kX5v477kdkd5z/R1Hi
3cJ99J8hfoz6V+kvzvkDq7KFN3A/5+PkH8BZ6kvIuSrxbeqLUd+gnI5gh/17
5B9i3n7m5+I75EvKdg/zT8nG1xWtI/T/mPNp+r2NR5lnknxZ4iX4HmP0+7QS
/Qc+1Ca8
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJwt1E9Ik3Ecx/EnXc1MY1GHHTw8gYcNDHbwMHDCIg87DHoIK4MRD2HwFEIP
NGyBxCobiwxGCAVGDirysMMOUTt0sOhgYKHgQbLDDpGjhq5Sm2lR7vMWxo8X
v9/v++/54eFzl06cbzIM4+z/387a+PM/iu4svgsbjdXokEOnm482bMq1q7vl
Tjl1xZADsml55S7Z/bhHDsn14x65W84d2SWH5fAS+SJyzGQ/KjuT++Q+eWaC
+DE5cKZNjpNvfa9syf4l6uuXi3aLPCDPXeR8gv0CtuWKh34H5fTlv5qXw3kv
8xki/w3iu9R/jP0k83lGPSnm4ZJvhHq8zCstT23R7yj555vkrLx4n/hjcrnE
/HLUfxOPy0ZiTesD2V7+JT/EdzflPP314iey1V6Xp3g/wW25IJdaqb9IPIf9
53L09ZZcwpU/8iviZZjvNPkn8FvmV+D+DPMocX+W/od/y3Ny3uH+AvXPUs8i
9X1gPp/k6WG+d5n3c71d/kz+XuZd4Xu9aJWr5P/Ge64Rv8D7XOO8u1+uE/8k
8baZx/t51WdMys0LskeuBfl+LXJoE7dx3vku++TyG3xIzn9Zlv2yr6cmd7B/
7YdsyuapdbmT+C+rcoD81k+5i/sHqSckFzO8r27uB8kX5v477kdkd5z/R1Hi
3cJ99J8hfoz6V+kvzvkDq7KFN3A/5+PkH8BZ6kvIuSrxbeqLUd+gnI5gh/17
5B9i3n7m5+I75EvKdg/zT8nG1xWtI/T/mPNp+r2NR5lnknxZ4iX4HmP0+7QS
/Qc+1Ca8
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1924.0625000000043`, 2019.}, {0, 249370.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1924.0625000000043`, 0}, 
           "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1924.0625000000043`, 2019.}, {0, 249370.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1924.0625000000043`, 0}, 
          "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJwt1E9Ik3Ecx/EnXc1MY1GHHTw8gYcNDHbwMHDCIg87DHoIK4MRD2HwFEIP
NGyBxCobiwxGCAVGDirysMMOUTt0sOhgYKHgQbLDDpGjhq5Sm2lR7vMWxo8X
v9/v++/54eFzl06cbzIM4+z/387a+PM/iu4svgsbjdXokEOnm482bMq1q7vl
Tjl1xZADsml55S7Z/bhHDsn14x65W84d2SWH5fAS+SJyzGQ/KjuT++Q+eWaC
+DE5cKZNjpNvfa9syf4l6uuXi3aLPCDPXeR8gv0CtuWKh34H5fTlv5qXw3kv
8xki/w3iu9R/jP0k83lGPSnm4ZJvhHq8zCstT23R7yj555vkrLx4n/hjcrnE
/HLUfxOPy0ZiTesD2V7+JT/EdzflPP314iey1V6Xp3g/wW25IJdaqb9IPIf9
53L09ZZcwpU/8iviZZjvNPkn8FvmV+D+DPMocX+W/od/y3Ny3uH+AvXPUs8i
9X1gPp/k6WG+d5n3c71d/kz+XuZd4Xu9aJWr5P/Ge64Rv8D7XOO8u1+uE/8k
8baZx/t51WdMys0LskeuBfl+LXJoE7dx3vku++TyG3xIzn9Zlv2yr6cmd7B/
7YdsyuapdbmT+C+rcoD81k+5i/sHqSckFzO8r27uB8kX5v477kdkd5z/R1Hi
3cJ99J8hfoz6V+kvzvkDq7KFN3A/5+PkH8BZ6kvIuSrxbeqLUd+gnI5gh/17
5B9i3n7m5+I75EvKdg/zT8nG1xWtI/T/mPNp+r2NR5lnknxZ4iX4HmP0+7QS
/Qc+1Ca8
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1924.0625000000043`, 2019.}, {0, 249370.}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1924.0625000000043`, 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[SHacek]tevilo po\[ZHacek]arov\"", HoldForm], 
     TraditionalForm]},
  AxesOrigin->{1924.0625000000043`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graf \[SHacek]tevila po\[ZHacek]arov\"", TraditionalForm],
  PlotRange->{{1924.0625000000043`, 2019.}, {0, 249370.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.920557871172686*^9, {3.9303042259882245`*^9, 3.930304229969122*^9}, 
   3.9303043618282967`*^9, 3.9303044507963667`*^9, 3.930304593439413*^9, {
   3.9303046275773535`*^9, 3.930304664985619*^9}, {3.9303049158653235`*^9, 
   3.930304934426174*^9}, {3.930305143913802*^9, 3.9303051877561755`*^9}, {
   3.9303053200574684`*^9, 3.930305375299013*^9}, {3.932526203735988*^9, 
   3.932526275626501*^9}, {3.932526473855691*^9, 3.9325264953422604`*^9}, 
   3.932526694806386*^9, 3.9325267308710933`*^9, {3.9325267995724*^9, 
   3.9325268158439984`*^9}, {3.9325268489682755`*^9, 3.9325268577984085`*^9}, 
   3.93252696574422*^9, {3.932527226247427*^9, 3.9325272473281727`*^9}, 
   3.932527291853053*^9, 3.9325273404308767`*^9, 3.9325274536588154`*^9, {
   3.932867388065341*^9, 3.932867437882292*^9}, {3.9328674967542877`*^9, 
   3.9328675240102406`*^9}, 3.9328676100573497`*^9, {3.93286765633497*^9, 
   3.9328676861740417`*^9}, {3.932867826971655*^9, 3.932867843076426*^9}, {
   3.9328684506657753`*^9, 3.932868475089347*^9}, 3.9328685134343557`*^9, 
   3.932869408447324*^9, 3.9328699324425564`*^9, {3.9328699846570272`*^9, 
   3.9328699924964237`*^9}, {3.9328702403680243`*^9, 3.9328702617259674`*^9}, 
   3.9328703544772844`*^9, {3.932870408470624*^9, 3.932870443435993*^9}, 
   3.9328705011257725`*^9, 3.932870593231829*^9, 3.9328707913305283`*^9, 
   3.932870848409088*^9, 3.932870908642969*^9, 3.9329756845995245`*^9, 
   3.9338200691140537`*^9, 3.9338251895445604`*^9, 3.9338256009931173`*^9, 
   3.933825898553578*^9, 3.9338261589891987`*^9, 3.9339037838059273`*^9, 
   3.9339124992243547`*^9, 3.933912859811907*^9, 3.933913392123658*^9, 
   3.9339151051780386`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a1b23236-c934-4382-9520-8270249f5ef4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJw102tIU3EYx/G11g27CRqjNBeJTFm1TMGY5QwrWzp1aRmZM7Owck1ymIbK
0LUm+MLEyu5WJt2QXjQoihC6mlKBKVIKS3whZFYQXaCr5/s4GIcPv+f5n///
nPMsKXTa9qhVKlX+///EVflpL5gnLl7j4WTFYYo7q+21WKfYveKRB0fijCAv
1mPdmA8b6O84KzbitrnSH0f9jY/iBMXmhV/qcCL5lPEqbKbfckbqU8hd31w4
lfxlhBunkffPqsaZnK+hvQJnk/uWV+Jc8ncFNTiPvKdPXEB+vNGJi8jbB0tx
Ma67X4ZLqN8XVY5LcWWz9LtwcL4DV+Arp8VVOLqxCLtx0rwD2IO1M3ZjH/49
UIAb8PCzfNyIDau242as11hwCzZP34TPYaM/A7diU2gWbuO84TEb8TXyU4ul
/hYORO/At3m/n9SZ+A75qCkF3yVfVibrP2D9vU/EndS/ipT+x9RbPXKe59Qf
mir776E+1ib1r/GxKLnfG1y/eg0eoN/0fT0eJLfnmHCAPLpmCx4hr52TikfJ
3f3peIz8atcG/Jn9eoOz8Vfq7Ttt+Af1+w3r8C/cFBuHVRcV/zy6EmsUu+u1
sv5M8qGHcr7ZOHBT1ptP/fAi2X8I+fh7OZ9WsTn9kjzvMHK/T9bX4esnkmT+
8VOH9OtZPz5E3r+B/HJoosw/ee/SbTL/+G+3PO8E6vUWOW8i+zGV58j84/i4
PJl/+p1rN8v8028rlu8tDU9LsMr84wUjMg/ZiluHmmRechXrYvoKZf7J/S92
yfzT7zDK+yvi/n9ObpX5J1eHyzyVKA60nJf1SxV39nbJei76rUfk+6zAHQfl
PFXc/0OGzLeb/rcaeR4e3BAxOf/0q+5Nzj/7CerOSv4H/Tolsg==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJw102tIU3EYx/G11g27CRqjNBeJTFm1TMGY5QwrWzp1aRmZM7Owck1ymIbK
0LUm+MLEyu5WJt2QXjQoihC6mlKBKVIKS3whZFYQXaCr5/s4GIcPv+f5n///
nPMsKXTa9qhVKlX+///EVflpL5gnLl7j4WTFYYo7q+21WKfYveKRB0fijCAv
1mPdmA8b6O84KzbitrnSH0f9jY/iBMXmhV/qcCL5lPEqbKbfckbqU8hd31w4
lfxlhBunkffPqsaZnK+hvQJnk/uWV+Jc8ncFNTiPvKdPXEB+vNGJi8jbB0tx
Ma67X4ZLqN8XVY5LcWWz9LtwcL4DV+Arp8VVOLqxCLtx0rwD2IO1M3ZjH/49
UIAb8PCzfNyIDau242as11hwCzZP34TPYaM/A7diU2gWbuO84TEb8TXyU4ul
/hYORO/At3m/n9SZ+A75qCkF3yVfVibrP2D9vU/EndS/ipT+x9RbPXKe59Qf
mir776E+1ib1r/GxKLnfG1y/eg0eoN/0fT0eJLfnmHCAPLpmCx4hr52TikfJ
3f3peIz8atcG/Jn9eoOz8Vfq7Ttt+Af1+w3r8C/cFBuHVRcV/zy6EmsUu+u1
sv5M8qGHcr7ZOHBT1ptP/fAi2X8I+fh7OZ9WsTn9kjzvMHK/T9bX4esnkmT+
8VOH9OtZPz5E3r+B/HJoosw/ee/SbTL/+G+3PO8E6vUWOW8i+zGV58j84/i4
PJl/+p1rN8v8028rlu8tDU9LsMr84wUjMg/ZiluHmmRechXrYvoKZf7J/S92
yfzT7zDK+yvi/n9ObpX5J1eHyzyVKA60nJf1SxV39nbJei76rUfk+6zAHQfl
PFXc/0OGzLeb/rcaeR4e3BAxOf/0q+5Nzj/7CerOSv4H/Tolsg==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1924.0625000000043`, 2019.}, {0, 5.2266*^7}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1924.0625000000043`, 0}, 
           "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1924.0625000000043`, 2019.}, {0, 5.2266*^7}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1924.0625000000043`, 0}, 
          "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJw102tIU3EYx/G11g27CRqjNBeJTFm1TMGY5QwrWzp1aRmZM7Owck1ymIbK
0LUm+MLEyu5WJt2QXjQoihC6mlKBKVIKS3whZFYQXaCr5/s4GIcPv+f5n///
nPMsKXTa9qhVKlX+///EVflpL5gnLl7j4WTFYYo7q+21WKfYveKRB0fijCAv
1mPdmA8b6O84KzbitrnSH0f9jY/iBMXmhV/qcCL5lPEqbKbfckbqU8hd31w4
lfxlhBunkffPqsaZnK+hvQJnk/uWV+Jc8ncFNTiPvKdPXEB+vNGJi8jbB0tx
Ma67X4ZLqN8XVY5LcWWz9LtwcL4DV+Arp8VVOLqxCLtx0rwD2IO1M3ZjH/49
UIAb8PCzfNyIDau242as11hwCzZP34TPYaM/A7diU2gWbuO84TEb8TXyU4ul
/hYORO/At3m/n9SZ+A75qCkF3yVfVibrP2D9vU/EndS/ipT+x9RbPXKe59Qf
mir776E+1ib1r/GxKLnfG1y/eg0eoN/0fT0eJLfnmHCAPLpmCx4hr52TikfJ
3f3peIz8atcG/Jn9eoOz8Vfq7Ttt+Af1+w3r8C/cFBuHVRcV/zy6EmsUu+u1
sv5M8qGHcr7ZOHBT1ptP/fAi2X8I+fh7OZ9WsTn9kjzvMHK/T9bX4esnkmT+
8VOH9OtZPz5E3r+B/HJoosw/ee/SbTL/+G+3PO8E6vUWOW8i+zGV58j84/i4
PJl/+p1rN8v8028rlu8tDU9LsMr84wUjMg/ZiluHmmRechXrYvoKZf7J/S92
yfzT7zDK+yvi/n9ObpX5J1eHyzyVKA60nJf1SxV39nbJei76rUfk+6zAHQfl
PFXc/0OGzLeb/rcaeR4e3BAxOf/0q+5Nzj/7CerOSv4H/Tolsg==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1924.0625000000043`, 2019.}, {0, 5.2266*^7}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1924.0625000000043`, 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Pogorela povr\[SHacek]ina (v hektarjih)\"", HoldForm], 
     TraditionalForm]},
  AxesOrigin->{1924.0625000000043`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Graf pogorele povr\[SHacek]ine\"", TraditionalForm],
  PlotRange->{{1924.0625000000043`, 2019.}, {0, 5.2266*^7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.920557871172686*^9, {3.9303042259882245`*^9, 3.930304229969122*^9}, 
   3.9303043618282967`*^9, 3.9303044507963667`*^9, 3.930304593439413*^9, {
   3.9303046275773535`*^9, 3.930304664985619*^9}, {3.9303049158653235`*^9, 
   3.930304934426174*^9}, {3.930305143913802*^9, 3.9303051877561755`*^9}, {
   3.9303053200574684`*^9, 3.930305375299013*^9}, {3.932526203735988*^9, 
   3.932526275626501*^9}, {3.932526473855691*^9, 3.9325264953422604`*^9}, 
   3.932526694806386*^9, 3.9325267308710933`*^9, {3.9325267995724*^9, 
   3.9325268158439984`*^9}, {3.9325268489682755`*^9, 3.9325268577984085`*^9}, 
   3.93252696574422*^9, {3.932527226247427*^9, 3.9325272473281727`*^9}, 
   3.932527291853053*^9, 3.9325273404308767`*^9, 3.9325274536588154`*^9, {
   3.932867388065341*^9, 3.932867437882292*^9}, {3.9328674967542877`*^9, 
   3.9328675240102406`*^9}, 3.9328676100573497`*^9, {3.93286765633497*^9, 
   3.9328676861740417`*^9}, {3.932867826971655*^9, 3.932867843076426*^9}, {
   3.9328684506657753`*^9, 3.932868475089347*^9}, 3.9328685134343557`*^9, 
   3.932869408447324*^9, 3.9328699324425564`*^9, {3.9328699846570272`*^9, 
   3.9328699924964237`*^9}, {3.9328702403680243`*^9, 3.9328702617259674`*^9}, 
   3.9328703544772844`*^9, {3.932870408470624*^9, 3.932870443435993*^9}, 
   3.9328705011257725`*^9, 3.932870593231829*^9, 3.9328707913305283`*^9, 
   3.932870848409088*^9, 3.932870908642969*^9, 3.9329756845995245`*^9, 
   3.9338200691140537`*^9, 3.9338251895445604`*^9, 3.9338256009931173`*^9, 
   3.933825898553578*^9, 3.9338261589891987`*^9, 3.9339037838059273`*^9, 
   3.9339124992243547`*^9, 3.933912859811907*^9, 3.933913392123658*^9, 
   3.933915105696248*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"211c0f92-a373-4977-b2d1-15d0d8fa9b26"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJw11AtQlFUUAOAt2pIEoZEcEEqUhURoBBZkZ0E4PFaJV7gsAvIGeQwvF4FY
EIgQWSxkUHRGJjxXah1IHCAmE6YVKKg1oixglFCJGTYrhscOU+FADm2e2z/z
zz/fnP+/595z/nt3p5+QZz4vEAiSjfd/z2eXNYJh0ns5u0kJz2yH0BVYmOOa
VUi2R+ifFpb3rXCLEJy7Z/xS80rJexEsPrn32sjOIrIrwmj+ZGK9lNsN4Xq7
KnRH6wmyJ8JzthM3g6qLyRKES1uHpR+9wvP7Iqza+klNX8ojA4JJxySzmc0m
ByMsP1516OxKIocgNAVo9GfF6eRwBFGMqWnLr2nkKARL/8qakoZUsgLhwvn0
z3equeMQBkOnXq7clUFORPjyzMG/wry5UxH2FBXueVyfQj6OkDKxuOLZz8fP
QXh6d6713IvJ5HwEW8N3G4MLiWQlQpvZ4lfykVhyCUKR2dOxuEfRZBWCJtu/
99EVObkSISPlh5I/8qPINQj7parV2ns8XofwTZeX5/k3ebwBoXXbqULNWgi5
EUH3sWLOcSyM3IwgOOOj3C48TL6I4LhtS8D2k8Hkywih6CQUDgO5DSG9xeAx
MBNEvoow76RqC+uUkTUIgSKTroGf/MidCHcOtkhzugPIN4z1lE8eq+jh7/ci
6OuWyoJMA8mfIVyz2KpxVXiT+xHkg5bmX3fxuNaYvy7aVdnOPYwQ3SEpuD3H
5zdqnE/9Ddb4XgT5DsLEKVhTL0vJ4whz7od/dtby+f+IsDnwvXmFpxd5CsHe
vW6h29eNPI1wJbPMbVorJj9E0MKDDyXN+8hzCD0DTusyEf9eb/z/FrqtCl73
IP9uXK9o3vHvWXfyIsKOlFWTmAgeNyC8e9RL3ZJ5gPwnwhfTE2pxJM/3BMGj
NDd1KdCF/A9CbNXaNb83eL8FDBIfqr4VCMPJLzC4VTBqVtbA672FgcFRt9uk
w59sxqBJKi56x5nHLRlohrojxw8cIVsxOK3c0B27zutrzaAi11zjmMbjdgz6
pt6/31rN62fPYPykcDCph/dLxMBH1lt1v5n3fy8DWdb+oIiht8iuDByCXq0a
TOPrdWMwcVl/VV3+NtmTwYMsH0HSRf5/SBjkyW+x0BzeD18GTLeykZEbSQYG
abVHchNNFeRgBhub8epDvvz7EAbTIeu/aYvjyOEMLrUnFPyyi+eLYlCqXS93
XOL7U2Gsj7rQ5bTs//3PwCUhz86zLZ6cyGCoVD//qVcCOZWBlQzqbg7z/Xbc
OL7M4QOLMd6fHAbpm8sZYTq+v/KN61lU+Men8fNJyaDYTGkoFvPzosSY36JH
ktB3lKxiUF07si8lk/e3kgEm3xZKLqSTa4z9zu0Rn4vh669jMLPmYh2k5uM1
MHiiP2QTPcvfb2SguytWrdnEwr80J8XG
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJw11AtQlFUUAOAt2pIEoZEcEEqUhURoBBZkZ0E4PFaJV7gsAvIGeQwvF4FY
EIgQWSxkUHRGJjxXah1IHCAmE6YVKKg1oixglFCJGTYrhscOU+FADm2e2z/z
zz/fnP+/595z/nt3p5+QZz4vEAiSjfd/z2eXNYJh0ns5u0kJz2yH0BVYmOOa
VUi2R+ifFpb3rXCLEJy7Z/xS80rJexEsPrn32sjOIrIrwmj+ZGK9lNsN4Xq7
KnRH6wmyJ8JzthM3g6qLyRKES1uHpR+9wvP7Iqza+klNX8ojA4JJxySzmc0m
ByMsP1516OxKIocgNAVo9GfF6eRwBFGMqWnLr2nkKARL/8qakoZUsgLhwvn0
z3equeMQBkOnXq7clUFORPjyzMG/wry5UxH2FBXueVyfQj6OkDKxuOLZz8fP
QXh6d6713IvJ5HwEW8N3G4MLiWQlQpvZ4lfykVhyCUKR2dOxuEfRZBWCJtu/
99EVObkSISPlh5I/8qPINQj7parV2ns8XofwTZeX5/k3ebwBoXXbqULNWgi5
EUH3sWLOcSyM3IwgOOOj3C48TL6I4LhtS8D2k8Hkywih6CQUDgO5DSG9xeAx
MBNEvoow76RqC+uUkTUIgSKTroGf/MidCHcOtkhzugPIN4z1lE8eq+jh7/ci
6OuWyoJMA8mfIVyz2KpxVXiT+xHkg5bmX3fxuNaYvy7aVdnOPYwQ3SEpuD3H
5zdqnE/9Ddb4XgT5DsLEKVhTL0vJ4whz7od/dtby+f+IsDnwvXmFpxd5CsHe
vW6h29eNPI1wJbPMbVorJj9E0MKDDyXN+8hzCD0DTusyEf9eb/z/FrqtCl73
IP9uXK9o3vHvWXfyIsKOlFWTmAgeNyC8e9RL3ZJ5gPwnwhfTE2pxJM/3BMGj
NDd1KdCF/A9CbNXaNb83eL8FDBIfqr4VCMPJLzC4VTBqVtbA672FgcFRt9uk
w59sxqBJKi56x5nHLRlohrojxw8cIVsxOK3c0B27zutrzaAi11zjmMbjdgz6
pt6/31rN62fPYPykcDCph/dLxMBH1lt1v5n3fy8DWdb+oIiht8iuDByCXq0a
TOPrdWMwcVl/VV3+NtmTwYMsH0HSRf5/SBjkyW+x0BzeD18GTLeykZEbSQYG
abVHchNNFeRgBhub8epDvvz7EAbTIeu/aYvjyOEMLrUnFPyyi+eLYlCqXS93
XOL7U2Gsj7rQ5bTs//3PwCUhz86zLZ6cyGCoVD//qVcCOZWBlQzqbg7z/Xbc
OL7M4QOLMd6fHAbpm8sZYTq+v/KN61lU+Men8fNJyaDYTGkoFvPzosSY36JH
ktB3lKxiUF07si8lk/e3kgEm3xZKLqSTa4z9zu0Rn4vh669jMLPmYh2k5uM1
MHiiP2QTPcvfb2SguytWrdnEwr80J8XG
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1924.0625000000043`, 2019.}, {
             0, 342.71099744245527`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1924.0625000000043`, 0}, 
           "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1924.0625000000043`, 2019.}, {
            0, 342.71099744245527`}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1924.0625000000043`, 0}, 
          "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJw11AtQlFUUAOAt2pIEoZEcEEqUhURoBBZkZ0E4PFaJV7gsAvIGeQwvF4FY
EIgQWSxkUHRGJjxXah1IHCAmE6YVKKg1oixglFCJGTYrhscOU+FADm2e2z/z
zz/fnP+/595z/nt3p5+QZz4vEAiSjfd/z2eXNYJh0ns5u0kJz2yH0BVYmOOa
VUi2R+ifFpb3rXCLEJy7Z/xS80rJexEsPrn32sjOIrIrwmj+ZGK9lNsN4Xq7
KnRH6wmyJ8JzthM3g6qLyRKES1uHpR+9wvP7Iqza+klNX8ojA4JJxySzmc0m
ByMsP1516OxKIocgNAVo9GfF6eRwBFGMqWnLr2nkKARL/8qakoZUsgLhwvn0
z3equeMQBkOnXq7clUFORPjyzMG/wry5UxH2FBXueVyfQj6OkDKxuOLZz8fP
QXh6d6713IvJ5HwEW8N3G4MLiWQlQpvZ4lfykVhyCUKR2dOxuEfRZBWCJtu/
99EVObkSISPlh5I/8qPINQj7parV2ns8XofwTZeX5/k3ebwBoXXbqULNWgi5
EUH3sWLOcSyM3IwgOOOj3C48TL6I4LhtS8D2k8Hkywih6CQUDgO5DSG9xeAx
MBNEvoow76RqC+uUkTUIgSKTroGf/MidCHcOtkhzugPIN4z1lE8eq+jh7/ci
6OuWyoJMA8mfIVyz2KpxVXiT+xHkg5bmX3fxuNaYvy7aVdnOPYwQ3SEpuD3H
5zdqnE/9Ddb4XgT5DsLEKVhTL0vJ4whz7od/dtby+f+IsDnwvXmFpxd5CsHe
vW6h29eNPI1wJbPMbVorJj9E0MKDDyXN+8hzCD0DTusyEf9eb/z/FrqtCl73
IP9uXK9o3vHvWXfyIsKOlFWTmAgeNyC8e9RL3ZJ5gPwnwhfTE2pxJM/3BMGj
NDd1KdCF/A9CbNXaNb83eL8FDBIfqr4VCMPJLzC4VTBqVtbA672FgcFRt9uk
w59sxqBJKi56x5nHLRlohrojxw8cIVsxOK3c0B27zutrzaAi11zjmMbjdgz6
pt6/31rN62fPYPykcDCph/dLxMBH1lt1v5n3fy8DWdb+oIiht8iuDByCXq0a
TOPrdWMwcVl/VV3+NtmTwYMsH0HSRf5/SBjkyW+x0BzeD18GTLeykZEbSQYG
abVHchNNFeRgBhub8epDvvz7EAbTIeu/aYvjyOEMLrUnFPyyi+eLYlCqXS93
XOL7U2Gsj7rQ5bTs//3PwCUhz86zLZ6cyGCoVD//qVcCOZWBlQzqbg7z/Xbc
OL7M4QOLMd6fHAbpm8sZYTq+v/KN61lU+Men8fNJyaDYTGkoFvPzosSY36JH
ktB3lKxiUF07si8lk/e3kgEm3xZKLqSTa4z9zu0Rn4vh669jMLPmYh2k5uM1
MHiiP2QTPcvfb2SguytWrdnEwr80J8XG
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1924.0625000000043`, 2019.}, {
          0, 342.71099744245527`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1924.0625000000043`, 0}, 
        "ImageSize" -> {680, 680/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
     "\"Povpre\[CHacek]no pogorena povr\[SHacek]ina na po\[ZHacek]ar (v \
hektarjih)\"", HoldForm], TraditionalForm]},
  AxesOrigin->{1924.0625000000043`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graf povpre\[CHacek]ne velikosti po\[ZHacek]arov\"", TraditionalForm],
  PlotRange->{{1924.0625000000043`, 2019.}, {0, 342.71099744245527`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.920557871172686*^9, {3.9303042259882245`*^9, 3.930304229969122*^9}, 
   3.9303043618282967`*^9, 3.9303044507963667`*^9, 3.930304593439413*^9, {
   3.9303046275773535`*^9, 3.930304664985619*^9}, {3.9303049158653235`*^9, 
   3.930304934426174*^9}, {3.930305143913802*^9, 3.9303051877561755`*^9}, {
   3.9303053200574684`*^9, 3.930305375299013*^9}, {3.932526203735988*^9, 
   3.932526275626501*^9}, {3.932526473855691*^9, 3.9325264953422604`*^9}, 
   3.932526694806386*^9, 3.9325267308710933`*^9, {3.9325267995724*^9, 
   3.9325268158439984`*^9}, {3.9325268489682755`*^9, 3.9325268577984085`*^9}, 
   3.93252696574422*^9, {3.932527226247427*^9, 3.9325272473281727`*^9}, 
   3.932527291853053*^9, 3.9325273404308767`*^9, 3.9325274536588154`*^9, {
   3.932867388065341*^9, 3.932867437882292*^9}, {3.9328674967542877`*^9, 
   3.9328675240102406`*^9}, 3.9328676100573497`*^9, {3.93286765633497*^9, 
   3.9328676861740417`*^9}, {3.932867826971655*^9, 3.932867843076426*^9}, {
   3.9328684506657753`*^9, 3.932868475089347*^9}, 3.9328685134343557`*^9, 
   3.932869408447324*^9, 3.9328699324425564`*^9, {3.9328699846570272`*^9, 
   3.9328699924964237`*^9}, {3.9328702403680243`*^9, 3.9328702617259674`*^9}, 
   3.9328703544772844`*^9, {3.932870408470624*^9, 3.932870443435993*^9}, 
   3.9328705011257725`*^9, 3.932870593231829*^9, 3.9328707913305283`*^9, 
   3.932870848409088*^9, 3.932870908642969*^9, 3.9329756845995245`*^9, 
   3.9338200691140537`*^9, 3.9338251895445604`*^9, 3.9338256009931173`*^9, 
   3.933825898553578*^9, 3.9338261589891987`*^9, 3.9339037838059273`*^9, 
   3.9339124992243547`*^9, 3.933912859811907*^9, 3.933913392123658*^9, 
   3.9339151057540855`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"c540ff0c-084f-48b8-8637-356d5cf6f9dd"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[2], 
      LineBox[CompressedData["
1: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
9Sveh+v3lWVz/5nel/ffwv3Yf0/60X5if+znMu8A6CnuD2D8owdy/8s+CPPL
W4MY/zCFftQZB3P/ujIYesiBQ7h/pxnK+8c5y+b5q/cw+k8+nOv3FFl3HUH/
iUZy/R4ZiXhEh1G8f8QZzfz3j6b/VmPQLyL6WKxPvdOyOb9uMo77b8Tx6Cex
ZTz01PUnMP7QE7l/riOLWpO4f/whqxWTqX+VKR6b56fvU6j/oqlcP+Wmsf8+
TsP1Yt501EuXmOGxeX99TZYzZnoceL4TRWaB9VPLgf1VTZrN9Z9vDuv/YA71
GzOX9jnm8f5527J5/ho+n/2faQHX79UF1H/QQvZ/Wj/9n/cjPtVnEfsnaDHt
Ty9GvLrbEqxXlXgp7Y9aNv3XcRn9x12OfNSB5ainbL2C9YuxkvnvWol6q6ar
cL2MtBr1FltXM/4Ga7h+w6z12Lz/rLds3v9qr4M//Xcd8lEr17N+VTdgfYgf
G5CfXryR/Vd+E/v30ybGP38z/Zfcwv3zzRbmP3Mr5hdyG1g/24br1eTt9J9/
B/e/hztwvR67k/Hn3AW95J1d9D9iN+PPvIf1u7aH8au9XP/p9nH/u7AP9VR9
90MvmeKAx+b9NdiyWb/dNVglOUj7YwdZ/06HMJ+Od5j5a7Jsc4T6xTzK/tt9
lPk3O4Z4ZOTjrP+249S/4QnWL+xJ9JvccJL2dU4hHy1Oc/9cZdnsv9WCaf/T
sjn/WXKG+Vc4C33kZ7JYcI77b6nzGFdvz0MPOesC9St6kevn+UXWb8ol9Iss
cJn2jy4jXj3uCta7ynWV8d+9iuvFyGvUL8t1sLp+nfUbfIP26W+yfy7epH79
btE+5W3an7lN/z3usP5J77J/j1s25/ed7yFfHd+l/4Mu7dvep/9YDxj/HrJq
/pD6RXnE+m8n60aPqV+4J7Tf+IT+6z5FPjrEM+7fq5/heln9OfpV/HrO+i99
wfwrvuT+9YUsFr5i/KVfe2zO/99ZDpw3y9lvwKLYW9q/eEv/U9/x/lPwPfN/
/B711uM/ID+V+yPjv0cWoz7Rf9bP7P8bn1n/IV/YPxm+Ur9LX1m//t/oP9V3
xn+WrHv+oH2yn7Q/Ydns/11+cf9I8Jv6HSLLdn/oP/Zf+t/7F/OrFuIU9p+o
ITw2n7/uCIFx3Tjkqf/Go8KHOvXfeshNlo3/eqHBOmQYXK/WWDb9XyPsKdTv
d1jaLwsHVpXCg+XX8JhP+CN4bPqnTETG/z4i458TCeOieGSPzfp7GRnxqWlR
PDb9Xygq5hNPyHpCNI9N/+WJjvmkG53+R8dg/NligtVNy2b/HxrLY7P/Z4xN
+8uxkY8aEAcsU8f12Dz/n4vL/HvFY/2c+MhHnozP+nVNwPolTMj6HU6IfGX7
ROyfOIlpvy8x42+ZhP0bLSnz35mU+fuSUb8IDvXb7GA+UT851oMOFYT51dog
+q+ZwmNzfvvHsnn+X54S16vKqTCf/EYWi1Iz/7Jp6P9DGvqfm5b2JdKB9Suy
mp6e+hfOwPyfZqB+EzNSv7yZ0C/yfiaMizGZoYfOngV6qFuWzfvTsKxgkSmb
x+b9+Uo2zKcGZvfYPL+lycH8z+dAfrp3TvpPnov6n8rF+Lvlpn2iPMz/SB7q
3yGvx+b8IG4+sN6fj/5b5ad99AKMfxdZNynI/olYyGPz/rulEO0bFKZ96CKs
/7oiyEfWkqz/X8n6rSiK+qgqxVAf+Z0sFhdn/5crwfg/Wjbfv5hX0mPz/cGS
peBPvy5F+xmlqV+RMqzfszLMf1JZ6p+vnMfm/eGBZfP+PrY8/eeo4LH5/vBt
y+b8aHhF2meuBNZXK1G/QZVpn7YK5hcXqmBc96mK+VRQNeQjT1s29+/u1dEf
OnEN6nfUsvn8qWNN61//73/j1QLrA5YD/1Tr2h6b8+8YdRCP2F0H/nTTuohH
RarH+LeSRcP6tA/TgOt/fQPWv3ZD9JMQjbh/rbRszt+qNqb9j8aITyzxUb/y
Tdg/nyyb8/f5TaGHKNWM/f+mGfOf2Zz7l2zhcVDA/rlls39Mbsn6529l/ev/
2T9sRf/jWiM+nbMN5ld3yHJEW8QjsrSj/tfaYVyp9ohHputA+4sdqF/fjqxf
ik7c/4PJokdn5p+kC9fPsS6YX3bqSv/xu/H+ocmqTXfuXzF7YL2JPT1Yv2Y9
qX/kXuzfbZbN+mvUG/HosH1ov6EP6iPr9OX+GaIf41/VD/mqav3p/2d/1FMs
HcD4Kwxk/p8Hsn4LBnH/Kq0Y/1uF+dSswdS/6BDW7wVZTxnK/ikwjPaPLJv7
1/jh2J91rhGM/+4Ixj9yJP1nHUX/1y2bz98Hj2b9049h/S6NQTy631iPzftD
ynG8f54hi57juX6STmD+xyfQvvNEj83zb4JJrP/BSdBDtZ3M+seaQv32TkG8
uvlUxh9lGlhut2ye/xtPx36qw81g/22cQf3qzmT/hZxF+9WzEJ+qPpv+f81m
/MvmMP+Kc1m/L3Ohp1w4D/OJMvPp/9186jd7gcfm/afYQtRLvFzI+k/1Yz5V
cBH79/Ei2k9YzP0v9xLef+8tYf6jlrL/si3j/euGZfP+NGS5x+b9OcMKj837
1+UVjL//SvZfqlXsn7OroLfotZr+k63x2Ly/nliDfGSXtcw/4Tr6P2TZnD+0
W0/9Y28Ai30boI9usRH5qaibPDbv7zssm/71bWb9w29h/23awvjrbaV9qG3M
fw1Z1djO+v3eTvvlO8C60k7af92Jekr/Lq7/srtp/343/Kk5e6CHLL6X9X+1
l/FP2wd9VaH9tH+yn/4nHqD+eTT7z7Vs+m/0QbDIfgj10TcPMf+hh5GfzHiE
/q8cQXx6wFHWP/Uxxn/uGO17H6d/5wTtT5Jl15O4XiQ6Bb304VMYV+1Ps/5x
grn/7A9m/C3P0H+0s1hPcudZ6tfkHFhHOE/7zWRZ/wLmE6Ev0n7tRdrXvMT+
+0MWKy6DdeUrrP+3K6z/oqv0X+4aWH+4huvV3Osem/OzEjc8Nt8ffn2D9Zt+
E9erwrfo/ylZTLpN/3nv0P99shxzl/Y57jH/W2Q1zOX+k+k+19/V+9R/4APk
p9I8BMvzZNHnEVgnf0z7U48Zf7cnjD/xU/o/8pT17/AM61HGfc7998BzXK9b
vaB99Jfsn10vmX/TV7SP+Jr2W8iywRvah3lL+3VvEZ+q9Y7r5+872q98z/yr
fGD9v5Pl4o/oL1H+E1h/JKt5n6lfyS9c/2/IesZX7n9FvuF+KJ9ZNvePyd95
/8r3g/v/gx/QQ479yfxz/qJ+t8lq+G/mn/kP979rZD3oL+3TitOo3wXL5vm3
b4jTyD8o5GnU77Rl0z/dQ9E+SWjaH7Vsnp86hjn9X31kvLAem/d3bdk8f7QO
B1YxwtN+d3jML5pFAOtIEWm/NSLilQ0jnUb9wkZm/Osj43pVOwrGpYgKFqui
Qi9dNRrtf0Sj/ZLo0FNUiAHWn2Iw/vkxGX+pWLR/S9YzY4OVjMP6PY+D+cWU
uNQvfzzEqx6S5bj4rF+uBGB9x7J5fh2REOMySyL6v27ZvP+qxGCVLgnmkxeT
0H+/pBjXKZJhXAUnQ36yh8P+SZqc/XcsOcZVpyCMy/gpEJ84aNl8/7BNSsYf
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
9o2fMf7wz7l+Nz5n/HVfeGye30K+RLxizUvUS1d/BX/q1yvUSy57Tf+V3lC/
L2+Qn1r4FvnJMu/A4r1lc/46+z39F/uA+ORLy+b9YdpHj835VcFPmE89/kT7
CZ8Zf54vyE/f+0L9Rn1l/tm+sf43v6Feesh3rp8MPzCfvEwWA36yf1L9ov1Z
suz1m/bOH8Z/4g/yVV3+0n9CcfYfm/fvw5aNfu1CnP2vvip2yLOo3z7LJv+W
oc7+15+OGtrjoID9jtC094XB9SJCWIzrTZZN/eqFQzwyVHiPzfnLWsvm/KxG
BNr/tmzef5dHPAv9Kkc6C/2+WjbvX/7I0EuWjQK9xIcoiE/PiYr8VPFo8Cdf
kcX06My/UAzoq57EwHxyYkzEJ/LGov6uZXP+MDo2WGaPAxa34iA/PTQu658x
HvW/Eo/1Gxif+adOQP/nLAcF7HsnRL4ieSLGfzIR6qW6Jqb+iZJgPnEkCfzp
9kkZf5xkHpv35/3JqH8rx2Oz/qIlx7jamRz1kE2CmH/EFIx/cwrEq+qnZP+H
TkX7dakwv66Zmv33JzXrvyIN8hNV0rJ/vlk2+++idKxfufT0/zE99NFzM3hs
zh9LZATL1xnpf0Ym5l84M+N/mpn1m5QF61Pky8r1e5+sxmRj/+TIzvhvWzbP
b8NysH6ZcmI+eTUn4hGDcrF/0uRm/57PTf365GH/BuVFfPpUXtp3y8f8E+en
fkfzY1x3KOCx+fwhbkHoJQ9Y/vf3/4XYP9ELs/92FWb+TYvQfyQJf3qLpP4N
ijL+MMVov74Y61+ruMfm85+/xaGHXFkC46JqSbD+XpL6LS7F/itf2mPz3w/4
VJr288rQf8myjP9NWcQrZpaj/kXKc/9+Vh71lpMrQB+RvyL770FF6KPGVqJ9
zsr0f8eyOT8aXoX+M1fl+r9Wlf5VNdY/bXXePy5Up/++NXj/SFGT+99py+b3
p7rX4v6XpDbjP1Yb8+uOddg/8eoyfl0X+og29Xj/iFGf/b+7PsZlswZcf5Eb
0v/WhtSvYSOun7CNqd+Gxrhe1/ZRP9GE9+9VTaCXqNaU+v1oyvyXNPPYvL9U
aE77z5bN8+P8FtiPVamWuF6+bYl4xKxW3L9la/p/3pr6T2lD/wXaemyefx5a
/vf3/+08Nu+vudrT/9321G9EB+qfpSP3n+tkMbgT+zddZ8SnLlr+9/f/XRCf
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
bL5/VCQx9HCmJUb86llixOsWTAKWk5Ogfv7Hls35W/6kiN83ISni0Q847uRJ
hn5WY5NR/3vJ6D+n84//ff91lMf//n78jsP6Z0uOePXw5NDLuZmc/jMHUf8h
QbCX14IQnz9DCvpXls35++UUmF+nTYnrnQEpEY+6wHE3VSqMy76pqP/ZVIhH
pEgNvXy9UiMffTo16++k4f7TPQ30c0+kwfwySVrm38WyOf87xnFfwnQeFwv4
72jZnL8fTod8Vbz06G+3HVnq9PQfOwP7vw3Zty8DrtcxMiJepyVZ7Sa7UTOh
32SzTJjfvyMT4hORM+N6ny8z/W/NjOudCFnov2EWzO9uykL9w2Zl/etlZf4b
srL+obLRf+1sGHfWZkM9lMjO9V8jO+KTq8j+35bN/lctB9ff8hyIV//IgXic
yjnhTy3JSf2/5qT+FXLRv9+y+fzrcy7485XNTf/zc0Mv5wNZlcpD/efkof5v
8yBef/G8YDGL7HuVl/rLfPQ/PR/zf54P9XAL5QfLKfmZ/xOyKFAA7JtI1g8L
UP+8BcFqXEHo5boFEZ/MVQjr1T+6EK4XdwshP1/2wmA9ojDsnVuFYa+yFKH/
oZbN/f96EfrPKKn/YLLviqT/dEXpf2BR6n+R7KYuxv2/XzHM5z9HFimLc//v
XRzx6+DimM9JXgLXqx4lmP/JEohXJi3J/LuWRP3Eccvm+TdRKd5/O5Vi/Y+U
Yv7xS/P+17407OVBy+b5M04ZjIu2ZN9+so5ZFuy0Ksv67ykLPd1o5aCPbF6O
/ndyXEQpz/2nSXnko7dx3IlYAawaVaD+mzkuw1Xk/lvfsvn+wcaK8OcLXYn1
r1MJ8TrrKiFfFaIy8nNrVsb8cnVl1Nf/pzLmF9WreGzOn1ZYNu8/P6tgPqdK
VY/N+89Sy+b5/1tV1r9iNea/iCy+VEM+vnLVWf8Fls3f/36sDn+qdA3E586t
gevlO7K/RE3kJ2bXxHy+1zWRny5ai/nPqEX/LywHBfwXro1xOZXsf2rZnH8V
rAN/vkl1UC/9yHLgfdXJV5f+x9dFPu79uqinzF0P7B9Tj/7vWTbff8pRH3rp
kZbN9+9uk1XWBqz/sAb0f6MB4vdnauixOf8e0hD6+q6SdfpGiNcZ1Ajzq0tk
N01j5CP7N2b+5y2b87dUPsTj6+NDPfUZH/JzgppQ/55NMJ97qgnqKZM19dh8
/tKtKeIRJ5rSf+JmYN25GerhHG2G+VWC5h6b35/oYNmsv0PNcb0/bgv6b2fZ
nP8daIH5dKyWGHdat6T+e1vCnxu9FevfohXq4d/FcRG1NfT2NW2N+fR2y2b/
jdQG+6Vq3Abzu1ssm++/hm/L+jdoi/nEJrIvTDvY67rtoJ+z3rK5/4Rsj/q6
tdoz/zWWzfnX3/awFzU6sP9XdoA//asD86/aEfGpZZbN7z9870j/lTpBX//i
TtBLfO0Ef77yndn/CztjfueTZfP97zJdsB+488jyfRfWv2RX7r9zulL/N2Rd
rBvWlzOzG+ZXLy0H1odbpDv332ndMe5/1h36iUI9eP+b3AP56sc9EL+TvydY
TegJe/dBT+gp8/RCvv6xls3fH7m9MJ8vZ2+wHtUbejt3OK6y9cG4O7wP4pc3
+yA+f+a+zH+oZdN/1/pCL52hH9ajo/ohH3W5H/J10/bHuBzQn/4v9Gf+qQdw
/+s7ANfrsxx3Ugxk/XuR3dMDkZ90BlH/7oOQrzhp2Tz/JlG8/3SxbPb/Y2SV
cDD61e1o2Zw/Hx7M/OMN4fprPwTjPj0E8+vYQ7n/thmK69W+objejTGM+3/L
YRj37x6Geolow7n+mw1HPnrHcPqPPIL3H59lc//ZOoL1jzCS+TccifqIzSNh
7ws7Cvujrkd2Nlg2n7+HGs39t7Zl8/65djTy8YsxHpvn/5qWzfPnKo7r32Og
p1NtLPff5WOhh/tjLPWvPA794F9i2fTft3Goj6/CeOin/eMxv/PZsvn8o+wE
1n++5X//vagJyMdfaiLvP3MnQh/fW7IuPon3n1mTkJ96NQn5uHIy5pfTLZvz
t+eToYcoPIX+p0xB/PrJFNTHKTCV99+JUzGf+3Aq9c87Dfb+cZbN+fN9y+bv
73NNZ/+Nnk7/d6cjH5V9BvrNHUGWt2YgHn+WmdR/2EzM57s+E/Y64yyPzfnj
4FkYV1dmIT433WzkJwfOhr3/IlmkmQP9fP3mYD59bg78OSnnoj6q91zk4wZb
NucPyechHn8Psjg1D/58Secz/67zoY9z3LJ5/060AP3tdlrA/I8sQDz++Aup
f4eFGPcdXAh/Oo6f/tv6qf9+jrsxF4Flq0XIz79nEeIV0Rcz/+aL6X/nYuof
ZQn6VTVZwvpv47iMuJT1b+Txv98f32LHA7+P4gu3DOO6PtnZuAz6qtDL6b/O
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
a+5DxOO9Y7tV4hHYmfUI8fivyaroY+o//THy0y8My/tnhZ8w/ylPUB/r2RPE
7xR4Cvv+xKeIXz1mu5v3GfMf9wz1sB8E+L///yzX80C7vP86xnCxYP/3nsOe
n/0F4lcjX9D/bbLO8pLzb9hL1Mu78ZL6Z3qF/s5gsn/1FfNP/xrsDnwN+/rS
a8Rrp3lD/fu9QX7WhTew56R8C/Z7v4We6uxb5p/8HfPv8Y75n3oHe17S92Cr
G9k5/p71T/SB66/zB+jnHvmA+HT8j8jP7vCR+h/8SP3jfuL+15bs7/+EfFSs
z/Tf6jPi13vIdvQvmG9e8y/Mf9cX1j/KV+rf5Cv8qe1fqX/Eb9gvdKNv6G9v
+Ub9w33n/G/wnfpv/A79/NA/OP/rkt11P1j/ED/pvxbZW/2T+f9ju1P9F9hf
QVa/f2G8W+U35//S36z/D7Z7Ff9w/1/8h/p/Zbtf7i/zX2hYzh8/kXXpf7ie
2fP+Ybz3nmyVtK5i/s02LPm/MSzrr1gIsDvDsMy/l2S7SEjY86aSreeGJf+C
oa7+bz7+JLJ6QnbzhQ6wPH+MD4187Ieh6T93GLRbYw3L9fe+Ybn+5wh79X/1
VKPCot29Q9ZZw11F/YeHo/+b4dDfyhw+wHL+OsSwnD9eI6sMEZj/oAj0f9mw
fP6WNiL08foblufvi2QnVSTq3ycS2tW5SIjXDYpM/z0jU//TkVFfL1kU2Le6
R4G+zokozD9xVObfJSricY9GhT2dIBrytTsaluePQ2QrXvQAy/u/7aIz/wNk
FTsG6986BuLTew3L/W+MmPTfIib0s3bHZP5RY9F/U8Ny/7+D7EaKjfh149iI
x94aG/688HHov2Ec9Hc2xUH8fpi46K/qxUW7u96wPH+GjBdgef6vHQ/18NbE
Y/2t+Jx/NeJDL39lfOb/h+1u1QTUf1kC2LN/JqD+lRIGWN4/X2JYzh++kf3y
iZCP8hKh3f1M1mUSBzgo2P/8xNDH+0C2SiVBf2dOEur/Ngn9F09K/zPJ+pVh
ef61kwVYzp+mGZbz3xdsdwopxOdPVvT/VNF//uSoj56QHOPtR8kRj5cnCP2t
cYaDz1McHUT/OVMEWH5/Y3QK2HPvpkB/nS0l/Y9Iifi9Wymht5UlFfo7Q1Mh
Pv+6Yfn9gYypMd51yfqKYVl/6dLAnjeAbF1KQ/+p0yJfv29a1EedT4t83BTp
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
+Wb09wpu4fqfTHaebIF+fr6tvP5N2Ar77sOtqJ/OvY3+x25Dvt59w3L/kXM7
rpfOKLJ/Zzv9Z9uBdnf4Dup/07D8/lPmnWBvyE7EZ13fCftOhl24vvuDyOrK
LtTDTbub+09/sn1xN/TxUu1BPay+e9DfObcH8flBe9Gueu2l/qfJOtk+6Gt3
34f8vBP7kI+VZD/z72JYzj+P7od+KuEB+u94APXQhw7Anh3Pp/92Pupl+Ybl
8//YB6Gv3/og/Kl9huX8N8Yh6t/iEPS1dxuWzz+iHub6a3YY+To7DiMfP9IR
7v/OEYx3t7Jdhz/K609Dw/L8s+ko/Yc9xvlf7xj6++vZrkIdh3239nHEr9cc
h362dQL9vRonYM9adYL1/8N2v+pJ+l9+kvX/eZL6VzrF/XfJKYz3vhmW9V/h
NOJzvNMY738+jfhU2TMBlvOP+WdgX38wLM8fpc7y+j/nLPN/dxZ6O8XPwb4/
8xza1etzGO/a59GupxmW548X5xGPV+gC8rOmXGD9nxqW92/zX0Q8aiLZfXQR
/nSeS5x/4y5Rf30J461cl5n/6Muw59+9jHhV9iucfyOuQF996wr82Vmucv4P
NSy/v3HDsLz/mfEa6u2716CHumpY3n9Ndx329IDr1P/SdcTvpb5B/fvdQH/n
/A3Y81Pc5PzrTXbP3ET8Wt3i/tfDsPz/r5OGZf4nvU39u95m/Y/dRnwq0R30
dzvdQT31Ybbb8e9S//Zk6+BdxOvEucf11+Ye6qn2k92Y9zn/W95Hfew99xGf
F03Tf3NN/XeS/cgPmH+TB6z/NrKO8JDzrxHZ2/yQ/sM9wnin/iPU099AVqEf
Ix63zmPmv/Yx8w/xBOO9mk8Qj7Wa7Pwl+9WeYr6oFU/p/9dT9NeVn/H6v9Sw
zL/vzzDeqvic82/Rc8TvfyGrci/of8EL+v/4Avbs0i8x3pv7kv7fv6T/Eq+Y
/yyyekN2i76m/tNfU/+XZK/wG6wva+obxOM8e0P/Bd7S/ySy+5is877j+h9P
9h68Qz2s3O+xPpwx7xGPf8+w7L85PmC/dUd+gD19+wPG21k/0v8wsnWT7GT6
BPv+4E/M/9on6Oem/8z9b6BhOX+//Bn5eWm+MP/+X+DPuWBYvv+X8iv33z5k
9+xX6p/8G9d/T7J36hvzT/ad9e9mWO6/jpNV4h/cfzv/oP8jZDvBT/rvQLYO
/aT+cX9x/21rWO5/D/yCPm6s3+ivW/2Gnvbe36x/9D/MvwXZ2UX2o/xl/Zv+
hT93u2G5/434j/OvsWH5/vGWf+hvhbeu/S87DQxL/hsNy/NXmBABlvPfuobl
/HddCNizQ4YMsLz/UItsrQlJ//8MS/7VQ11D/itDwZ/7OxTG6yqhEZ+9zLCc
v/8gW5XCBFjW/+IwsO9/DYN4VPmw8OcuDIv49Ce222XCXYP+88LBvvUhHOw7
JcMHWJ4/Z4dHPdTb8PDnFovA/GcYluffV4bl/KVIRLRb0yLCn/M8IuL1C0YK
sHz/fnIkjHefkHW+yLBnT4iM+LyHhoOC/eeJAn/O2Cjo7983LPMvZ1TWf1RU
+r8Tlf6zRQN7w6NBb+uW4eDzKydz9ADL+79DDMv53/XozD9DDPofRLavxKD+
aWMiHmtATNTXuch2P1Uszr++saCPe86wnL8HxQ6wPH/3InunY0M/S8XBeKe7
YTn/PBEH8agkcVE/t0tc6KOPxoU9O2E86t8xHut/mO1OvPjQz29nWP7/gB8f
erixE2A/0a0ToJ72vgSIz4uREGy1TAg9nN0JUS8/aiLop5olwnh3B1lHSsz8
HcNy/ryVbEVIAn9OwyQY729KQv9hk4Ldekmhn16fFPnYoZJR/9rJmP/aZLDn
/N8dBvb/GgrxqVWGg//cPwr11FWTc/0tJ3s/kyM+q3IQ6u0sMSzr/1sQ618h
Bfc/LwXi1Z9TwJ5dNiXmgzc/JfP/mBL+nFKpzPz3/+N/TiqMV+9SIR+3eGrW
f2Zq6GO/Niznz3Ya6G1NT4N250Ua+PMLpaX+U9IiXvdpWtjT+dNx/U9Mh/7e
o3TMP296sDMuPeLxNVnlyhBg+fxhtOHgz4f0XcPy+VP2jNR/REaMt26z3cmS
ifkPzUT/NzLRf8bM6K9dw0HB/q9mpv7psqC/NTAL9b9E9lNnZf37ZUV+7vms
rH+KbJz/vQ3L+ccZw3L9TZ6d+vfIjvr5J9mukuZAPG7XHNBDH8sB+3ainNz/
OxmW+78jORGfEz8X9lO/fS7mfzAX84+Tm/q3yc389+dGPF7MPJz/rfKgv7Mn
D+Lzo+UNsNx/NCe7Ow3L5/+R8wVYnn+b5EO7ty0f9Y+Yn/4b5Wf+m/NjvApX
IMDy/F2/APrrDQWof+iCiNerY1h+f3FdQYx3QhTi/lvTsNz/ri5E/3/ZX1cr
jPliryhM/X8VxnirShHuf0uLQA//u2G5/6pow5+7iKy/2LBvlyuKengLiiIf
61NRjHdKF4M+/txi9P/esFz/SxSHPT3LsHz/841huf8qWgJszShB/y9LIH6/
cEnEr6aS3WdkXaAU4rEnkb3HpeDPylc6wIXs/weRowMC
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQQHHrpfc4QwbRyAhIKZB4xvAeI3dKHyH9zzQFHv
YOwJ41uD+Ava4XwTEJ/hjieK/gQDLxjfFsQ/0ALn24Htvwnnm4Ht1/VGMe9B
ozeKeQ7XvFHcs0DLB8a3AttfD+cbg+2/7INi3gF1X1T7a1D5DRfgfAew/Sp+
KO5zqPRDtf8snO8Itl/JH8pvAOtPKPNH9f8pf4R7AbWOSPE=
       "]], LineBox[CompressedData["
1:eJxUnQPYHb3atqftW9tu06e2raltO7VtT23bU9t2attObdv//z55V759Psex
9/edO8mN604yM1mzVpM16Vi1eUjHcQa1dJx//+////O6Vr5axPy/udz//1/6
mOXc/7KbqAra/U6W8/zLzhHLOf5lGb9qgHP+y6o9WRysCntenGqwp9tYLhDs
f7/lfMH+Y1YHO60sFwr2v4ftKloNsGheA/29nWzXkWsiHrdJTfrfVhPjnYi1
6L9RLfrfXAv2RLjaAc4f7L9+bfrfUJv+Q9eBHn6dOvS/jixD1qX/mnXhT6y2
XDDY/1+yrlaP+q+oh3j8X/Wof5X6aJdLLQfPH/Wd7aJiA4z3FpH1lwaIxy3X
EPH7CxrS/yfLhYP9l24UYDfY/9xG9P+e7JWQsK9nWc4b7P+NZP5FG3P+z2gM
veTLxrCnCjdBu5jahPV/1gT+dIGm1H9SU9TXf9wU+Tr5mrH+45sx/wdsF7mb
U/8xzeFP32uO/m6OFpz/I8nOHbLM2pL5D2tJ/zdbIj4vUyv6H9yK+l9rxfqn
b412x2vN/C+3hj4qTRuw6N8G/rwLbNcp2yI+t09btPtn22K8k7wd8+/ZDu3q
FFmI9vTfrT3i18fbI183cQeu/84d0N85atmsvwQdoY/qQBaHOrL+cTtx/bXt
BH+uIvuxOgc4W7D/1pbN/r/XcvD+rqJ3CXDWYP8tLGcJ9r+rC+zpKF1hz23a
Fe3+dsvpgv1H6kb/kqy2dEM8Inx3XI+8Bt3RrjdaNte/MD1gz69rOXuw//U9
EJ8M1ZP+a5HFmp4Y7zm90K6r90I93ZW9UB//N9mp2hv1lct6o1396M38K/Vh
/Rf3gT/9tQ/rX74v4vX9vojX+dwXesky/WBPzesHf+ID272S/Zn/bMvB88N9
azlDsP9iAzCfnJkDWP9XAxCvcgdS/2kDUS/vOVkX9DDenezR/xMP8Tn5B4Hl
BLJ6aDlTsP88gwOcItj/WMvB81nrwfDn5hyC/v4oyyLY/12yzDYU/dVwsrg1
FPa9zMPAesgw6n99GP1nGE7/gyzHC/Z/xXKaYP9pR8C+GDAC/b2LlqMF+081
kvn3HYn6+OfY7qQYBZa9yOr0KOgrko1m/buPRrz6hOVEwf6TjAlwrGD/XcYg
fucY22XCsWDVcSz8icNkL9446KnbjUO87gG2+7HHQy+nzXjWf994xKdiTEB+
ouUEjPd2k3XUicy/2UTY83dYDp4PTuRJrH/jSaz/VrKIMJn5NyTrTZNhzw07
hf7rkZ0NUxC//Gcq8689FfGKtZbN9SfENOSra0yj/1WWzfr/Mw3jnWrT6X+5
ZUf9+5+f0+m/8owApwr2v8SyE+z/2wyMdyvMhH1/4Uzm/2Um7Muys7j+58/C
ePHRcvCfV2o2WM8hu+/IfvE5nH+zLL8r/K//13OQjyoyFyymk70XloPXiy40
L8BB/7I7ZR7zf2o5XLD/AvOp/8T5sKcezUf8Iu8Czv9xZH2f7ObyUW9/tGVz
/3PPsll/2Rdiv1cjFqK/uG3Z3H9kWQTWQxfBn3tjEfPPuJj5D17M/K9aNvM/
3RLYEwOX0P8ly2b/T70U12e331Lmf34p9HVSLuP1r7dls/7PLEM8Img5699j
Odr1yeWIx026guuv6wr4c45bDl5PMtFKXv87rYQ+4gjZi7+K+3/7VdDHPUj2
46wOsLn/absa4+X+1eivYq4JsHn+bmXZ3P/vIetoawNs7j+bWw6+Hvg718Kf
E2Ud4pFNLJv7722Wzf13xPXYH7xG6zFebya74TbAnl/fspn/GzegPjL0Rta/
zkaMF+ssm/u/kJtQT11zE/q7qzehnv7fTfDnVN+MeOSKzdBT/doMf6LKFtj3
lm6BPf19C+JxK27l/Fu0lfp/3Ur/5bbBn1qwjfX/tA319Epvp/+52zHefW/Z
3P+X2IF6OrN30P8by8HrQRXdyevvjJ2or/dyJ/TQhXfBnjvVcvDzhf9sF/Rx
Cu7GfJeTdqNdPbYcPJ9Fvj30P34P7OsHe1A/N/desD9mL/R09F7oI3Psg301
ch/yE3f2wZ+XdT/G62H7Ea97cz/08DMprv8hCvHJa2xX6Q9w/nkH6P/yAfpP
c5D++x/EeP8C2Ul1CHrIPodgT509xPyTH6b+PQ+z/qcOs/7iCPPvdgT5OieO
IB6Z+GiAg8/vVOej6C+OHkV+XoJjGK87HGP9D1k2519xj9N/u+OwJ9Vx+o91
AnqL1ifgz9t7gvpHPwl/bouT1H8X2Yl6ivVveor+t1sOPk8SkU5z/5en4U9v
sVwk2H/4MxjvNyA7m8gyzFnuf3XPIl6x/izi80Kd4/Wn1jnmv+Yc/TvnoadT
4zz1X3ke/tRvy2b/q3oB7C27wPx/WA4+b3MrXWT9F1+k/t8uIh5Z/hLiVT5Z
fL4Ee16Zy/Q/7zL6ux8uIx6/5BXqP8ey2X/eXkE8qthV6C1mXsV479VV6u9e
4/yfdo35Pyc7ha6D5eTriEc9uQ57Iv8N6j/hBv0/vAF93Tw3Of/H3mT975Nl
zlv0P+oW/d+9hf5ettvUf/ht5n/rNv1nvsP6D7Vs5t/1O8hPZbgL+2LQXcTn
XSHrtPfof8A9tPsXyU5qTf37atRXnSOLFPdZ/16Wg9e7Pn2f/pM94PWv+wPm
f/IB80/ykPOvy0Pqf+wh65/wEevf8RHGu4fZ7sd7jPnstCfLA5bN/WfsJ1z/
bZ6gv7fvCfzpGE95/Wv5FPb83Wx3oj3j9a/ZM8Srdjxj/SM/5/xrbNnc/24l
uxFegP2GZGezZXP/E/Ylr//1LAffv4oNL5GP988r5KNrv6L+a18x/xCvwU5N
y+b+b9VrxKP+WDbnb9XeoL+3/A3z/0l2K7/l+lvylv6/v6X/Cu+Qr1po2Tx/
fiF7Zd+jv57/nvX/+B79/VIfAmzuv+d+QH7yHdtV8Y/0P+sj839tOfh5XRf5
BHvu9E/o77/4BHtO4c8BDr4fl1M+o796+hl6igJfwN7ELxivH32BfTfvV86/
cV9RX+fBV9RH5vrG/Xf0N/QX975R/+zfMV6PILu3v0NPP8sP5j+MLG/8oP4Z
f0IPMfgn9PWu/mT+6X6hvzvwF+LxL1k28y/Nb/rv9xv1VOfJIuWfAJvnr95/
EK8+84f6B/1l/Xv8xXjn1F+Ml0mda/+xOX/ratk8fx23bPJPFOLa//rTnSyb
898jIdDfjx8ywObzpw6WzfP/wZCwp+KEov+2loPPq7z9oRCvjvkP7LutLJv8
9/wD+0700IhXNrccFOx/Z2jYF1HCBDj4vNVrEgb99TbL5vw1Yljm34jsbAmL
fGS4cAE253/1LZvzx43/x//+eaHDw5+uE576rwsPPfyQEZh/rQgYL1dHYP5/
IyA+UT0i9V9hOfh5Xf+KSP2rRKL+SyMx/x+REI+sGJn1XxSZ9f8amf7LRUE9
9IIoqJf7ieyXjor+zryoiE++t2yu/yWi0f9sy2b/exMN8eii0RG/OyM6/b+M
jv6OG4Pzf6rl4P1EPbNs1n/BmGBvUkzorR/HpP98sTCf/PGxUC/nIdtl7tjQ
R42JjfiFjg09vBxxuP5Gkt07cdDfzxoX+TnD41L/m5aDgv1niof4xJB49H8t
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
K9k79hJ66oSvuP90ekX9D7+CfSf+a6w32f418lEHLJv37+K8CXBQsP82bzBe
73uD/NyYb+m/pWVz/rHHsjn/jfYOrJqRxU7L5v3jyO8Rj278Hv7cbe+pf4QP
1L/RB+QnN3+APRX2Y4DN+4/1P1L/DR8Rj/7nE/R163xC/P7aT8w/5OcAm/dP
a36GPbXqM+v/l/29al9gXy+3HHze5P4i+5W/Btj8/sDSr2iX37/Sf4VvyEcs
+gZ9vS/foJ8u+531X2A5+M//+J35l/4BlnPJ6t0P2BclfjL/WT+hj35t2ew/
RX+B/em/0N95+QvxysK/uf9M+Y14xLPf0Msr8If+J5Ldx38Qv5/3L/Mf/xf+
5AOyyuVcR/5jLJv3z+5ZNue/2UNcR/4jLZv5fzsE+jtZQ15H/YdZNt+/uBES
/kSmUIjHG2zZ/P7G1VDo76b/J8Dm88eB/yA+57JlM//ThA6wWf/9QiN+ccGy
OX9OGcbG/++f7h0G+bhnw8CeHxQ2wGb/6xkWeshTYWFPJQ0X4Hf7//XfLRzs
e8fDwb5OFB75up3DU/8jls39T4IIzL9DBOirDlo2v38UNyLi99pGRL30fra7
sSJR/1aRoJ+zNxL6y+iRA2x+f6C5ZXP92xUZ+XhRogTYXP+aRIF9d7tl8/lT
xKicfzIq2uWWqMhHhYuG+ESDaOjvbbRs7j9CR6f/utEx3l8XHfVyQsWA3rIW
Wa2OAT2EE5Pzv3pM2NcrYqK/+5vsV4kVYPP5x7JY0EP+IKuKsel/cWzW/2ts
5l8uDuefb9n8/sinOPRfJi7a5by4GK/ex0W9Rcl48OfNjof++o1l8/xZLD76
+zPioz7Oq/isv5sArKaSxfME9F8wIdr1pISs/5OE0NPPl4j7zwTL5vz5oWVz
/pk7MfITYy2b8yfNdp0jCf2PSoL4/DtJ4M/JlpT5D09K/W9aNuefmQXavSFk
fc2yuf/NkCzA5v0jLxn0cK4kgx4ybVCAzfNn/yDEKy4GUf9UydFf90nO+p9L
jvj85Cmwvp1eKdAuT6eAfSVS0n/3lMjPO0HWiVMx/y6p6P9oKtY/YWrm39Gy
OX87lBr5iHhpwF67NNRfpYE9N3Za+m+dFvadfWkRr4yRLsDm/KGFZbP/7k5H
/1HTYz7qpump/470sO9HykD/jclyawb0V+EzIh7R0LL5/GFTRtY/TCb0d+tl
Qjz++kz0/09m5l87M/qrNZnRX4TIwvlXg6xXZkF/9w/Zr5oV/pzlls3508+s
9F8pG+u/xLJ5/vzGdl0+O+ffwuzQx/+cHfo4ZXNATzmfrD6QRamcnP9zcqJd
vw2wOQ93i+dCuz8zF/2/JssiuVn/aWTxIjf6e4XygPXkPNDTfUr28+el/hPz
Qh/5iKzy5AOLcZbN+dt9y+b8MWd+6j86P/W/m5/5Zy/A/EcUoP9bBah/loLU
f2hB5n+9IPq7GQtR/0GFYN+5Wgj6yHSFsZ7VgMKwLy6RvdQu97++ZPe8y/xT
FEE8Tm/L5vznTBHoqZIV5fzvYdnM/5NFEb9OUoz+uxaj/2NkJ1Fx6t+pOOqr
DrNdxC9B/duXgF76QAn0d+OUpP5tSrL++0siHhmzFPVvWQrtYk8pxOdFK039
m5WGXu5Osh+5DNhpUob132bZnL9EKIt20YjsbS5L/2HLUf/65ZCvv4HshC7P
/OuUR3xqLVmErED/NSvQ/yrL5vr317LZf6tV5PpfURF6y19kVbkS9V9K9r5X
Qjy6QmXu/4vI/heyU64K5/+CKrCnPpJF6ar0P7cq4tXvqrL+Jarx+jurGv2/
YbssWh3tarplc/79sjr09QrX4PVnSg3W/5llc/5eoCbGO5Nqsv6PySpvLa6/
8ZbN/ecDy+b5M1dtsDvGsrn/vWfZnL/lqAOWI+sgPnW7DvQQWeuCvWF1EY++
QXYz1YM9f3A9tDvX2C7T16f/gWRxuT709dI0QLvuR3YvNKD+KRtS/z4NUV95
lqyCGnH99WzE/E81Qn+dVILdbpL6H7dszj8SN6b+nRvDvjrSGP1FgiZgr0MT
6n+wCey5cZvSf1vL5vMH1RT5yVjNmH+rZsx/r2Vz/hq9eYDN+Wtzy+b9011k
P0qLAJvn/6aWzftX21uw/hFbsv7Ssnn+39KS+odrhXa3QSvo5W9kuxOmdYDN
+X/d1ohHrWO7CNUG/rxabRCfXk12nbbQ26/eFno6K8nyd1vWv0o71n8Z2fvR
Dvnoiu2hr7u4PfLxv7ZH/E75DgEO/pP+/3Gw/0+WzfN/mY4BDj6/9uZ1pP7v
OzL/kp3of3YnxO+8tRwUnH+xztBbzejM/F91pn+3C+aXnmrZnP88t2ye/wp2
RT7O5K7QWz7piv4qXzf6n9ANensPyTp3d87/sWRfk52cPWBfjrIcfB6k7vRA
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
5v43ZZkAm98/7F0G+qgzZZh/UFn093qUhT19sizicZOW4/zrWo76Hy+HfGSi
8tS/U3nYE0fK03/8CshXt68A++7BCqiXH6digM35a9uK6C/3V0R/FbMS/beq
hHy9PZXoP1pl2HebV0a7v7My849SheuvSRWMV9ssm/ffIlYNsDl/bGTZnL9t
tmye/8JVA/v1yc5GsgxdHf5UHcvm/GMd2QtZg/WvWQP6uatrIF//bw3o6VSv
yfm/oib6q19sF1Vqcf9ZWgv99fdaiMetWBv5+ItqM/+vls35X7k60FctIItP
dTDeK10X7XpuXdTDfV8Xevkl6nH9zSbLN/WYf9H6YDHDsvn86SXbdeEGWB/u
1Aas/7MG9F+wIes/qSH9P26IfES+RmBvvOXg82H9wPK7wv/+b7llgM37x2Mk
9ddkmaMx4lMjG6N+4k5j2POyNgHrYU1QT/dmE9THz9QU8TtDmtL/NbJK34z5
e5bN+eNly2b9p2mOerv9m9P/hebo76RqEeCgYP99WqC/OmvZ/P578pYY7/Uk
61Mt0d8VrVAfv9v/cfDfiVbQTyZuHWBz/ta5NfQQRy2b319J0Ab9dQfLZv4d
smzWf9y2nH/t2iJeqdoiXhWrHfyJ1u1QX29vO9jT0dtz/2/RHvH7u9ojXidq
B9a/aQf4U9s7oB4iUkfWX3ak/ls6Uv/wnVj/BpbN/NvUifqH6Yz5oOp2Rn+x
vjP09UJ1wfrQtbogfndNF9bf6Ur9a1g2++9Ksvpt2Xz+XLUb979lZP2jG/Rw
K3Xn9W+xZXP+/a078pPle6C/8snicw/mX6Ynr3/zeiJ+90NP+i/Zi/vPnF6I
R77txfoX6435Imb2Rj29V70xXrt9eP2d1of+n1s21/9CfZn/5L6wr570hX2R
vx/X/wTL5vsPD/vBnpunP+f/2P5od+5bNtefnAO4/48agPHiLtnLNpDzf/hA
xOvesmzOHzJ7ATbPX0M92JPXPYxXGQbx+j/Isnn+u2I5KNh/2sFgd8Bg6n+R
7KQegvrKvkOgjzo3BP5EiqEBNvcfvSyb55/TQ5l/smH0330Yxjsnh1H/JMN5
/esynPkfG878E44IsHn+6TgC/d3DI+DPjzcS/Z32I9EuD4xEfVTsUcy/zSiM
9/aNgj8dYzT9txyN8f7u0dDLiTYG9mQzy+b+c4dlc/8TeSz9Nx5L/bdaNs+/
EcZhv/AbWjaf/28eB/sy7PgAm/v/euPpf8N42PP+mcD5X3sC+rtryX6IidhP
nZoTka9cZdnM/z8TWf9qk7CevOWTEK/+adnc/1aejHz9JZMRj/OdLCtM4f6/
0LJ5/vsyBXp7ZaeiXc+finq7H6eiXn6paZz/c8ny3TT0V8Wno55ilmVz/vra
snn/tcgMxOdOn4F8/BczYN8pPJPzb8pMjFdPZzL/ArM4/ybOQn/9aBbic/PO
Rnz+uNlodx6QZa45zH/0HNRH3CN72edy/Y2Yi/Hu7bmIz88yj/kPmwd95Q22
q4zzEZ8YHOD/zh+v2nZz/ppuAfRyBy6g/0uWze9/p/ExXvbzoZc6z3aRciHr
33sh7OkzC+k/aBH172HZnH+dWgT9ZNLFGK+6ksVxspdoCedfJ7J7ZAn09OMv
pf8OS9EuDy6FXirOMrBou4z57yfrmMuZf6vl9L9nOew50VeAZXPL5vx9J1lE
WUn/TVZS/20rmX/EVZgvfqNVaHe2WDbzL9xq2Ff1yWIj2Qu9hte/OmsQr7tu
Dfr7IdfCn1NrLfNfzXb1dy3si+rreP1dsY7+f62DHm6V9Zx/S9ejv/NjPeol
K26AXmrRBowXXzcgXq/cRu6/C8jup42sf+lNXH/zLJv1934T+qsSm6n/7M1o
995spv+iW6j/jC1o919uYf7uVuo/dSv9P9tK/wW3QQ9v0jbErx+z3c23nfvP
+O2Ix3m4Hf5k7h28/o0hC72D+efYyfxHkt07ls39T9ZdzH+4ZTP/b+6CfirT
buY/xLI5/71m2Vz/0+8Bu94e1v8y2Um7l/r33wt/6gJZpNqHeL0+ZH12H+y5
yfdz/fXcj/o4p/fTv1Dc/7tZNs9/Jyyb89fEB6CH7nwA+blHD7D+CQ5CX6fj
QcQnDx3EeBX3EPf/dofoX5F1rMMBNucfrQ+j3d9r2dx/xjgSYPP80+II+qtd
ls31P+pRXv+bkvX2o4jXjXSM9ZfHoKez9RjileGPB9jcfzY4jvjEJrIX5kSA
zftPdS2b58/1J9DfD3UywEHB/mtbNueva06iv3JOsf41LJv3z1aegj/9+xTi
d6uexnrwl52GfefnaegnK51h/ovPoB7iG9krf5b6+2fR7n4+C339Mudg35l/
jvl/OMf8S55Hu5hznvq/Pc/8i11AuzvzAurjv7qA+JwiFzFeTruI+qjnls35
V6FLAQ5+XvYmX0J//cSyef8+/2X09ydYDj4fdh5ZNud/ea6g3mrsFdgX96+g
v5fzKuzrUVeZ/13L5vw/2zXOvxFkeesa9FaZr3P+Db0Ovbzrls373xluBDj4
zx30fxzs/8oNxOeku8n1P+Am8lEXbzL/1Lc4//qS9TnL5vkzxW2w3+s28z9z
m/6T3eH+0/0O2sVJtntJ7mJ+6C6Wzf53jO1+wnvQ1+lElofvob+Kp6GHaG/Z
/P7KAcvm/D/2fbDb5j7q5e+7D3tOzAec/y0foJ5q9wP4E9Eewr7X7CHa9Y6H
iN+N/Ijzv/EjjHe2PUI9ZITHiEc1JIvNloP/vLBPML90Pcvm85cNbPf/ecr9
v45lc/659insqxDPMF7UfAZ9vFXPYE//IbvVniNff/lz6OP8smzef678gvNv
yQvEI76/QH5ehZdc/wstm89/vryEPb/sK66/Ba8wXn60bL5/Uuo19Z9r2Vx/
3lk2+3/xN9z/Z71h/V+/Yf5F33L+TX8L/dQLy+b+s/A7sDflHf0/fYd6ugXe
B9jcf058j/icx+9hT+b9wPk3jiwefIA/L9dHjNejLZv7j3uWzfUv+yde/0Z+
Qj3k7U+wr7J8Bothn9Hfu0HWGb9w/Q3+gvj9q5bN9w/Tfw2wuf8faNn8/sWl
r/Sf5hv997Ns7j/Pf6P/lN/pv/d31v+sZXP+F/QD+qgeP1j/Uz+gr5f0J/Xv
+hPxucctm/PnRL9Y/86/0C6PkFX83/Tf4Tf08g6yXcf5A3bbWjb3H/v/IH4n
1l/MT9nKsnn/fc9f1ENEd27+rz5ec8vm/G2nZeM/Soib/1s/v4ll4397CIyX
EUMG2Dz/NAqJ/mJLSPoPF+rm/+qt61s29z8bQ9F/6H9uQv+6ZLnOsnn/I2Ro
tItaoZGft9qyef76a9mcv1YPg/7+ijDo7/y2bO7/q4QNsHn+XBoW8YsfZK9i
OIzXiyyb/f9rOMTvlwsfYLP+fLL8RFalI6A+Yp5lM//ek3WJiKiXOzsi2v03
EVFfp1gktMsZkaCfesl24UbGeG+qZXP+9Swy9HMLRqH+kyybz7+esF3miwp9
1fio9P8wKvTwckdDvHpMNOav2e7niI76OKOiw5+8Ex3+VNYY9D88Bux5N2Mg
fp0pJv0PiQk9/GsxEb+TIRb198jqMlmkjc38+1s2568XLJvPf1LFQX+/TxzW
/1wc1EMmj8v694xL/6fj0r+IB3u6m2Vz/nciHuLzE8cHO13I8ihZJUgAFh0T
ID/vUALEo+MmBLvtEiI+X7HdiZ0I+crWiVA/tTcR+osYiTn/WySm/rsC/N/v
j0dNwvybJqH+O8gyUlLmL8liK9kLL+i/gWD+mwT08sMko/71LJvzz/XJMF6F
CsL8FbWDqP+aINbfSQ57bo3k1H8l2fmTnPWvmgL6qWUpmP/PFPRfKSXrv5js
fiP75VPx+rcwFfX/nAr2VZnUzH9+atjzPqSGPV0yDdffnDTM/20a6l88LdaL
nJmW9X+Vlv6LpIM/bxpZPye7hdIz/8mWzfnnU7LMn4H1n5AB+YhHGRCPlycj
/Y8lu/fJfs5MWG/O6Ez0fzcT/WfLjP1JjCB7tzJjvM6cBfuxOzQL+vvXLZvP
fzNm5f43KCviU1eywr5Il43X3wHZmP/FbLDnps5O/ftmR3/nfHb6T5ED8ate
Oej/DNu9ZDmRj+6ek/mfzInxfpJc9N81F+KTx3LRf8LcATb//konsnc4N/rr
eHngz21P9g9YNufPcfKy/m0sm+fffXlZ/5j5WP+W+Vj/3fmQnxstP+dfs/ys
/8788CcjFwiwuf9vXAD9xbYC6O9FKAjWDQtS/81s98MWov/6hRCf3GDZvP/x
T2H6r1OY/tcWhh46hEv/Ncn+Ksvm/Yu/LvOvVoT1X16E/n9ZNu8fVi4aYHP+
usSyef7+btk8/1YoFmBz/r+oGMbLL8Wof9ni6C8WWDbz72Nx6KdLlWD955ag
/u8sm/2vREnkK2eVRDzqNVkULRVg8/7b9FKs/4tSzL9waeo/pTT6O89KM/8C
ZWBfTSwDe+JxGdY/b9kAm/O/cZbN7488sBx8XuXnKgf7zphyqK+8R1bZy8Of
GFme+d8m6ywVAhwU7H8Y2b9RAfE6mSqC5WCyuloR8Yv0lZCfN9Cy+f2DS5aD
z+vcNJXR3+9Hdi6QZcoqdvy/f6q3ZfPv352tgvi8oKrMv4dl8/x3qirrn7Ra
gM3vT3SzHHx+Ko9XQ/wqUXX0F52rQw/vSHWM1/FrIB63A9k/WAPxOXFrMv+2
NdFf7a9J/7Fq0X8ry8HnkXpPLeofvTb1b052dpFllDpg1aQO4hHbLZvPHyLW
5f7TqC7idbeQ/XD16L8BWW6sh/qq0PWZf936rP+6+tQ/ZAO0u7XI/uoG0Mdx
GkJPWd2yOf9YYdnsv78bIl6vSiOu/6WWzecPPyyb719UlMx/sYS+8qtEf1Wu
Ma5Hwm+Mdu+TZXP+XboJ9795TVAf/30T2HNKNuX+N7sp7Kk3TZl/sWZo92Y0
Q/z6pWVz/XOb0/9UsvO8OfMv2IL1n9QCeoknLRC/l68l4tPjW6LdfdiS+udu
BXbGtqJ/zXaVozX3/1Gtmf+d1vCns7ZBPO5wy+b+6ybZydw2wOb+c0hb+r9m
2bz/nqEd7HteO/TXl9shHzdte1yP/f7tqf/F9ohfpurA9d/Hsvn891wH1MdL
3hHrR/fsSP+nO0IvX3Si/t0tm/ufE50wXiXuHGBz/9HFsjn/PtoZ/XWCLvTf
sQvy9Q91Qb5OvK6wJ9t1hV5KWTbvH8fuFmDz/NXasrn/3tsN+boxuvP606I7
9HR2d4ceMmoP5Kua9kD8YkcP5h+pJ+e/7En/W3sifj98L8w3p2Ev+JObemG8
CtOb878e2VvfG+N1qD7Qz63dh/Vf04f5h+hL/Wv0pf4rLZv7nz+WzfNf1X5g
vcyyef7/2Q/x+pX6w56zpD/0k9/6Qx9VfgDn38IB9P95AOtfZiDycecPhD//
w0DUwynlcf7PsWzO/99aNucvxQcF2Pz+7cxBsKdfDUL8bpHB1H/aYMTrvLBs
vv9caAj0UJMtm+fPp0PQ38s/FHrrCZbN9e/RUPrPMwz2nXHDUG95fxj0VTmH
s/6jLZvzn7vDoY/ONgL6uSNGIF//1gj6zzKS/oeORH91nSwyjuL+O2gU9NZX
2O6mG03/A0YjP+fSaOQjU49BPqpvgP/7/enzbPdSjGX+vcYy/zNjUS8/2Tjm
32Mc8z85DvGoJOM5/7qSvWPjWf+EExCv22kC+vuHyU78iQE252/tJ7L+ByYi
HhFnEv23sWzev9w3if5jTqb/lmRnz2ToJaNNgV6q2RTkJ3aSvchTuf4aT0W8
7rapsO9HmIbxTqNp9L95GvUPOx3tor5lc/6yYTr9/zMD+rl1ZqDdXzsD9pyQ
M+m/5kzoo1axXfydCX28arMQr14+C+PdX2S/8mzO/6WzkY/8znZVYQ7rv2gO
2r0vls35Q9m5yNddMBfj/Y9zqX/peegv586j/u/mMf8S8zn/Zs1n/q/no79b
dAHzn052Xi7AeFnY5/yb4tP/M5/+Cyzk+p+4kP4fWzbvH+ZdxP1//CLq/2AR
/edaDH3FmMXU/95i+NPZl9D/yCXU/zbbnaxLEb8cRlY3yCLTMvofTNZXlyF+
N/1y+h+4HPk4l5dDH5lmBa5fqp9l8/xzYQX08lKupP/eK+HPPbsS+fpBq9Du
9FzF/E9ZNp9/JF3N62+31aifd5ysE63B9dLtvAb5+kfWUP8EazFedliLfNXB
tbAn4q6j/7br0K73Wza/PxFrPa9/rdbDvrN3PfST0TcgXtWcLHZtwHgvykaw
bkJ2t5P9iJs4/6Vl8/7JFsvm+SvcZubfgOxtJOvQW+i/LtlftwX9nVBbOf9q
bUW7Wk0Wzjb6r76N+a8gu7/Z36+yHfk6y7ajXf4gq4o76H8x2ftK1uV2cv/1
d6J+/qed1L/MLqw3OW8X4lPvyaLkbvqfvZv5v7Fs3n8ptifA5vlvBtl5tYf1
d/dy/k+1bN4/fb6X/gvuQ/30JMvm/vvJPoz38+0PsHn+mbAf7fKhZTP/civo
JcYqtHvasnn/MMeBAJvzr1EH4M+/cwD+nGwHA2zOP4YfhD7qpmVz/pT5EPx5
Qw6hv752CPbdDIdRX987DP2cK2SZ9gjyVf0tm/V/ke1eqqPc//ocRTzuuaOo
r5/8GPefXsdQL3n6GOJX4jjr392y+f2FE2Sd+ATq43Yh+0dPIB4n4UnEIzue
hB7qEFnEO4X91Wt3CvXR6hTq6cY+zfnX+jT972O7jHEG80e1OIP8xG7LQcH+
o54NcPCfbmo5+DzW3XEW8fmRziE+p7Flc/66le0q/HnMN9HwPOL1Nlk26y/M
Bc7/epbN+l9Pdv65CPuytmVz/r+GLEJcQr5ejUto1ysvwZ775xL9V72M+jnL
L7P+P8mq0hX6X3IFennfrkAvXf4q6uMuvEr9P1s2+2/Za4hPzierD2RR6jrX
/5zrqId+ex3xu8VvMP+ZNxC/85rtsshN1n+aZbP/v7Bs9t9Ct7j/TL4F++5T
tvv5b7P+Ey2bz78e3YZ+Ks8dxCPGWTb7732yznmX/kffhX3/7l3Yc7Lf4/Vn
hGVz/nfrHvQUWTTzH6rRrq9r5OdmvI96+YPuw59z9T71T/cA/dUAy+bzl0tk
L/VDzr++DxG/e96yuf6keMTrX2/LZv85Y9ns/8kes/49HiNf7+Rj9NdJntB/
1yfQyz/2BP2dRE+pf6enrP/hp4hPxH8Gvbz2z1j/A8/gz43znPtvm+cY7+x/
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
bqx/2u6c/wO6o11e7M78U/VAf9G3B+x753rQf/KezL9XT+Z/uifq5yTrRf/d
e8GfOkEWSXoz/y694U8f7Y3+bsI+9N/Rsjl/PUyW8fqCVbu+rP8Btnux+8G+
bt0P9XT39UN8foz+sOe07A895O7+yE9FHcD114zs7RiAeulIA5l/44GIx99q
2Zz/RPCYf0OP/jd5iF+EHRRgc/5ZbxDs6fVk95/BATb//l/twdR/LVmGGEL9
a5DFKrL3h6yrDuX8Xz4U8fg/yU7lYYhPLhmGdvWNLCoMB3sLh9P/5+H0X3YE
59/8Ecz/o2Uz/0uN5P47ZyTzf0f2io+i/5mj6P/1KOpfZDTznz6a+r8YjfGq
0Bj6n2LZfP/kqWXz/n/+sdiv3YljkY//yLL5/lHecZhPctw4+r8/jvrnGs/8
R49Hf32X7W72CYjPHxHg/z5/uj0B9mWWiaz/0InM/8ZE5ONlnIT49aBJ1P+q
ZbP+003m+h84mf4vTYY/lXoK959+U9DfO892nWIqri9ub8vm/PMM2QmaxvnX
Yxr1PzmN+iedzvy7Toc9fYzsJpoBffxOZOfIDNRHxp9J/dvPZP4HZ0JPL84s
1r/NLOa/37I5/4k5m9ffVpbN+/97ZjP/aHN4/W0+B/Xxds6h/pHncv9vMpf1
3zaX+kech3bZiKw2z4M9EW4+9a8/H3rpDWx3Qy9g/nUsm/ufdQvoP6QPf6qm
ZfP8s9qyuf/7S9bVFrL+Kxai3f9l2dz/VVmEeOTSRYhXfV9E/SsuRru3aDH9
f2G7W24J7PsLliBf59MS6CVLL+X+O3cp7In3S5l/iWUBNr8/PWsZ2t03y6CH
X3Q57DkzLJv3v18uhz6q8ArYE1PJ3rMVqI8usJL+J61k/o/JTr5V1H/8KthT
D8gi9+oAm/dfx6xGPvoe2c2xBuP9kWsw3rmzBvHKrGvpfxhZ3FzL+mdah/mq
B5Pda2Q//Xquf28987+8Hv1Vmg2YL6L/BtTbu7AB8euUG9Hu9tmIdv+sZbP+
k2+CHrLnJvRXpyyb51+xmfl3s2zefzxu2Tx/J94SYPP835nsHN0C+zLBVsSj
OmyFP3FoK/x5cbcF2Pz+QlvL5vMHtQ3x+LG2o7/T2nLweajcS1bRdwTYvP/a
guztIusoO2HfbboT8frbLZvfP4m0C+1SWg4Kzn/LLvoPvxv6eQ12s/4bLZvz
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
jIc/ddt4jDdCJvD4bzqB9XsnMH70iTz/N57I+JvIVpRJPP4bSBbff1lPtv9M
Qn+1upN5/K+ZDH/Kr8nIV3dN4fG3cgr6o36fwvg1pjL+MrL2hWxWnYbrl7JU
srj/+zgN461KHrC6SLI4//s98GeXn87488nmG7JSdkaQxfvHc2ZAD+sl7Wrp
mcjXmEm2n81EPlqJWdDb9MxCP5QntOtFZ7P/U8jqw9mYbxSag/zsiXNY//05
jJ9/LvUfL1nsv96RLN4/dM5DfeoYsnFTsrj/zTUfrI2cj/HmtfmIp+RYwPjD
ydZlspp1IeMPWcj6fQsZP9OiIIvvnw5cxPrPSxb7n+GLgyz23/pJFu9/nVmM
+Ua6Jex/7yUYr52ULH7/M81S1t9zKfLVjy+FPyuliX6r3U3Wf8Sk/smWsf4u
y9BP8xDtSpLlqEfvuJz675cs3r9NuAJ2o90K1r9nBfxp8Vfy+GstWZz/d61k
/+OsCrLY/2pJVrevQr+M0NWYbzeTLPZfI8hmjDXIV2myBv3WN0sW+39R1wY5
PBC/4VroYWxYi/n2X8mB3yPR6q1D/ubadRiv/KZdr72e62+VZLH/90OyeP+8
5gbGX74B+mhfJQf+mdU2ghVTsvj9h08bMd+qvAnrR128CfGM95ugl11hM+za
Asni/dO3m+FfKbeF63/uFtb/agvr17zwZ8zyoj/2c8li/6dkBPyb0yOgn/I0
Avnrxbay/1O3Il/10VbqX3gb2J60jfFt2s0C21GPMkGy2P+6ux3jrbw7YFfH
7kC/jFuSxf5f7p1BDvy9UG3UTuhpXt9J/XPukvVa/8Q3dmG+dUWycJJtN9gY
SrYvkrXMexh/0B7oq1yQHDhe9Ax7WX9/yeL4P7sX8w11H/S0++yDXTu1D/PN
tPt5/PUi65H7Md5KdYDn/x4HMN44Klmcf5MfRL+0rgfZf0uy+Pwn6SFcv/RO
ksX7ZwcOsf+JLORntLfg394rWZz/EhzG+dhsI1nc/+yWLO6/4h6B3dKPYL66
Q7I4/8Y6CrabH4U/betR1GPGPBZkcf/ZVLK4/9wiWdz/RzvO+I2OM/7G4+iH
rUTy+lc/kvWvi0R+yh/J4vmjzgmMt1afgD/15wnqX+sk9V9xEv3VvtFuVj/F
888yyeL3Pz6fQn1WldOoT10iWVx/P5zGfLviGdSjLTxD/d+dYf3lz/L6O+8s
6rVek9Uy5xh/9jn2/8U51KeVOg89zBnnGf+ZZPH9m+IX4N+adgH+1ccXMN8o
4uPxN5msPSCbBS+ClYkX0W/9nmSx/vNdQjx13CXWf/sS689zmdff0Zcx37wh
Wew/57qC/ugjJIvnz6uSxfN39quwG8OuIh/70lXE07JcY/2Dr1F/n2Sx/jNe
h90acB36qOeuw5+R/gbG233J2ukbyNcMuwlWepP1Ezepf+pbYNV9C3oZx8h2
itvIV+smWTz/HL5N/ZPdwflS73wH9f3/6Zr9T3wX440OksXzx767jO+4x/NP
W7Ky5x7y0+Pd5/mvlWSx/nfex3wjto3+2S1s5K9ts6GfGfKA599mksX+m/cB
+mFFf8j+N36I/IxND+HPjvII53OtwSP4N9c/Yv//Shbvf9Z9DH/WmseYr/6S
LPafXE/A9sonqFf7/gT9Mms8pf7Ln2K8/kWyuP5WfYZ81aXPYDc+0m5Xeo58
tEXPMd70k5UKL9j/+S+Qj/XmBfJXy76E3ZjzkvFfvoReWulX1H8mWXn+CvP1
Eq+pv+c18lWf0G4UfcP+T3mD8dpD2s1Cb7E+lElvWf/9t9DPyv+O/R8f5H/f
f70j7WL/1ekHa2P8rP8mWcn9HuP1ke/h37pGVnN8wHhj+AfY7ctkLetHjDeH
SBb7zxc/Ih8906cgi88/Bn6CHup52o3wz+x/v8/QVzvzmfHTfeH66yNZfP51
8gv8WWm+Uv+eZOP4V+qf8hvXX/dvjH+ErCT/zvXX5Tvysw59R35qkh+8/nX8
gXrt/T8wXkv4k8dfO7Ky9yfrj/+L8VtLFvtvu34hnhHnN/ppt/zN+rfTbob+
4fmv+R/2P+IP4lkx/mK+2uQv9d8sWZz/oip3sf4bShbxN0gW8ZUoYL0e2Vor
WXz++Zts1I6K8fYqyaL+H5LF5281oyEfZYVkof9XyeL8Vy16kMX1x5Qs3r/4
RLtdOQbs2mLJov/vY7D+ijFZ/wKy9Vay6H+5ENRnzA1BPfarEMTTtFDGnxWK
fJUXoahXLxkL463pZPVpLMw3isUOsrj/nSpZ3H89ig3/ZuE4QRb7b5PjML4d
h/ELxGX8CXEx3rgbl/rnjcf6x8Zj/FvxkK+SJz5YHxUf/bOux0e+as4EjG8k
YPwrksXzVzZHkMX7t0MlB56XlEsOxs+cEPGsQQmhp3pBsnj/NUMi2O3+iZCf
dlay+Pzr/28g/3c9KX0TQy/9VGLUY6VNQv17JcF8I5J2O1VSzNd6JEV95lHJ
Yv8nRbIgi/f/ukoW719ZyVCvmjQ511+n5KjXPkDWEqVAP8z2KaCXso92PUFK
5GO1Iau7yUbcVGBbJ2s7UrH+WKlRj9IiNfTQt0oWz58x04DVppLF/uMWsh0t
LeM3Ssv4G9PCnxIljPHrhzH+ujDopf4JY/110mG+vVqyeP/yp2Sx/1ZLBSsr
JYcH4n9ToY9VPT3rX5Ye/o3PZLtKOOMvCYd/84Nkcf6rlIH1L8zA/r/LAH9q
+YyMPy8j63+dEf3QymQKsvj94dmZkI/yMhPq00tlhj7WDMni/cdnZKN4Foy3
p2VBPO1xFow3i2Sl/lOyor/6A7JVMBv7PzEb8jXuZWP9+bKz/nHZGf+25FDr
n/86cwRZ7L+Olix+f+ZGDvhTc+XEejZG5GT9V8la9lzUf1gu5KNcJutZcrP/
g3MjnuojGxnzoJ/2gDywa+cki/NPeievP/2cjH9acmB/3QrLy/XfW3Jgf9w4
IVms/9T54E9z50N/zGP50E8lZX4cD3o3yeL7D4clB/6pyQpw/XUuwPgHCyB/
LXFB9NfsUBD+lP3/cSC+oxDPP20LIZ66pxDiGfEK8/zbqjD7v1Oy+PwzdhGM
V1oWgT99WxH0xwopyv43kyyu/17JYv8/ejHkrzUuhvHmJsni/idqccZvIFms
//XFoY/6tzj1r1uC639NCfb/F9l0lUS+yirJ4v3/7yWRj1WjFK9/yyWL/acv
pVCvXbU0rz9LJYcH4n8sjXyVyhrPv4s0zLf8GvyrFcrw/DO/DPpjvynD/pct
C3/mnLKIp7ySLPZ/S5dDvtbMcoz/vBzGGyXKB1nsv3kki/vPJ+XZ/6IVwMrU
Cqz/YQXWX6gi7OqkiqjXuC9Z3H/mrwTWxlfCePNOJeSn5K3M8/8YsnVTsvj8
PXcVxh9Zhf2/RtZyVGX/h0sWf3/gSlX407NWY/wh1TBevViN8TNVD7LY/xlI
1s5LFvtv4TWCLPZf+0sWz19namC+la4mWO1TE/ONk2Q7TS2w1rMW+mEeJyup
XPCvd3ehP9YRF/JTk9fG+cPoUht2+1Bt6KMlqcPrT8c60Fc5UIf6J6zL81+7
uqx/L9mIX4/rv3U9+Nd21UN+Zpz6QRb7XzpZ3062QhvgeFGbN2D8CMli/yFG
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
/C2TLPb/P2dDfVrV7Iy/RLL4/tXH7IinV8qBflgLc7B+fw7kb5TPGWTx9z/m
SRb3f2/IZplcQRb3f3NyIV/9ZS6Mt0rlxvVJnSlZPP8+kyzefymeB/3WPHkY
/zHtSlEn+qVPcTL+AyfqUwvlxfXUmJgX+dv38qKfWv581H9cPuip3MmHfHRn
fq7/0fmRj3ozP+PnKgB97BEF0F/tWgHkZ2YviONFGV4Q+emXJYu/f5GlENff
kEKYb/gKIR87Y2HqP7Aw/JnnCkNvJbwI6tP7FYE/63QRxFPTFWX83kXhzz5R
FP60NMWgj+kmK8eLMX7K4jz/dZMs7v+PSBbP/8lKYD3bnUsw/qES6KeZuCT8
KR0li89f9ksW97+OUjz/tiMbe0pR/3ilcTxorUsjH3NnacxX4mg8/lpqyNfa
Jllc/0PL8PzbrAz8216yFqMs9DEbSxb7b5sli/2fqOWCLN6/a1CO+m8oR/3/
0m7XLY/+amvLQ0/zV3nopdSuAH/6qgrI1/pOu1qzIuMvr4j+2V9o16pVCrL4
/v3SSqz/UyXGr1yZ8RdVhj7qe8li/6FCFeo/n6y9JZtlq/L6P7cq8tdfVWX8
0tXA6iyy8bwa9S9RHXZtenXYzSfVUa9SrEaQywbiT60Bu/WwBvtfuCb0NCaR
7ftkrUAtxh9fC/kpd2nX87qgtzXGBX/qLdqN3LXB9kjJ4veHr9dm/3PU4fFv
kPUrdRg/a13WP7Qu9DEu1mX9meqx/kH14M88T7uSoT6Pv/712f8z9RlfbYD6
jD6SxfX3JFlL25D69yQrkWQ9VSMe/90boV71aCPqn7wxxttdyJrVmPGTNAmy
+P2TTk0wXj/QBOOthE1Zf3uysZdsx2+G41Nr0wx6mLuaoR4lbnMe/3pz9n97
c8aP1QL+jOYt0C87ogX8aTFbsv4mksX1bwtZj6az/oZkdaNO/ZVWjF+PrK1r
hXzM362gt1KnNeOvJls/yGqtNmBjRRvobX9tg/y06m2pv9kW9SifJYv9/yrt
wNZiyeL94w/tUI9RsT2P/wVk7V176l+uA/JR5pH115LF+69aR+o/uyP0NV50
ZP0lO1H/GZ2o/1OyUrwz5uvTOlP/R2S1SBfGn9wF/mybrBXsCv/mBMli//Ge
ZPH5c75uPP+MJau3u0EPI093Hn+jukNP7UZ35G/m7MHr/wiyfrUH/FnZ3OiH
OswNf8Ylsp25J+Zrg3siH/NCT+qfsRf86wN6IR/rbC/Wn7434/eVLPbfTkkW
z59hfcBmL7Jygqyn7ov+WD0ki+efY5LF/WeKfphvd+2HfLTDksX9R9L+YKVz
f+p/sD/jJxrA+jsMgH9j3wDkYycYyPrbks3dksXzT7xBYL3VIIy3dgxCPDX2
YOrfgmxvHYz6tJAhjN+UrHjJevShjN+IrG6SLD7/iTKM8esPY/3rh2G8+WcY
9FXqDkd/9TXDkb/1czj1dxk4no2VBuz2N4Pxa4xAf81lksX57wvtetWRjL9k
JON/HEn9K41i/xdKFu8/+iWL/afyo1GvMn804ulvyFaZMVgf6pwx0M94OQb1
2qXGBlk8/8+UHNifMZ/RrpQYx/iecajPeky7WnQ85htTJAf2g+wHksX+c6EJ
YHOi5PBA/PsTUI+efyLjj5sIvdQ7E6Gn4ZwEve3Rk+BfuzkJ+pi5JnP9j5Qs
fv/62mTUZ2WfAv/qcLJxeQri2Vmmoh5tyFTUY/oki/N/pmnUf+A06GWdmwb/
argH+Rv9JIvffz0tWex/ppvO46/3dNZ/cjr862lmYL1Z7hnIRz0+g/1PORP5
291mol7tyEz2P9ksrBelyyzY9UOSxf5z4tmIp3acjfnGfsli/9ExR7L1z/9r
Nwd2c89/HPgXfy78663nor/WzrnQT40zD/0zWs6Dnva2eahHC53P608zyeL4
j5jP+DEWoB9WY8mBz2/UzQuQvxF1IY+/BmRtw0LW/1dyYL0r9RahXn3tItRr
/VqE+tTai1GPsUqyeP/4+2Loo9VcwuNvuWTx/Pt1CfTQqy0Nstj/XboU+auf
liJfo7KJ9W4vMuFPe29CX7PCMvhTFkgW+09vl6Eeq+xyxp+7HP6MV8uhh116
BfTVZq2AP/O55MD1XCm5kvGnSxbH/xOyWmwVxhtTyfbDVRivFV7N+idJDg/E
t1czfoE1PP+NX8P4d9dAbyPvWtjtMZLF5z+31sK/mXsd9FJGrYM++vV1GG/l
WM/j31jP/l8h21k3YL42VLK4/l+ULM5/mTeiHn3QRoy3zm/EeDXDJp5/+0sW
9z9naNfUzfBv9tmMepRTksX6T7uF668nWY3cwvipvNDb7u5l/Ucli/dfkkdw
/XWNYP+tCPi3kmwNsnj+67QV/TMObMV8O+E2nD+09tuo/95t7H+C7UEWzx9t
tmO+tWs7+x93B+PrksX933bJ4vkr1k5cH83mO6n/1p3onx5zF/vfZBf0Vbfs
ov7RdgdZPP823A19tY27UZ+p7Amy2H+tL1ns/6zbg3qs33tQr1pnL68/q/fC
bv/Yi3q0WvuCLPbfVpCVb/tYf/X96Ldl7mf8z/uRn1HlAPK3F0sWz98fDqAf
ZsWD8K8sJOvvDmK8Ve4Q4qnzDiGe8foQ8rc1C/602ZLF/ucLslLqMOPPOAx/
1tPD0FstfgT9NqYdgZ72oyPITytyFPmbk4/Cn/LgKPUveAz6WROOwb96j2zk
O4787bHHYddu027miYS+yuhI1n8jEvVZOU8EWbx/OEKyWP9XJYv3/7Kd5PV/
2EnWf+kk6lOynOL6H3wK+VsXyGrG06x/gGSx/3D2NPTU0p9h/L5nGP+0ZLH/
FnYWbPU6C3/qibPsf+pz8Gf3IGvHyGaK81z/3cj64fPsf9ILrL+zZPH++cEL
6KedyMf4HSSL888+H/wpjotgve1F5GPtvgh/arxL1L/VJYy3d1yC3lrsy9S/
BVnZdhn+9ZAr1L8pWfVewXgj+lXGb3QV/dE2XWX8KNcYvwFZX3+N9f+5xvrr
Xoeexhqy/fM65muuG1jf5sob1P87Wa9xk+t/GVn9chP+jaq3eP5dIln8/s/H
W5hvVrrN9b+IrPtvM375O/Cnzr+Dfhhv7lD/MnehhzbnLuO/JCul72H96jPv
Uf9n91h/iftc/577rP+xZHH+KWrj/GBOsdn/hzbrL/SA57+JZPU+2cj/EP7s
cZLF+ecO7abzEY//MY8Y/ybZyvWY63/kY/b/2mOMt7M/4fob/gT6mJefUP+s
T3n+GfIU4y3fU+qf6Rn1H0i2zz3DeC38Oc9//Z7Dv3LmOfTS071Av6zeL2BX
T75Af400L3n+d79Ef7TjL1GfmfIV/CndX6E/+hHJ4v4z2esgi/u/LpLF/tuh
14yf+A3jd3yDeOb+N8hfSfgWrLcjW3ski/uv+O+Qr9GabO98h3y0OH7MN1tK
Fs8/22nXQ98jX6vZe8aPeE/9Y3xg/Y0/QC9ts2Rx/x31I/wpDT9Cb30D2for
OTwQv94n5G+s/YR87V+0a7U/M/6qz9T/x2fM12t+Qf7W8i8Yr379gvFGta/U
f+lXxv/0lfErf4N/ZfE3jNff025V+B5ksf+54Dv8GW+/s/6yP6CvNley2H94
JVm8f6P9hD991k/q/5x2teQv6j/9F/zbT36x/8V+Y7w5VbJ4/nxEu174T5DF
/sMkyWL/1SYbBf6iHnv8X+p/9y/yMfMq9/83X2WsZPH8e0uy2P/LHQV2dZRk
sf9zXbJ4/s4RNchi/9eQLJ5/r0gWx1+2aPCnDyVbF6MhXzVzdMQzBkkW+y/n
oyN/LUOMIIvf3+gfA3blbAzM19WY8G/1IaunJIvn77QhQQ4PxO8ZgnhaZAji
malCoafSIxR66EdDoZeVPFaQxfm/K9mwYmG8nSQ26tE6xUY884Bk8f5pojjs
f/s4mG/tlSz2/xLExXijTVzqv0uymBM3HuymLlm8f70jHvTSY8VHPKu55MB+
orqVdiNmAtjtJgmo/5YEiGdGc6BfSiPJYv1tdGC+pSQMsth/rp+Q8deR7d9k
rU4isLlasvj98Z+JoJdeKzHqsVYkpv7fyEb1JIxvkrXPSeDfrJKU639JUsTT
PyRl/ysmw/pUF5KNd5LF+8flkuP40OZJFuf/15LF+i+TgutvNtl6kQL5qKVS
In9jRkr0y36aEv3Wiqfi8T+NrDxOhfF6kdQ431iTJYcH4j9IzfgF00APewJZ
uydZfP6ULy2OV2VcWuil36bdyhPG+kdLFvvPN8JYf850PP+NkCz2v6+mQzwl
u4rziT5Mhd26pDJ+lvSMP5hsX0iPeFrGcJ7/B4RDH+VcOPufPgP731ey2H89
TTbCMgZZ3H/0ysj4JySL339JnQl2xZ0J9enHMrH/KTJDD7Wb5PBA/MOZGT9p
FlwvtM6SxfcfD2Zh/Ymzsv4OWTHf2peV8R3ZeP5tS7Z3Z2P98bLDn9mKrOzM
jnr12Dl4/W2RA+PVbZLF/VdITq7/ppLF8583J/Qxo+cKsth/a5wL/dQ35cJ4
K0pu1t9Astj/WC9Z3H//4Xitbh7WvyYP6lV+5aH+Lifyt1Y6ka/63Ql/Ro28
iGcvkyw+f/siWaz/qvlQr7I0H+z6R9qtSvl5/V+Un/3356f+5QtQ//kF4M98
UwDxlLIFMV+fI1m8//OyIOsvXYjH30zJYv/nWSH0TytRGP0yPYWRn/KkMOsv
WoT6TyGrD4vAv1GoKI+/iUVZ//2ijJ+/GM9/48n6HbLlLM71N6Y4498szvpz
lQBrI0sw/jWykqMkWB8uWew/XS4JvdWspaCXMaQU8rN9pTBey1Sa8QeWhl05
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
uL56C0sW9zOtQuHPMVmyuL/eSXbbodDPjB0L830FYmG80jIW9HFOkCz2Y7fF
Qr2eu5LF/XlI7CAH7j/9eSWL56VmsRHPNTY28jG8sRHPeys29LSjx4E+jjyS
xf5iY8mB+2v3qDiIZ26Kg3x812lXosZFfc6ccaGH3kBy4P7QY8RFfGt9XOTv
vxKX/f/L+a5s8VCPUVeyOP8NjYf59pp40MNxSfK/99f0584cH/mbLrJvEFlZ
JTlw/+28EB/66N/jo15PhgTIx6qRAPr5+0sW35dbngD5us5KFp+ffaE/r+pA
P+2qDujj6OvAfG2pA/m6TzkQz/xI9qVNiPWqVE6I/jh7JYR/fVFC5OeJJFt+
yYHjwZ8qEfypFSQH1p+rB9mYT/YeTYR67DeJWH+KxDz+yybGfHfXxKjPnEO7
z0qM/JRXidn/pEmwnvTSSaCfp1MSzLdmSg7st/gPcLz6nONdiZIif6NEUva/
vWSxn+lJivmOfbRrT2h3J0jG+osmg93XJhnqU6bS7tydDHrpD+nPEzc52CqU
nPXrksV+ySSOd+0gG/eTI743VgrkZ+dPgfGOFikQTxufgv3fmgL6m3do98VM
yf7nTYl4zqYpEU8fQ/ZskSzez70pOfD+pD9aqn/537+XmZvsapQK+RgjU8G/
d2Mq+Levcb4jSuqgPfD+s5YjNea760sWnzcNlxw4n/jWpWb9V1IjH+cfsp41
DdhTh2wNSQP9/KvTIJ56kez6mYb9z5SW9deSLH7PYWBa9NuxkuO187S7v6VF
fmZ4GMb7qofBv9I/DPOdy8Kgv36G7PkcxvrTpQP7q6SDP7UP7a4lZONkOtb/
IR37n0YFOyqRtZ5k90IV8c3jkgPr0/cuyGI9KanSs/7y6Vl/d7JnnmRx/jtC
9r+WLI7/5OHw7yoTzvq7hKMf3tnhrP8Q5ztehrP/STKw/lJksyPZN4OsHJAc
OJ6cz8h6woyox1M8I+tvJzlwPvZPo13dS3Y9JhvxM/H8VyQT9LFbZ0J8x5RM
rH9XJujnfkC7GSczz38FJYv9d53snJgZ+ejbM7P+e7RboVkw35+PrDbPwvrH
ZYFeRgTZe5vj7RhZef1zkrUmZPdosrk5K+u/kRX1KNGycf3nygb99IbZkJ9n
RDbWv4Hsv0pWleysP3t2+Dfqkb3DJIvr31rJ4v73smRx//ub7M6SI8ji/r92
Dth9g2lXVksW9z++HIiv/yB7MuYEWzXJ/gE5Wf8KsutcTvTD+Eq7N30u5GtX
kxy4v3T0y4V4mkl2nyabn3KhXl9Y7iCL+/8quWF39ibriznec0KyeD/5veTA
/ak/dR7EVyvmQb0udx7UayzIg3jeY3nQb/st2ZHSyf6Xc8Lu7iZZvG89V3Lg
+cx3mHbltRP1OZPlxXhdkxx4HvN0zot8rVl5Ed9/MC/0UF9IDhw/rsT54N8o
KVns/3Qg29MlB55HHPvzIZ72NB/0cDvyoz9msfyoz9c2P/JXpuVHv5x7yPqj
/MjXE68A/FmFC7D+VrSrk2l37aTdsAvAvzd2wSCHB+ovIFns/7SULPZ/Jvxn
/+efexvHm3cLQk9fSCHoqeQrhH45mxWCf30s2eMtBH/WLcmB9eGPXhj1qnnI
rsaFMd8YVRj98m7iePu65MB+oCNqkSCL91tzFkG97gZF2H9DcuD84VtPu3K1
COpz/qVdz1YU+XrqFsV4ayjt/jW0q5eKoj+uX5LF/nnmYmCvi2wPKgY9HKuK
QW/tguTAfpf7ezHoY2YoDruvRnHoqQwozvqXk/WzksMD9X+RLD6fVUtgPfur
Shb7v33JrqUlWP+pEtDP+1Gy+D2htCXBjsolkZ/WqyT0dS+i3YwsCf8+v2Rx
/KcuBX2dFUohX71HKfZ/finobx2l3f+GdjVFaawnV9nS0NPoSvbOKY34tlUa
/h2vSrP/STWwu7QGfc1OGvTwzZQcOF6Ug5ID68H5nOP1RGV4/Jcog3ys9mUQ
z+/heHUf7a4nZCNBWfa/aFnW36YsxjumkrXdZZG/+yHZjFuO9RcqB72VVuXg
zzmJrO8oB30998ux/ljlsT79+cvDrrYoz/rHk42tZO+d8qw/ZgWwI28F5K81
lRw4/txjJIvPG7eQfTcli8+/o1fk+T+3ZHH/06gi6x9ZEfGsjRzvvyZZfF4a
pRLGu3JUgj+jPtk7XLK4/11XCfo6rlSCvtqfSsjfnbVykMXzf53KyM83pDL0
UNZwvPOiZPE+7E+O92SqgvysWlUw3z9Qsrj/XVkF8V3nq0AP45tkcf0Lr8rr
X/WqyMfRvyr8actod5+RLN73+1wV+fnSVWP/q1ZDPGcfsr6E7DlJtj5IDjw/
+NNUZ/2VJIv9v56Sxe+nLqyO/L3HqyM/+51kcf+XqgbrL18D9bm714B/c14N
5OM7Ill8/+2NZPH8m7xmkMX3ocvUxHxPl5rI15pN9h+qifzUl5ID68WVpBb8
GaVqQT9vx1ronz2jFupzHCBrz2ohf3dCF9gs7oJ/XzsX8lU8LuTr3OuCf/2x
i/XHr836i5D9rWuz/1NqQ0/XLsni9yMe1EY8b5w6sNsFJQf2Nxx6HdY/sQ70
dW+vg/jmPY73hdbFelTy14V/Z/O6mK+Pqwv/ngjJ4v3s25zvj1EPrDrrIZ6r
iWTx/uzoeui3dzPZvlEP/XREq4/4Wq768OduWB/1miPqw59vA8cr1+pDb6fS
AKxnb4D4nnoNUJ81jOP9a8nqZbLrt2Tx+x1ZGrL/tcn24Iao17G6IfxpvobQ
1/2DbGZsxOO/JlkZSHauaIT4+rlG8Of5SrbSN+b5v1pj9r8f2WVKFr+fe7ox
6vF+ItthTaCXo0oTzNd6N4F/92KyeaIJ639PVtI0RT3Oik1Zv7sp/HkWNEU/
rGOc739Lu5qyGdd/ObLRjeyd2wzz7cPNkI/jNVlL1pz91ySL/e/OZN8syWL/
81Bz+HO+aA599MQteP4r2YL979AC+vin067ub4H4rqdkw9ES7C3WEvHstpID
x69jGu3aHrL7UUvoZ8bTkZ+vsI78lNY65jsnk/WdOvTx2Dr7H7sV+1+ArLZs
xfon0G5sI3vvku2Q1ljvjnxkrVlr5OMe2xr5ml7JgfO37xZZidEG7MzTBnrr
jduw/lFt2P9NZP91shq1La//OclGA8li/8+g3V5PdlyVLPb//rZFvu5s7TDe
rEv2DW2H/ipr28Gf85Jk8X20X5ID9w+ezO3hz3K1hz//IMli/39Ve8x3XWgP
/8b39ojvzdCB678G2TGgA+JryztgvvtsB8Qzv9DuUzuClWod2f++HdEPfSnH
e051RP7WR8li/y9tJ/hTK3eCHq5etBuLOiFfb6Rksf/hlyye/1J3Rn5aBbK7
R2fka86XLPY/j0oW+19vJYvnvxRd2P+yXeDf01WyeD97ThfU47e6wJ/6SrJ4
/y1pV+RjlO4Ku7dTV9Y/k+w4yPna867Q352oG+ozS3SDf1/7bhivTJcceL/R
ua8b4ulPuiGeJ0F36GEV7Q69/W26o1/qVMni+X93d/g3HtKfN24PxLML9UD+
jlZkbRLHu3fQbt7vgXi+WO4gi99/KOBGvs4WksX+z3g3/Hm2Sha/j3HHjfr8
MXuC1bw9kZ+rKdkY0xP5eLdIFt/nvNkT/XJE74V8tdy9EM/dSHJ4oP6RZN9G
jleu90K9zii9Yddz9MZ8T33areG0+9dJFu9/XeF41x+ykbUP4nvr9IHdHiI5
sD4da/qw/osc7/4pWRz/mfpifflq9UU8ZVBfzHeu7It+6OclB/YLPd9ot8L7
YT34q/eDf7W/5MA/1zLJKax/6j9Du/cz/dnp+sOfo2p/2LU+ZPcSyWL/+2R/
6OX7IFkc/2kHoF/OSpLF70H3lBx4X9yzUHLgfXLruGTHP+x/NwD1qKkGsv7y
ksX67z4Q/fHOkyzefzxCdryRLO7/kg9C/u4yg9Afs8sgxPPNliz2fyzanS8H
oT49yWD2v9Rg6G11JPtnSBbH/4HB8O96Jjk8UH/CIeiPt/gQ5G+3o93hkSz2
//cOgX7ux0Oglxl/KPrpKzIU8ZU2QzHfOWUo8td3kT0PhkI/K84w6O8vOAx2
VZcsPv+aKDnwz9g+DPl670kW7/+HDkd8R/7h0FNrTrt73HDEMyOGIx/f7eHQ
V4lpIL7TaWC+3sRg/aMN6GdtNtAf/w3a1WgjeP7LNQLxjYYjUK93BMfbG8iO
ayOQr6aMZP3ZRyIfs95IjPcNGwn9lHVk52WO13+PhB6eLKNwfrVqj2L/B49i
/1dLFvu/vlHI1/gxCnp4M45G/nZNyYH7Q8fA0chHWyE5cL/mPsf55tfRrD/9
GNiV6mOQn7OfZPH8Z45BvZ7TY1Cv9WkM9POHjQWrVcZCD1dvyeL+ZzHHe09I
Ftf/92ORnyPNOPa/4jjk63ZLFvs/C8Yhf9+xcfCnvJMsnv9Tjg+yeP4rNx75
ebqNh/7W3PHw7z88Hv7V17S7kk2Af0MjeztPYP2zJiC+49AE+NNeTIC+7sQT
efyXlCze/+wwEfooM8jO/ZLF71E8pd3jmAS2ik3CeH/bSchfnTaJ9e8hG48m
QS9vvMnI1y48Gf4drSez/smT0T/3Tsli/8eWLPY/Yk9h/QUli/2PlpLF+x8T
piA/zzaydZfj/SFT4U/NNxX5uZqRjbFkr5ds35qK/B0xpiF/Lc80xHc3nob4
5iiybxNZuTEN8ZxRPdBPz+lBPzwNJIvvfxge+POv9yA/9apksf/7l2xkmw72
1p3O+ofS7lhLu3ZpOuK7f9FuZp6BenyuGbArg2cgX+eqGahPvzAD/j3fOd7K
MBP+/DXI6oCZGO9aPpP1n52J/nm/zITetjoL/hzVJIv9/76z4N+9VLLY/z1F
u+8jWQmbzf5XJuu9ZkM/zyKyFTmb/ffPRn5q6jmsv8IczDd6zGH98+fAn310
Dut/S9ZSzOXxX5ZsdiX75sxFfsrhudDL+Wou8tWTzoPdU3oe6+80D/30zySr
B+chvus52Ug0n8d/CbLdfj7ycUyfz/7vmw/93E/mQz8zwQL2v+gC1t+WdudU
sr57Afv/cAH0sOIuxHh/oYUYr7YiuyZxvLGD7L3P8XasRex/AbLWguwevwj+
zK2L4M93ZxHyV0IWo1/OvGS9qWRx/htDtrYsZv03OV+NvgTxXLmXoD9GI7J3
JNneuAT9clxfgnq0KEvZ/xxL2f/6ZN/wpchXWU92XpEsPv/+sxTxPVlN2K06
Jvz7h5DVNSbrv2hCH+Mn2ZtpGftfi+wYtAzjtZXLkI/7vGTx/vM3yYH7EV/4
cuil1JAs9r/7Sxbn/2XLoY/nzHL4tz5zvj/dCsxXq5JdfcjGkhXs/0nJ4vz/
gXZH2pWYr1VaCbu750r0y1woWZz/jq9Evopfstj/SLUK9enlJQeeLzzdabfm
0e4/sgr+1TdkV/LVGG+UIXu7rEa/7NmSxf6fRdZekt1J1rD/pci+jmsQT5m5
BvOdB9YgX/0Z7Z6Ea4Ms3n8qLlm8/91uLeKpHrJr71rUZzyWLPb/469DPLvI
Osx3tCFrUzjevWsd8jcfSBbPf3HWBzk8UH+h9bA79fWoT5+4HvE822m37q1H
Pf7QDVhPan7J4vvfzSUH9ouMcRsQ3xuxgfXfJjtibsR4zbkR+bib0G6O3gg9
fJs3oh7lJu3OaJuCLN7/zEX2NJQs9n9HSBbvf27YhHzVa5vYf2Uz2Mi+GfG9
9TYjf3vYZsR3rNuMeNrlzaz/N9nMsgXzfbW3oF/KEMni85/VksMD9fu2oB7P
D7KV0Yt6/DW9yE8dKDmwv+NaQbtxTrLY//4qWfyeSfoI2B3VJYvft+kXgfrc
ZgTyN0/T7vsUwf6n24rzgbPKVvRX770V8T2LJYu/T3hiK/L1v6ddTbON67/i
Nvg33GTvgm3on31sG/v/jv60lNsx311uO/Ixu/3H//zzzaVdObIdejlfSxaf
fyXbgXw82g70z+q8A/H9s3ZAX/XQDsRzvSAbiXfCn7fkTsy3O9DumCE5sD+t
7Zcc2J93P93J+h27kJ+v2C70W2m3C/o6p+1CfH2PZPH516NdrD/ebva/8G74
U1vvhj/XZMni94t27mb/7d3wb8feA7uj4B70Q2u5B/7dEySL8/82yeL9v7t7
EF8J3cvzX769rL+ZZPH7F2Mli/1vL+f7b0kWn3/H2Mfrf559yN9ovA96eUft
g972JtodNySL4z/qfpzP3Dn3Iz+zwX7o6TP2w5+yYT/ycV7lfP0v2ZPtAOqx
6h6AP/9QyeL+d+0B6O+6xPHGL7I380HUY7sOsv7BB6GPtuog8nFf4Hjz+0HW
n+EQ1pNSU7L4/HPAIYzXl0sW1/+zhxDf+iI5PFC/anH9V5Ms3n/pK1nc/y61
oK/3lIV49kfJ4vofdhj+tcqHka+712GMNxcdRj98kYehr/L+MOI5Ux+BnnoF
yeL+vwft1nzJYv/76BHUq749Av+uFEd5/Jc9Cru3K+32HMni+e8wx2uvjqIe
d9JjiG+WJvs6HYMeyqxj0N958Bjrf072JDrO638Jsr/9cfhXpx+HPq59x5G/
8URy4HnHmyASettFIxHf0VayeP6fGon63Lsj4d98GIl8fHFPYL5S+ATiO1ud
YP2TyJ4dZOv+Cfj3xzoJf2qBk6jH1YJ2Y/xJ6OfdehL+7TuSxec/IadYf16y
u+kpxDPHnGL9W05BH+XWKcR3Rj/N83/u06y/0WnkY408jXj+jWT1OtkV5Qzy
NXJIDjy/e+sH+d+/5zdc2sXz//ozqEe7Qnb/oX8z61nM99UhK0PPYrxzjWSx
/3/xLOr1/KTdynSO/a91Dv7UQefQb9fKc4hvnD8HfbzfON4OP8/jv8Z5zNf6
Sxa/f7CMdvMM7b7P9KeoFzDeWfUCxut9JIv9zyUXUJ918gLy9X+4wP6n9aG/
rko+2I2ePsT3LiTbx32I5/D7kJ+W6iL7X/4i8jG7X2T98y7Cn3KU7HxzEfH1
5Jegl6fMJditLrT7Z0sW53/rEvJzvZQsrn9JLkNfb6nLrL/jZejlmHkZ+WoH
yO5nZDPhFfj3Fb/C+ttfgX+nh3Z9L+2ex2Qr/lXU6y9yFfqrba5ivGvKVdRn
7CJ7H5DtONd4/Be6Bj01/RriuSfSbm6/hvi+e9fQLyXWdYx35r+O8Xpzsmfc
dfY/guy/TVZj3oD+LucN9r/JDejtHU27vfkG8nPcvIF8tGg3uf5z3WT/G5J9
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
brL1MAzx/HHTQQ+1cDr009UqHfQ0JnG8d0c6+LPvkx2xVa7/ApLF538tVORn
jldRn2+ryvrvqsjHGZIe8/W8kgP3o56m6ZGPNYbj/VtoV29xvit6OM//uSWL
599G4eiXPVKyeP9rE1m7Hg7/7igZWH8OyeL5v75k8f6XQXauz4D4+pUMqMfz
h/6trBmhp79ORtjVoRmRr2sN2bhI9v7MiH7ZmTJx/bski/2/QZLF518rM6Gf
5nnJYv/vWyb4VzJkhn9njcyYr/en3bMsM/K1ztDu/5wZ+qlqFujjqio5sB9l
9JEc2I/zLskC//ZJyeL552MW9FtLmxXx3ZXIZs+s7P9CshJJdvrJeqpsYE/5
bKy/ezbU65+XDfmpR7MhH9cbspE8O9d/mezwZ3eRLI7/ORyvWdmRn/ulZPH7
H0lySH3/+ecrRVY65cB450zJ4vdvDtDueZYD/bIS5sTx4y9OVtvnhF4uj2Tx
+cfenNDD+1iy+Pwvfi4e/0Vzwb/WJhf8uafkgv7mLs73PcgF/ZS4uaGvs5Bk
sf+n58Z4z8Tc7P/23NDLfy8364+Vh/3PTzaa50H+3nGSxe8/RdDuuJOH/Y/p
ZP+dTsw3mziRj2+0k/3fQnbedKK//0fVm8fvUH///2PLEhmyRkwiS5axZF8m
+5pBUohRys4g+zbIlmLsW5jIvjS2rDFkFwYlSxgiO6PsJb9f1/P9en6+d390
u90753nOeZwz11zXPK+55mWlKIn1brGSyB+0KIn64uElUY+2siTimydLIr6j
lOL5r0gpzCN6l3Z1mGSx/7+sFPWfoL/3jBwWLM33v6aloU8fLDnxfYK1uDTq
cUPJ4vPfU8ni80/+Mnz/a1wG/TIHlEG9zkLJ+RL6D5dBP6NHZTBPNd9b8Dca
voX8dl/J4v4f7y3ECw9KFp9/H0hOfD7V85bFequeZPH5t3dZ6AvmkuN9ZdFv
7c+y0GvmLkf9tcuhP75NjmaXQ/3qnnKox7hLfztnec6/RnnYw26Sxf7nzPKI
r+8qT/23JIvf/2WrgPyBIVnsf3SuwPlPq4B85o4KyOdcJ/svV+TxX0Wy+P6z
o2Sx/z+5Itbb2ypCr/cH/UO1Eo4XpVIl6NE/IVsTK6Ef7mbJ4vrvd3KcoTLW
a+Uli+ufjySL658vJYvP/99XRj+jqDL6p75YBfmMt6rAbretgnl546ogXrhO
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
ybZLf2/L54gfXiYrGUdRf4VR1P8x2f1qFOe/kRxfHIX4WvrRWG+WlSz+/qU1
mvq/IEfrR1P/Bcni79+lHcP5lyZ7H5LDMWRlLVn/bQzyWy+MBbv6WOpvKVns
f39O1r6TLJ5/cZrxnBTjqL/YOM6/BVkdMQ7xjJXjqP+kZLH/pXyB129YRLJ4
/Tf/gvqH0W4t43r3BO3BM66PC47n/JuSzcFkZ/F46PHD8ehf9FSyuP+1wJd8
/29Mtgd8ifXeQnJ4+EvkVx6T9Xxfcf4NyW5fyYnjOfAkJ47H+CBZe/AV5mfm
nQB26k1AfX5v2qO5EzBPdT/Z+JNs557I+dcmh/ZEzn/ORM5/z0TqvzsR9bg5
XXBQw8V84m6SxfffM13kM3fR7tziej/bJJ7/DbLaRbI4/qdJFvtfOySL6//r
5PDlyTgfK1Unoz96x8moz5o8mfPfNhn5gz8YL1anIJ9WaQrqMz+RLK5/JkoW
17+bJSfeP6Lfp3D+L01FfUZ5yeL+j4+mIp/3pWSx//v9VMRTLk7FfPQXp/H9
/61p6L/bVrL4/m8c7fG6aahfOz8N/TDTTKf+UpLF/V+tydHo6dCnrpmOfhtn
abdTzeDxX2IG5//BDM7/8xnoj756BvphnSK7yWfy/F9Usvj+4z3J4vPv8JlY
b66Yif45vzCe/3wm6okKz0pisf/97izoNYaS7aVk7/gs6v9nFvUXnJ3E4vnn
TWbD3xokWXz+X0T/4Cg5fjIb89XyzwGb78xBfKf/HKz3F5Cjn7hefTQH/TFe
+xp67AaSE/sjXh/J4v7f+ZIT3w8oByWL3z/fp93KMxf1unXnwj/oNRf9ib+m
Xds3F/nNe7Q7ueZhXn6tedAT9ZiHetTZksX9r7vnIZ59Zx765+WYj/6F1clK
t/mIr8+Yz/nvpL97cz70BFk9rI+redTf2aP+qfR3tksW339dkyzOf5m/QT/U
Kt9QfwfJ+RL6J32D/N7Wb6j/yjfIp6gLqL/iAupvvwD1uxMWIF6wiRxfor+W
YSHmYZZbyPm3W4j1/viFqC/aIFmc/yLJ4v0/3bd8/Zf5lvNvI1k8/2Ss5MR+
qbLuW9Srn6O/lXoRzj9uyUXoT9CK9njUIqzX/EWYl3lmEfI5KRfz+C++GPOO
3pcs7n8fuRjzMlYtRj32r5IT749esiWIF765BP1X3luC+nSHbC1fAj3uz1wf
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
KFnc//HibeRz3roNf7/tbcSPxkkW73/rb6Me4/xt6LPT3OHrv9QdxA9b30E9
ypg76Ke+5g76Y51lPDfVXegNSkgW+98f3IW/9vld6DFX30W9zinJ4vo3eQyO
ikoW1z8tyMZw+tsryN4v9A+fk5Ui91CP/i7ZGipZXP8tvQd9wXFy/M89zr/g
nzz+m/yJfjiDJIvz/yL6R0f/xLzUp7Qb+f/i/N/5C3avv+TE8RIu+Av5lcP0
1x+RrdfuU38DctBHcuJ6NJ5P1g7eR7/N+5LF/d95HqB+v+4D1Bf1ol2d+wDx
jX0P0D/73gP038v1kMd/LbJiP0R/9dkPEc/aLVlc/955iPqCHI9wfo2rSxb7
v93I5oxH0OPslCw+/918hHlFWR+j36rxGPUYnR9z/lMfc/7bHyN/eO0x6lVe
foL56FWewN/q8AT9cCc9wfpgK/3jK5LF/Y/qU86/ItlpT/YnPEW8aNNTzv93
spHhb6y3y/2N9V67v1FPOJ7+yvf01yPJYv8v3T9gtww5aPMP4sVjydo6yWL/
95xkcfynfsbjvyQ5avUM/uroZ6jX8J8hvn2G7KX8l+e/4v+ifuUD2vWRZGsV
/d1fyUGy59T/pmRx//N7tJvOc9TvLH+OeP7Pz1F/9C/Xq4WVS/+vv9FMsjj+
h5C9JZLF/u8xyWL/9x/G099IlsTi+eemZHH/58BkiB98K1m8/x+RLK7/n0gW
33+8nvzS/9sfp1Fy1OP3I0ffSBbf//1ENh4mR322loL666eAPfwsBfXPJ+sH
yNZfKVC/+2pK6A3qpIQ97km79nVK1GvuTYn6nDgl6vNfSYV5RDVTYX5qj1Tw
N2alQr32j2TvNjnM/gLiK9VfQL16V7I1/QXMyw0ki/P/DfrHWVJDn1YtNfKb
nVKjH84U+vs/SE4cf9FVrlczp4G/UVmyuP75NA3m4blpUH+4heuVK2lQj54x
LfytCmnRb/dj2oOv0iJevJH+2qW06I+ZPh31l02Hen2LHH2RDvHVDbQbF9Kh
Hjvti+iHV/pF5As/pF0ZS9bXkq3fJIv7f15In8Ti849OjlumRz5tVHrUa36X
Hnqc0+mRz0+RIYnF9U8xyeLz3/u0GyMyIL+9UrJ4/sfJDOh/qLwEPcqbLyGe
3lyy+Pw/jHZ3GdcHJySL+/+ekbVCGZNY7H80zYh4zmDJ4vpnMTkKJYvrv7/J
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
v32O7KVujnmFJZtjPkrr5vDXR9Pf8snuGcmJ7xeClO+hH3FxsvbBe+iHOZLs
rCL7v76H+qJkLWBXi7ZAfuM92m1Hspj/cnL4cwvqf94C/dULv8/zXzPJif1j
d8j/8X/zDpa8j/zxMbL2D9l844MkFvvfpuTE8ecPlCye//OtZPH7/6MfIJ7x
5APosV9vCbvXqCXmEfZrifzKgpZYr/8kWTz/9KFkcf7TWiF+UL8V4sWftUI+
bT7ZPEB2/iL7r7aW/N+/qE5r2NVerTEP42va7b2tMR8vpj185UOwUous9yBb
sz6EXvfHD9Gv4DbtcfY26IdWnWx2JTvT2yCeH5CjG22oP2tbsFFNstj/7iQ5
cTx5U9qivvAHyfkS+q9JFsd/Zgv5rcoW6nU/tRA/cC3UE28ha1e43szYjvor
kP2P26He6Cva1U3tqP8S2U7/EY//spLF/q/1EfQq4yWL898GyeL+9wuSxfGf
9mOcz4PSH2N9/OHH6J829mPEM9dKFt///CZZXP+80B7n90iXLD7/tmqP+o1R
7ZHP/o5273R76k/xCfUX/wT59fcli+d/jPgE692VksX9Xycli8+/yqdYr735
Keo3m0sW978Mkyy+/1xGe3SCrP5Lf6NQB+S3m0oW+z+DO2B+4eIO1H+MrP9N
f6tAR8zLbSxZzH9AR9QTL5QsPv8e6Yj45mOud/J1ov6GneAf9e2E+ajfdMJ6
45Bk8f7/gOzl7YzjKazXGfUpn3WGXn1eZ9Rj7Zcs5v8n4wW5u8Ae1+6C+rSe
tJtzaHf2dIFe/65kcf2fsyvqU2tKFtd/3SWL67+ZZG9XV/QvvMV4SvZunP/b
3bDe6tIN9bjTaA92SBb739cli+v/LN35+q/aHeudjt2x3p8sWdz/ta076lev
ShbXf5l6QI9dqQf6433SA/HCiWRlSw/o0y/3QP3WS3YSi/2P8jbiBx/Z8I+/
tKFP20i7edGGXufFnrD7b/XE+qhtT9SrfiFZ/P5/Pf3t8z3RDy9NL9QbluoF
f+XDXsivj+mF+qw1vaj/LP2DVL1hj0v0Rj+1lmTzc7Kzmuyf6o34UfLPEF8t
RjZafIZ67eG0eys+Q//CXz6jfqUP51+kD+zWu33QP3doH8QLlpLj432QX3sm
WTz/pWDf//H/9r+b9EU+f5Bk8fuvRX1RnxrS33jaF/2y8/fj8f9OP6wP+0sW
9/8vpF0/TLYeSRZ///O1/tATNOgPPXGf/qhH88jmwf7I79zvj375eQZw/nXJ
au8B8DfmDkA99j76e/cGUH+ugViv1JYs/v6nPRDrrdn0d3eTgzvkOMcg9Eur
MYj6u5GdGWR/Jzm6SVazDUa9hjGY+jsPRn5v6mDUF24nK9cZT395COdfhex2
GIJ6gklDkC/eOgT1aH9IFs+/UIdSf8Wh8PfbJ7E4nqIJQ1Gvunko8hm/D0V9
doZhYK/cMOQP29GufEnWvx+G+qxoGOpz0znUX8ZBfXEbB/G0cQ76a64jO+ck
i9d/6uF4/UYlhyOe2no48hmjybY/HPV6Z8hhyhE8/5UYAT36ByPQX2ukZPH7
r1UjUF/wK+PFyUbCrhUdifXmeyOhx3Eki/3P5SMRL/qZ8dTnksXvnwp/Drvd
7HOs94aQwyVk5bhkcf/PP5LF/scbo5JYfP4zR8EeDBwFffG3o6BPOypZ3P/w
hOy8Phrx/UajET/qR7u6gGz8NBr9sx9yvaeNgT2sP4b6+4xBvfr8MdR/YAz0
uX/RP3h1LOLHdcaiPq3XWMQzvyY7eyWL/f+Y9uiVcbCrtcbBbvQYh3z2rHGY
p/ejZPH55/Y46s/xBeLr1b+g/q5fIL47nRwE5PgGWcs6HserWW08+uV0Gg9/
f8p41Bv9MB79V69JFtd/mb8E25W/RDzvU9pDV7J4/svWL6FXvyJZPP8g41dJ
nC+hv8JX1P/xV+hf/JVk8fc/N32FeOYlspN+Aurxy05APZElWXz+HU+7sYFs
XyB7aSfy9V+arLSRnNhP1cdKFvf/rpUsnv/x20T0M3jBhT3WJYvnn7dy0Q9z
FO3Ody76659mvCjFJKxXi09C/433J8HfHjEJ/fVW0j88OQn5lWSToUd/czLq
sZpLTux3ucMmoz/BMvrHJxhP+1ey+P6r0BS+/ptOQTx/8BTkixZLFvvfx8jG
35LF338oMJXHf2PJYv9zwFTkU76VLO7/PTIV8a3HU9FPN9809C9oOA3x4r7T
MA/tm2lYbx4iOw8kJ/75eaejf1G96eiX+tl0rDfmTUf/7f309/6cDj1h7hmo
T6kzA/H0njOofw7t7h7J4vnPd2egv3HOmeiHVnMm4pndJSfm68ycifr9XVwf
3ZqJ+ajZZ8FuvD0L8e0us1CPN20W+hvu+D8O/vvPDcbTs8yGv1VVsvj+o+Ns
+AeTZ1P/ttmIr12l3cw0B/U6leagn/4nksXznyaS1S2Sxfn/smRx//NLX/P4
L/811ocffY15Kl+R9Y30ty6S3Rfn4vgJ3pIs3v/bShZ//+OLuajHXD8X+Zzz
khP7pX6aeTz+S81DfPVD2o0x87DeXiNZPP/37DzUE6aaj37//x94oEdvOZ/6
P5+P+t3V81F/cGo+8sfJPZ7/i3mYj9nCgx5nuIf6/BUe8kW/MJ6qfMPXfxGy
/a5k8fl3qGRx/buUrJygv/6MdqvgApxP3CYLUE8wiPZ40QLo08IFmJf5dAHm
4+RfmMTi+X/vLES/ov4LEV9duBD1Godptx+Rvde+RT1hg29Rj9KXrHvfov/W
QbJ7nxzkWcTjv+4i9E/rvQj6zLn0d/Ytgh7/Hu1RrsVJLK5/ai9GfsMm27MX
I5+3W7I4/u8sRnwl55IkTny+0mssQf1WtyXUP2MJ4gU7l6D++CbXa9mWJrHY
/zCWwu50Xkr9U8nRdvqr15civ/HyMuixqyxDv7wOy6h/0jLoUbZJFp9//yBb
6nLEcyuSg/aSxf3PE5ajfm0z2fx9OeI7GVag/365FdTfjqx+STa+X4H8drQC
/fbSrcTxEJZZifVK25Xonz5uJfptrVuJ+O65lYgfpF4Fjkuugr/WmmyOXoX8
jk/2z5CjlKt5/JeQLK7/P1gNf3sk2VslWdz/9ivjKcm/A+tFydZ731G/I1ns
/y3/Dvnin79DP7XnjGcW9sFOM5/6h/joZ7TER/3qcdqNf8j2G2s4f5McDlyD
fMqiNdR/VLKY/xOy+/pacNBoLdbH/WjXFkhO7CeZP5Gdh2vRT19bR/311yGe
2mcd/I359LcP0N/7ax3mF766Hv5K3fWw671ot75ej3zuXnIQr8d84lc2wK7V
2gC72UOy2P+ftQH5/B/J0W3GU3N8T/3VyXbX77Hem/498ofB9+i/cpP+etaN
qM+qthF2t5PkxP3BwRT6xz/QX7smWZz/Mm+C3am8CXb/U8li/8OlXd1KNq5I
Fvu/GTdTf4XN1P/xZqxXJmzGen0T/a1Lm9FfN/0Wzr8sOba2UP/4LYhnbqC/
c4H+ftqtnH/prfBX25CNsVupf+1W6PN+o3/4wjYe/yW3wV9vJVn8/mkU7e53
25AvOE17nOIH6i/+A/W//wPm64wg+yvJ0ckfUI+abDveL403JYvnXzTfjvq8
YdtRX7iM/srPksX7/7+Sxf1fhXagHrfpDtQTDN6BfPHiHcinHeN68+8dqN8p
EGC93zig/gEB4qnf0m4ckSw+/zwme/l2gsOGO5FP6SdZfP79RrJ4/u+hndT/
gPGCvLuwPq63C/3UPtuFfpvzdiGes5/s/0mOcv9I/XV+RP1GT7I9h+zt+RH1
hHd/RL3KK7uhV68pWVz/dd+N+t2ZuxEv2EWOb0kW+7/Z91D/23ugx+myB+v9
aXtQX7SDrN6QLO5/zbIX+eyqZK/jXswrnLwX/VF+oF2/upf6M+1Df9xKkhPX
u8En5HjiPtSrbdkHfeblfZiv89J+zr/8ftQTfbQf/VO/kiw+/22ULJ7/f3E/
+uu9eADxw7fIiiVZfP/zxQHks9ZLFvtf5yWL+z/THIQ9LnUQdu1DsjnmIPrr
rDmIeflnyVGqQ2BVP4T1RstDiG9/fgjz8lYfQv/DU4fQXyXFT5x/Mcn5Evpb
/ET9w39C/mAF/eNfJIv9P+VwEovnvxQhO+8eRv3+UNqjpZLF809PHEa9xrPD
0GcXPIL6vCZHUH84iKwslizOfyHZekp/N/9R6A3eOYp64/5HoUdbSLt5mHbn
kWRx//NrIfJFDUKsV/uGWG94ZPugZPH9133JYv8/z7EkFvtf9SSLv3/Z+xj1
zz1G/fuOoZ7gHu1xruPoj1b7OOymfRzrndmSxfMvdpOjO8ehT815AvUZNU5Q
fzfJiePPm3ECesOdtCu3JIv7n7P9LPm/f5ZBdjuTg6nkeDtZu/4z8pkv/4J8
TpVfYPc7kKNJZHUb1xt/SE58f2WrJ6m/ouTE8RW2P4l5KBNPYh76Ztqt308i
n5vhV57/yknO9x/H7X7FfLQvJYv93+8li+c/RLT76U5x/mVOoT617SnkN8ad
Qn57Hf29c6fQjzD1aakn+O8/pSQnngevtz6NflmjT6Me15cs3v/OnEa/4pRn
cD7SSpDND85ArzOSdn/VGfQv+vUM6leTn+XxX/Qs6rPfo91zziJfuFyy+P3b
L2eRX39+Fnqswr/B7jaTLD7/DvmN+pdIFt//Hv8N9Zj/SBb3v75xDvPyzXOI
Fw08B33qonOoxzh6DvrsJ2Tv9fM8/zeSLN7/+59HffoCyeL+v5/Oo1734XnE
D7QLqCeuL1ns//S5gHzmfLJzgOv9vy4gf/RqhHmpdSWL37/1ot3+OoIeb2+E
/oUx/ZVcFxFPryVZXP/1uAg97qyLqDf4kRzfvoj6tRyXkljc/1L9EvrndJUs
rn+mSxb3/weXqP/mJeQzsv4OvXa131Gv1+l36AmnkJXtksX+xzWylfky6nMr
X0b84NPL0BO7tGtbL1P/Fcni+j/jlSQW9z9XuIL80cdXqH/CFerfdAX57EtX
0H8v/R+IF5aVLI7/dmR9/B/Qa234A/W7F2gP0l5FP+PSV6m/zVXEN8deRX3O
2quoz/+NHL1wDayWvIb+Ga2uoX/2KMni/sfvriFfePoa9ae8Drte/DriW++T
3RHXoTdYeR39iE9ep/5kN/D6Mt+8AbvT/AbW+8Mki/sfl92g/p9voH7jX8az
C92E3Wt6E+vDwTcxT2WJZLH/eewm9f/N9W6BW5x/41voXzzgFurXviWbR5JY
PL/BeXwL8f18tzn/hrexXu13G/M1viHbhyQn4nsPaA/z3kH9Sv07yKd/dgf+
1rw76Ie7n/bgzzvIF+e+i/hanbuIb/a8i3jOnCT+398/3EOO7nK9+kqMfhg1
Y+S3u5O9mfQPd8XIr9yOUa+e/R7n/zbZ7XIP9QTTyPGOe+iPdoNsZvkT9TlV
k9ipntDfkfZosuSEXf2BduOqXC/0Z/oL/fMq/YX84Se0K+5f6I++hXbrMtl9
6T78g/L3qf+j+6hP+4psbryPfjsXJYv97xcfgKO3HsBftSSL3398IVk8/3k9
13vnyWGah6hXKU3WPyRbYySL+a95SP1naY9TPQJr+iP4my0foR/O52R/9SPk
j05JFt9/pXgMNoo9Rj67xWOs94aTwxVk5eRj9EdXnoCtIk/g775LDoY+of6l
TzAv7QTjmc+eoB9OwafQ4zeRLH7/NOgp8qmLJYvzX/gU/bOfPkV8L//fnP87
ksXvPwb8jXr1hZLF99+HJYvPf48ki/e/1/7B+1vcQLK4/7vvP9Tv/YN4zkGy
f58c5XmGetR6z2A3ej9DfHvuM+jz9j2DvvDeM/RTyf1vEov7f2tLFvd/2GR3
9r/Uv/tf5I/v/It8Ws7nmKdZ4zn65XR7jvz+DNqjnWT1lmTx+8dsyu//b322
IVl8/u0sWdz/O5Ws7JAsPv9fZzzr5WRJLPZ/qiSDPeiQDPniSckQX9smWdz/
9Af9HTU54vkVk2N91D45/NWJksX3f5vJ9u/09zKkQP1hOcni+dcfpUB+/UvJ
4vv/71Ogfjfi+iBdyiQW1z9lyFpbyWL/bxzZWZcS9fnnUiJ+lDoVWC2VCvGN
1pLF9f/oVIjv+amgLzzD9UqqF5BfLyFZfP/zwQvopzuSHKyif/zrC8ivJU9N
/UVTw995LzXq8R3J4vdvy1NjHuovqZHfeM74duE06JfXLA31D0kDvcpSsn48
DeJZ/0gWzz94Iy36HZiSxfdfAyWL3/8v+j/+7595VHJiv855khbx/dfToZ6o
UTrY1f7pEN9YkA7x7J+43nsoOV9Cv/Yi9CkNJIv7X/u8iHjWfPq7B15EPcFf
9I9fTQ+9Wt30nH8vsvM1/f29khP3+0Yx7WquDEmc2K8zaklOPO/a7pEB/t6s
DMgX/pgB9St3MlB/jpfQX6v6S7C7XV/CvIPpksXfvwteQj7tJtnMmhH5nWqS
xf2/nTJy/lMki+9/tpONa/S3M6uox6usQk/4qWTx/PNJKvToW1XEt65wvZsx
EziokAn9jj/ORP0TMqE+c5PkfAn9lzKhH376zDz/l5Us3v/bZcY8jPGZUY+9
ITPieRcyc/5pX4Y+pYxk8f1fG8ni+Qdjye5ayeL5B79JFt9/vpAF/ddKZkF8
s1UWrHdGZYFe/zuuj05nQb/UlFlxPjSKZ0V/7Pezwt8bkZX6V2bFPJRfsyKf
niwb7Nab2bDebS5Z3P8/jP7xsmzU/3M26DP/pd0plB399Ztm5/wHSxa//1pC
u3GMbP+dHfV4BXLg/BQ2zgE9ysAc1P8t7daRHNDrPs6B+EG+nHz9N8yJerR+
OTEv8xvanUO0+w9yoh9R3leSWNz/UJ9sfCZZXP/Nkyyuf/ZLFp9//yQrr+bi
67+OZPH+3zMX6nPnkIM9uTCf+G4uxNdeyY16zJq5Of/uuVG/PzM3578rN/qh
3s6N/Eb2VxHffluyuP+7i+TE6y2cJll8/gteRXz9huTE53UrSx7qr5oHeoOO
eZAvnixZ/P7hhzzUf1Wy2P/JlJfzr0SOPsmLfqhuXuQztkgW9z9dliy+/3hJ
g39YXkM/lI81zv8rDfqsjRriuxc1zCt48TX0L36LrFmSxfMfvpAsfv+//jXq
P/8a8kVp8nH+pfOhXuPDfNBjj8nH+a/Jh/zh2XyoX3nhddh1XbLY/2n5Oubn
fk4OVnN9fEqy+P4jRX7Ov1h+zr9FfuofTv9oBf3Vk2RDKZDEYv+7SAHYvXcL
IF44tAD6rywrAL36CbL1rAD0uQXfAAdN3kD8eJBksf+3+A3EM8Mk/t/zL56+
gXr9/AXx+oveKQh96oCC1L+QbB+WLPY/HxWk/tcKgZWGheCv9y2E/JZXCPN0
Dxai/vvkOE9hrNfqFYbd7E125pL9fYU5/3uFOf/cRTA/o3YR6reLoN/e7CLo
d7ibrNwtgv7qOd9EPKvGm4jndiMHM96k/p1vUv8t2s1sRfn6N4oint+ZHE0t
ivmoO7jeuF4U8e2Xi4G9KsWgL+xQDPqUycWQT99Gtv4gu2pxHA9BxeLU356s
TSSbm4tjvs7vksXz7zOUgN6oXAmsVz8iG1+W4Py/LwG9XkR7mE6n/rd0xNPb
6qjPGkd213F9cE5Hvjh1SZ7/SpHN1pLF99+jJYvff/m0R2cki/N/qlKIZ5Qo
xfl/IFn8/YORpRAvXEV/5RRZT14ax5dVtDTs7nuSxfN/HNrj5WTtF/qbz8lO
4TI8/zcrA33RkDKc/1KycZz+9j+0e2+8xfOf+RbnP4h2fRHt1lGy++Qt6n+9
LPodNyoLPVr/spifuaAs6nV+Kot6/Ydl0f9IK8f5NyAbfcohnz2/HOJ7B8oh
XvhXOdSv5CmPeHrd8ohn9ZIsnv/9Ne3BXsni82/MeFquCnz916qAfjs9KnD+
sySL5x/8KFnc/3iHdiNHxSQW+7/VyV7XilgfTqdd2UnWb0oW979mrZTE4vm3
1Spx/p0qYX08haxtr4R45jXJiePFyVwZ8fzKksX176eVEU+dVBn9MraS7SuS
xf2PGaug/rACWWlfhfonkK1NVVC/e4n2IH1V2OOyZK1dVczLHF8V+pwNVVGP
f4H+UdpqsKtlJCeuz4w2ksX+z1iyt1Zy4non/I3xlNQGjl+9pIH4ViuD8x9F
/+A7A/2PTxvIr6V8O4nF/ldxyYnraed92v0R5Gjl2+iX+qtk8fpPVp3H/5vV
sd5rLlk8/2BYddSvLK+Ofus/V0f91r/V0Q+3UA3ED5qS48E10C9tSQ3UZx6r
gXqcvyWL+z8L1ARHjWvCXx1INr6tiXz2EbL3uCb6HearBX1KI7LeT7LY//yG
7B6qhfqCB7WQL85bm+f/+rU5/89qc/7zJCf2Z/z99I/+rI361FfrwG7UqYN6
7J514O/NqYP5hXvqoH9KXAf166/UxfFl1ZQsnv/evS7iBTMli+e/7qqLerTb
daHXzF5P9jP4T//bkrP8x34X2qNp9aBXDSQn9seNG2Q7S33o86pKFvf/dqyP
+pQpZP0HsnWV7GZqwPlXasD5f9IA/ddc+ptbJIv7ny9LTjxfw3+pIdZH5RtC
j/pxQ+QzvmqIedkbG2Ie3kWuD19shONTKduI87caod/WF2R3fSPqP98I9cZp
3uH7X2nJiePb/PAd1OOMIftr3kH86Kxkcf57oTHPf3pj5LNbNkY93ueNkT9c
3Rh6lNONEV9PYaIfVjGT+lvQHgwnxytM1K+dNDFvU2kCu1NEsvj+490myBcN
lSz2/5c14fxPNKH+Z03QH69gU57/mjRFf5TBTdEffXFTxLNC+rtPmyJ+kL8Z
6ovfkSyufwfQbi5shn47h5shvv+I66PX3uX5r6Fk8f7f9130y/Yki+efHCSH
9xlPyducx3+95tTfm3Z3ruR8Cf37JCeO3/hec+jTcr9H/bUli+s/m+zPfg/5
o92Sxf73Xcni/uecLaDHrtEC9XrdaA9ntEC/lF0tUK9+i/5Wtvep3yAHnd9H
ffHU91G/tkOyuP/humTx+fflD5JYXP9UkSz+/mMHyeL6ZzLZ2PYB+mv/8QH1
qy05/4ot0T/lk5aoX5/YEvGszS2Rz/29JfQEGVrx9V+uFfy1j1ohvvllK87/
+1aox49aIX+UrjXn/xbZaNsa/bPHkb11rZEvPNca9SlpPgTrpSSL/Y/WH2Je
7ugPkT/wyfGZD5FfS9UGbJYgOx+0QT5/JDlaRX/1FNlI3hb57aJtodd7ry3q
D5221L+C6/VfJIv9j+dtUY9b2AIHzSSL+9+GWNS/1OL8j5Odf8j+G+2o32zH
+Q9qh/qNRZLF9x9H6e89acf5v/4R7Mo7H6E/en/arQW0uz99hP4EDz+ifu1j
1K81+Jj6+9DuzKfdP0B79Bftap72PP7rku1e7dF/72vJYv9zb3vUq9yjXc/1
CexWLbLb4xPkC2Z9gnzxj/TX7nyC/ps5PuX5r/qn1N/1U+qfLlnc/71Tsrj/
8eanyG9n7YD1XrUO1N+JdmUqWd/eAfGsa1zvZu7I479yR9QTf9qR+ifRbm7t
iPjOFfr7GTuBowqd4K+274T8xoROiG9vInuXOqF/YfrOiKeU60z97SSL7z/G
SxbPv9lADi4wXpy2C4//Ml2gx2xDdsZ2QTx/LddHv9FfTd0VbJTsyvm3kizO
f6O6Qk/4Hf2VM2Q9ZTfOv3g3zv99yeL4H0H/eGU3zv/XbshvJuvO89+b3aHX
b06OhnXH/NTlXG/8TH/7X9q9Qj1wfgyb9oBdGdID/deX9EA86xjZ/bsH9AUF
bL7/NbbRf22gZPH8229t9Ms5Qn//MTnK1xPr1UY9sd7o1xP129/Q7h3qyfk/
oF3RenH+9Xshn/VZL+h15/VCfcH+XtT/p2Tx+efV3mCzDtnp2Zv655CjPWQ1
JhuvfAa2a5K97uRw5mfIr/woWdz/e5v+VvY+6J/7NjnoQo6n9UE/tIB28wbZ
ydI3icX9n1XJUUeyOoVs/NAXeuyrZC9TvyQW939Wkiz2Pz+lXXf7Yb21pR/0
uJf7IX/wUv8kFve/lpcsrn8+7o985lf9kc/ZSLt/kfboxQFgtewA6rcGcP5f
SBbff60nh+cHoP9K2oFgvbRkcf77cCDqc8dIzpfQv2Yg9MZnB6I+7YVBqN/U
ByGe03IQ+u1/Pgh6otW0q6cHIZ+RYjDYLiZZ7H+0GMz5Dx/M+a+kXT9JtpQh
1F9kCOYdvDsEeuOhQ1Cvtkyy2P88IVk8//IZ4/sFh3L+TYZS/+ChWG8sJtuh
ZPH3L5+Sw/zD0F+lsWTx+X+AZPH9z8Jh0OseHoZ6g0fDOP/XHOjVGkrOl9Df
V7LY//IkJ/aH/IP0j+5LFr9/zTuc+usNRz6793DE9+bSHu4jK3+S9dwjkjix
X2TVHsH52yMwj2D2CPQz3k3W7o5Af8ycI9Ffp4Zkcf7rNpL6Z4yEHnXXSNRn
3BpJ/dk+p37jc/iHnT+n/mmSxf7/Dsni+L9Of/flUfAPqkhOHF9xh1HolzZ5
FNab2ySL/b8/aPfV0ag3qjia+j8ZjfXGRMni/t/N/8f//fN+J4cZxiCeUn4M
5qN/NAb1W1+OgV73e3IQjUG9cbqxYO2tschntqXdGTcW/fbXjUX86NxY9EdN
M47Hf6lxqNduPQ7+3uhx6Ffoj0N+5Sz99VRf8Pgv8QXqdz8gByO/wPp41RfI
p50im8nHw98pKlk8//m98dTv0F9dITlfQv8vtNvPyV7hL3n+byZZfP4ZKjlx
/OpLv8R667jkxP6w+8+X1P/GV+DYlCze/wd9BT3mIsni+a9Hyf4TyeL+j9cn
4HyivjMB/kZ/yeL5DwsmQI/30wT0K3w4AfUpr03k/BtMRL1Wn4nonzt/IvIH
Byai3vividSfx8V8zbou9fdyMQ//a9qjvS7133NRn5FrEuLbtSZhHl6PSdAX
ziIruydBn35nEvpp5ZgMPW71yVgfdJ3M+U+XLJ5/snMy4ps3J1N/1il4PfvV
psA/6kRWp07BfI3tU9Af+9oUxPcyTwWHlacintJBstj/n0S2tk5Ffe4VyYn3
ryDjNMSLK5C19pLzJfRPIDubpqG//qVpyB+ln873/3LTocdoN536x09Hfm8D
7eEFyeL+13Qzkljsf5SRLD7/tpEsrn/G0h6sJce/kbXUM5HfLDkT/XNazYQe
fxT9o+9mIp56hv5GyllguzjZe58cjpiF/MqqWdCn/ypZ7P8lm43Xt/umZLH/
33w24sfDJIvPv8tnU//PjOf8Oxv6/EJzwFHTOVivDpmD+o0lcxDPPjYH+b2/
uT4s8DXiKyZZH0i2vv0a8dwjXyNe8Jj+cb65OJ60RnNhN/tJFve/fkO7f2gu
5/9gLvKr2jzYjfrzqP+zecjvzSOH++dhvspftOuvzkd9Vp35sLs9aQ/m0B7v
IWvxfNRnvuJx/jXJfnfJif22aKaH/qg/eohv3Pagx87+TRKL/c+3JYv9ny7f
IJ8y/RvqDySL+39vJPH/nv+QZQHsQdUFyB93XID+aFMWUP8PC1CPc3UB9PqZ
FvL9v9JC6v90IfQZ7kLUZ29ZiHje5YWoN3zp2yRO3F+sVCDrH5Otr76l/o3f
In9wkf7xi4vQD63sItRjWouw3vliEfrvr1+E/kXnGU9NuxhslF6M9faHtHtj
FqO+cA1Z+W0x6tFfWMLzn74E9bstaQ8+J8erydrpJYhvpliKeTjFlsLfb7EU
9UXDaVdXShav/5NkW1mG48crIlkc/+8uQ7+UYcuofxnt1okkFs9XcZ/RHhRc
DnvcZDn1D16O/OZishOS/afLUU+UfwX6pTaWLPZ/B5DthSs4/8MrqP/RCvRH
ybeS5/+GKzn/viuR3/VWYj7BQdrj+4yn5V2Ffpn1ViG+03sV4vlzydE+yeL3
L39KFt9/5l7N+dcme7Zkcf/z7NXoh7JnNerR765GPivnd9Dj1pAs/v5HN8ni
/X8GWdv1Heo1b5GdbD7ez33DR/1RZx/51Gk+9e+gv33dx3y9l9dw/lXWYB5K
R7I+eQ3iWdvWIJ/7BzlQ16L+uOJa2LVPyObEtajP2bwW+f3fGS/KsI76y5ON
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
E/TPz/IUx3tU9Sn81U6Sxf2vU2i3f3iKfN7Vp6gvzPQ3WKn8N/qrf/o35+9K
Fr//3EIOLv8NvfFL/3D+Ff6BPvPjf7De+UqyuP95o+TE8RtdpF1N/wzxjbLP
MF/begZ/7wvJYv9zvWTx/I8LZD3tv/C3Sv+LetwP/0X+YAzt8Zr/W58o4jfG
M194Dn9Hf454fsvnqCf6XLIW/Pc/v3uO+MZpyWL/L4Vy+f+dp1dMsvj9fwvJ
iXqUEZLF/udKyYn6rJOSE89PcZVksAdFkmF9/C7t2jDJ4v7nZckQzzmRDPX4
z+gfFUwOVpsmR3xjcHKstxdLTvTDC7k+fJoc/VAKpEhi8f1n4xTUPyAF/N2F
KRA/OEyOH9Ffy5cS8zAbpkQ+p29K5PM92qODksX1zwPJ4vonb6okFu//9SSL
+x97p+L859Ku7E+F/PqfksX7X+4Xkljsf9d+AfMO7BcQL54tWXz+30N/8y7Z
yZk6icX9DzVSI1/UTbL4/mMm7cau1OiHfSs1+uVlS4P1oZEG+pQuksX7/zT6
Wzski+dfX6d/8HJa1B9XSYv5aR3Tov/m5LRY72xLi374f9A/UtNRf6V0nP8n
ksXvPydKFtd/m2kPf2c85aUXUb9e/kXq/+hF9NP9khx8L1l8/oteRH3ai+lx
fJhvpUd8p2166PXHkaN16ZFPPU820mRIYvH871IZOP/WksX73+gMqE9ZQ7t+
VrL4/JvqpSQW+z8lJIvr/w9eov6RkhPXm9pqyeL6/xT9neQZUb9fNCPs0XsZ
kU8dnpHzX5ER9du/ZET93vOMyB8WVnG+UN5V0S99qGTx/d9SFfHc4yriBf+o
qCd+IxPn34RsDspE/YvI/lFy9ERy4vhV82cGG+9kRr12/8zUvyAz8oc/kZVH
9Ndfexn6rAYvox63z8tYH8x/GevjAy9jHtp9+pt5sqB+p65ksf/VKwvmHX0t
Wfz9o31ZMC/jXhbUa+fKivVerayoP+yRFf7KbLK+m2zdyYr63RzZqL96NuiJ
u2ZDfm0G2dwpWex/38xG/VmzQ29ULTv6q3bODj3G1Oyox96eHfG8a9mRP8yc
g/qr5EA8vYNk8fyHSfR3t+ZA/OBKDsSPM+ZEPK1iTtRvts+Jep0JZH8T10eX
uF7N8Apf/+XIdrtXUK83/hX0O9zwCupXIvrr6XJx/mVyQZ/bhhyMlSzu/1zL
9dq5XNBjps6N9U5Jst8qN+qNRtGu+rnRD+NMbsS3U75K/cVfpf73X0W9ykja
9VWvIr71K9lNlofnvzfzcP7N83D+jmTx/IfltDs/M57/L+NFhfLieFSb5aX+
IWR7Cdk7lhf5wr/Jyhsa52+SrYGSxfNPvtWwPjhC//gxWXv9Nb7+G0kWf/+w
32uYh/8NOTr0GvKpD8mGlg/12fXzcf6f5aP+efnQH+UAWf+L/tarr+P14tZ5
HXqCnuR4zuvUv5frzZj+ziv5MV+/Jjnqnh/+6qz86I/xYxL/7/cPt/Ojv172
ArCHbxdAPKUr7fp0shWQ3RsFOP8sb/D9v6pk8f1/J8ni++8p9Hd+IPtXyVGm
gmC1ckHMy/iUbLsFUZ+3hevDy/RXMhbi8V+hEPytjwvB3/2qEPVvlCw+/1/k
ei19YZ7/yxbGesci+19IFvuf6wtT/wX6G2mLJLHY/ylN9j4sQv1jyMraIoin
/yZZvP+98CbiufqbsActJYv3/88li/f/795EPvO0ZLH/m6Io51+sKPoVtSiK
/qojJIv9r5VFEc8+yXieUgzxwiLF0F+leTHo04cV4/yXFUM+94Rkcf/PM66P
CxYHa02Loz5zMO3OYtr9kBw9LY58aoESWG80LkH9AySL3z8vlJx4PYaHS1D/
4xLoj55PRzyroQ6725ccePSPD+rU/4B2M29J1OPUK8n595Yszn9zS2K9+v9R
9d4BU1PN/3aUjiChKzX0IiUiqIBAKNLLUgWkhN4EQxGliFF6D0ivAaQLhN4l
dKSGLj10kBaKdOR9n/t4n+/v8r/LmTMzn5lsdvfsucO+j6HPeCRZnP/OUgz9
citLFs8/toohnzK9GPXvLob85oNiyO98+AnnX5Ecdf2E+qdIFs+/3SFZ7H/c
lZwzTn+G4rCHhuS4/Qe1S3HoMSYWp/5tksX5x9vFUX+QtgRYKVsC8fSOJZDf
HE92tkgW//7nDXKkfgp/rbTkuP9i7SSL869j/88ep38j7eHVT9Ff9f3P+Pr/
XLI4/9Zactz5YHcU7cE6snL5M/RPf+9z6i/xOexOS9r94Z+jf9FqyeL860X6
x5KWRH67WEnE95pJjrtewiEl0T91ZUnEM85xvZWoVDyL33+KlkL/gialsF4Z
VAr91peXQj7zr1LU/25p9N8vJFm8/htJFt9/fy6N9bGlpdEv+yTXe29Lo76w
wBfQozb4AnqMAWRr0RfQ4x6THHd+P3gtWex/5ysD1uuWQT6zn2Rx/nO+ZHH+
8UgZ5I9elMF8tdxlef+rXRb9sH+QnDNO/9yyqD88WBb9UJ+RjRzlcL1YNcpB
j/tdOcwzmF0O8ZX9ZP1JOdRvZjNwv3SqSha/f/YwqH+GgX5peyWL/b+HBuq3
M5fH/c37sjzn/2156FOnlcd8jF1k6355zv+DCuCgQgX4K10roF59cgXMw9xe
Af1w7lSAXj99RdijchXRf61zReqfIFn8/vWHZPH571ZF5A/TVEK/1TKVMA+j
A+3WuEqoz91cCfUF1yWL3//UL1GPXupL1Gu2/RL9csaQ/Q2Sxe/fV7heS1mZ
1/9nlVG/3Yp2b2Rl1B+upb8aVka/jORV8P5tFa8Cf7dFFfQnGFaF+ldzvX6h
CvUnqYr7nfNxVfj7X0sWz/8bLFns/3uSxfNfzlZFfDthNeovQg4bV0M8dWA1
rDeWka3T1TBv953qmE/wUXXqb1Qd9et2dfTPXFId83BOVIce/9/qyB/lr4H6
tfo10K/Yj2R7YQ3MxztaA/0OX9FfzVsznsX515hksf/ftybqcX8jB4cli/2P
F5LF+ddcteI5bj/IrFUL/XC+r4V++HNqUf+BWqhXe0p7TKuN/tvVayOe16s2
8oWzaqNe9c/a1P+YbGWtA3+3Sh30J+hOVmbUwbz0PbSbUR3qzxTj9V8pBv+o
W4zznypZnH/bKVmcf7wXQ/1exrqYR1i+LuzqN5LF/sekushn+XVRn/t3XeQL
0tUDK+XqoV96p3j+b//jV2kX51+30t+/WQ/1Ranrx3Pc/ov2RX3ki7Wvj37Y
Du3epvrUf43+aqoGvP+XbID1VhuyO7oB+hGsb4B4ypUG6KeeoiHY/LQh1jtm
Q+of0ZD61zSk/ku0x5I1ov5PJIvfv5o3gn84tBHyqasaQZ9xnv5W4q9Qv6t/
hXkGTcnKYMni+R8rvkI88wzjOQkaQ59fuDHWR1/Rrv3SGPXHfm+M+Papxpy/
0gTrw4JNkF9t2ATrjZ/I1mKye7wJ4gdvyEr+prz/1ZMs7n/9myKes4DsB01R
X/SS8bQ8X3P+dch2H7I372vUFx76mvN/TruRsxn11yS7vcmB2wz6lAPx/N/+
5z/NoMfM3pyv/2qSxf2vZ3PUF82ULJ5/s6859T+iv52lBedfuQXih1YL5Fen
t+D8d9PfesB47octsT6o2BL+SreW8NentKT+HZLF+ce7ksXv/xlMcGSY8Ne6
SBa/f0wk29vI3m2T+tO2ov6yrWA3OpKt8ZLF+c8trVBPcIP+SurWvP5Lt0Y/
zHaSxfvf2Nao19/YmvO/2hrxtffb8P3/8zaw260li/Pfo9ogXriOrF5ug/zG
e215/y9Bdlu2xTyD4WRlTVvqv9gWes2k7RDPKSZZvP6btUO8aAj9tZWSxfN/
ztHfTtQe+ryi7TGvsEl79E8dRH9jeXvO/y/J4vzHux1wPQSFOsCufNUB8fSf
yebSDsjvnJQszr++pT0q0BF2rYFk8e/fDJAs/v51UUfU4x3rSP2vO0Kfmq8T
/I26nZDP6tcJ83Pn0z84QlZekvXcndEvs3ZnxHd+6Iz4/lxydFCyeP7ts86I
H8vRhfprkL3vyOHsLtS/vwvn/6QL9Wf7BuxWlSy+//SQLPb/ZkoW59/20m4+
5Honc9d4Fs+//rIr8kXfkrVp5Ngurrfvd0U+74Nu6F9YoRv6p3bthnqMyZLF
95/t9HfvdEO+IP23qEcxvkU8vTPZnCBZXP9/kP1bksX+bxornsX+bxlyrIOF
+PY4srfZQv3hdbKqdqf+Ut0R32rbHfN0x0jOGad/A9crV7ujP3rKHtBjftYD
dqdVD8zLHylZPP94LVkLybHkPbHeLi5ZXP8tenL+w+ivru4JvcaFnohvJekF
dj/uhfXB172wXhnSC/3RPfqbZ2l3En6H/vpFJIvzr42/4/wHShbX/zLa7dNk
753emE/4UW/Y1Ua9MR/DJltLJIvv/yfIwb+9oU8p8D1f//W/Rz7zR7KzkOwf
JUevGE/L+0M8i/PPsR9gt/vS7v1GDg9LFv/zxf9xnP5cfeBv1eqD/rnf90F9
wZw+1H+wD/qnP+2DeZlaX+qv3pfz7yVZ/P4xqy/ia39KFn//8Vhy3PViZ+3H
+18Vcti9H+KrM2g39vSDXivqh364mfqjX0ElyXHnz5Vv+6MefWp/rDd39ode
5x7Zz/gj6onK/4h+at/QHpv0I+fvk72/yWG6AdRfTrL4/t9pAOZl/SpZ/PuH
WyWL59/fHID4SpqfUJ/+hWTx7x+0lyx+/3Ro9zf9hHjRtZ/QPy2VDXuspGTx
+m9D9kZLFve/9VyvXrHRXyPFz5z/pz8jnmvSHoz4GXqVtWT9Ev3NZL+gv84n
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
5zG9RH+jnrDo36hHbfo34huDJMftn1nL/0Y896+/UW/w7h3EUwrfwTz0r+7A
3/yZ/s5SyeL840nJ4vvf2zvoh1bwLq//BncxX3vAXfh7i+5CX3jsLuf/RnLO
OP357sFu1b0Hu9vvHuIF88lKcA969Ze0m7nv8/5fW3Lc/d3/4T78o7n3qf/Q
fep/dh/57BwPUL9X4wH8w+8eIJ7qPsB6Yz/9rScPMC83W4R6g6oR9feMEF+f
STb3Rpz/Q8ni798zP+T8v3wIf816iHpj0ySL1/8uyeL5//cfot7wg0e8/1eU
LD7/dJUsfv+f/Aj63O2SxfMv7jyCPiXDY+o3HnP+nR9jvTNBsnj+9R+PoS+6
RdbSPuH8y0gWn387PIEeb9wT9DPc/AT1qDcki/Pv6j+ozyolWTz/oK1k8f4/
5h/0V9n4D+LrVyXH3T/MlE/BzmdPEd9vJVnsf498iv5o6+gfC5+i33byZ3i9
esWfwR62eIb+qcOfob/G6mfIZ114hnrdJM/BwcfPUa/S7DnnP0SyuP97z9Ef
5yz9/YQvcP1FRV6gXq2JZLH/OZD+9rIXyOedliyef/7OS1wPaqGXyG80eon+
Wjb93SXk4ITkuPcz5a1k8fmvwCvUZ9aXLL7//vgK/v5C+kdHX2E+2utX6Ecs
72tcj3bsNdZ7fV8jfvjba/RDPSJZnH9/8RrxrVxveP+r9Qbrg+/foH/K3Deo
Vz/I9eZTsqP9y/t/dclx96+o17+oX5v9L/oX+5P+9uN/Of+sb/n6r/IW81J7
vIVeYwbt1p636K8bvUU9QSbl+v97v1G+lCz2v7+VLOY/VbL4/LuT6/17ksX5
l4zvIJ5WgRz7RrL4/jvpHcTzfMni/e9vyeLzb/p3sd4o9y7iW50ki7//+JX2
YOu7iKfcehf162kSQK/5RQLkc9onQDzfoX+0if7a9QToZyxVwngW+58lE8Lu
taE9HJ0Q9akbaDeuSBb7HykSxXPc/oj7aSLoDcxEnP/IRIinr5Us9n8uxfN/
+3/JEsfbxf7fJ4mRP2qeGOu1YZLF+edVian/fGLOP3ES6tcli/OfXydBPmNw
EvTHWpEE/XTPJEE/ggRJwUqRpKhXb5wU8c1fkiK+83tS1OefSor6IiUZ1msf
JYN/rCHZ/ikZ1nuLk6H+8Dj91X+ToX4jf3LUb9Uju/2To7/BguTQoxwl66+S
ox4zz3vI79Qh+33I0bz3qP/we6gn9px2O2cKsFczBfzD3pLF/v8c+hsH6G/9
k4Lzz54S9QXVUsKu9JIszj/OSol+mPvo7zxKifx+lvd5/Vcma93fp/7ptNu7
JYvnvz+gf/hhKvirlVLB3+iWCvVaU1JR/45UmGdwV7J4/WdUwXp5FfnMLirq
cSaS/W30j26TtXSp41ns/5VNjXrtjqnRf288/cMttKs3U0OfkToN6rdKp4Fe
t10azn8s7cqmNIinX2M88/206LfzeVrOv3VaxI9GpUV/tPVpET92OS3i2++l
4/2vRDr4hy3TIb86Ih3yG2vSIZ91kevdpOnhHxRLj3qV5ukxD30o2VxJds6l
R71+ogx8/y9K1ppmQL7YIMni3z9YngH1e3/RP3w3I+9/hcnGVxmhz/qZ7C7N
iHqCk+T//2M951/wA8Q3G5CdAR9gHv4iro+OSRbff99IFvv/+T7E9WzXlSy+
//aTLH7/ny9ZnP8IaDdekq3cmaDPrU0OfsiEfMq8TFivH8oEPeazTKjXyZEZ
+vwakuM+D0ffSRaf/9zMiB/bnxl67CeZkc/LloWv/6qSxft/zyyc/8wsWG/t
zYJ63Ye0B5mzoj6lclbUr1u0m9OyQq+zS7LY/75P/+iDbNCrVczG+Xel3Z6c
jfPfTv/wDlnNkB3+hpEd9Vmdye4EyWL/74/s1H87O/qlp9VQn1mG7HTQUI8/
TkM90WaN87+hYZ4xNQev/1KSxf5v2xyc/5gc1L9Rsjj/dVWy+P6XMmc854zT
/1lO1Be0yon+KKMki/2PdZLF/ldIu5M8F/rpF8/F+beQLH7/GZ6L81/N9fYF
spckNzj8ODf0qc1yU/8QyWL/x5Mszr+ezY35BQnzwK4UlSz+/r+JZHH+c2Ae
6l+WB/n801wfvZMXdq1QXqyPNZIc9/3dtvOi394SyXH/hSfI6tu8qM8okA9s
1c+HfO6PklX/f/oXkpVjkuOej6y/lhx3XtnMmx/1ObH8sPt98yNf9Ft+zE87
kh/zi72QLH7/ylUA7NWSnPN/HH5fgPOfK1n8/nWQbD0tgP66WkHUH1QviHqV
7wqiXn12QeQz/yQ7j+nvZ/2I+qtIFr//9PgI9cVmSBZ//7JHsvj9M5Isfv/J
VAjr1S8li98/vy2EeNbUQqjX3UkO7pGVDwrz/lehMPV/Uxj9dCYVxrx8vzDy
R38XRn1a+iLoV6xcEei1O0kWz3/7tQjihVvJ6q0i6LeRpijn/wXZbU8OHMlx
9yNlc1Hk169LzhmnP5WOeTolddTjt9GxPhpN1jZIFuffrujon53iY+TzPv0Y
/Q/Nj5FfHUk21n6MflqXPkZ9brJinP8nksXff7SQLJo0rBjmba4qRv3ni6H/
fuJPcL+P9E+QT/tasjj/PFiyuP+vkCze/89IFs+/SVAc+dQixaHXaFyc8/9F
svj8/7tk8f3nlGTx/eedEvEs/v73oxJYbzYkOz+R/cUlUH90vATq0/4tgX7E
8n8Ktut9Sv39JYv93wWfYh7q0U/RT+MV7Vaez/j+X+cz9DvoQ1Z+I+uHP8O8
zee0Ozk/hz6/5ufQE/Uma3PoHzsgWZz//OdzxPeyl+T1X02y2P/tJVmcf5lV
Ev2z9pVEfPdRSerPUgr+ShXJYv+3O9mcLlmcf91dCv32H5Si/g9Lc/6VSqPe
WLfS0GNPkSw+/++QLL7/3aVdzfhFPIvvv+XJVhfJ4vzTxC+QP9hGVv7+AvH1
dGVw/zLLlkE/nI6Sxe8f48tgfbSlDPqr3SxD/anLwt8uLVl8/29XFvHDsWWx
Xt1UFv01rtHfer8c7O7n5ai/dTn0RxldDv3W15dDPeZl2p33DLBfwqD+lpLF
+98IA/2LrTHQX/si2UtaHvHCYpLF5//mksXnn6Hlsd5aWR563XNcHySqgPj/
/xs+59+0AvSZgySL88/LK0CP/xfXR+9WhL9WmBz7SrI4//lzRczDW1qR8z9Z
EfpUpRLsRsFKyG81qET9A8jBokqYr3K8EurT35DNfF9y/nW/hN3vJ1mc/5xP
uxZwfezll6jXzl0Zdq92ZawPfyCr8ySL89+H4vm/f//tGf3dHFWgN6hRhfPv
XQX1624VxDf3V6H+J1zvZ6sKe1S1Kuar9ayK+mIzabf3kr2HksXzTzJXQ3y1
MtmwyNY0srurGuIF96uhP8qH1Tn/itVRj9mV7EyuDj3+9uroR3SnOvJrGWrg
/SNm1IDd7lwD670JtId/cL16uwbqMdLW5PVfhux2qIl4wbia6IeypSbnf4N2
U62F15tTSrLY/2xbi/rHkLWNtZA/dpVsp6yN/nuf1ab+VrWpfxTtxjrarZB2
N3kdxA+K10F9SkvJ4vvPcNrN1XUQ37lQB/3wk8R4/X8cQ/+0ZjHkjw2JYX62
R/bOxtDfMGFdvv8XJRtN6iK+NZB2d1ld1Bucpl15tx6v/0Lx/N/5/0b1OH+7
Htb7S7g+OlEP/dLe0j9WoD7vf/XJ3o/1Of+F9dEP9Zhk8f7/WrL4/Je3Ae//
MXLQl6zMbwB9+hGy+aIB8jm5GuL9yK/VEPVH3zdEfG0u/WMHGyK+/ZTsaY2Q
L6zeiPq/awR/Y3Yj9Mv6k/7uY9qDrF/x9V+VrPcgmzO+wnpnD+1+9BX1Z2rM
1/+XjVFv7NvGqM+eKln8+y87uT68R1Y/aBLP4vNPBcni/Mc3TTj/SU2QP/Cb
IJ9yR7L4/J++KdgsJ1ns/3SSLPZ/fm2KeUVbJYvPf7eaor5Ymq9Rn/3F15x/
e3LofE39m2k3rpOtVM1Qv1uyGeoP2jRD/cqYZqhP39AM9ZlXuN5J0Zz6PyVH
pmSx/zVSctzrM7a2OfpvX2qO+F6yFlgfftIC8dUWLdBfYxjt1qoW1H++BeYT
JG6J60f5uCX06l9LFt9/BrdEf50VLTEP/0xL6IkSmPEszr8WkSye/97YRH32
L2TvdxP9Ck8xnvpOK8QzPmpF/Q0l54zT/1Mr9DNY3Ar5lBO06//SbuZvDXbq
SRbff/uTowWtMU/taGvEj71qjX7bedpAr1enDfSEfdogv/pbG6w3DrfBfKzn
tLs528azOP9aU7LY//2+LfXPIZsHJIvnf//TFvH97O34+q/WjvPvRY7Naod+
2fski3//7hH9wyztcb2qVdrDbnQnW9PJ7m5y8IDxlEwdwHqlDqjH7NYB/XCm
0N/fIVlc/3c7cP4ZO6J/sfIdEc/u0hH+3sSOnP82yXG/b6h/d6T+dJ2ov6zk
uP1Nt2Mn6AnGd0J+ZWsn5NdvdkK9ZurOvP+V7kz97TojXjSWdm2TZPH9/xrZ
fr8Lrifv8y5YH7bugvzqaMk54/Sv74L81uUunP9733D+JSSL59+Y33D+I75B
feYarncufoN5+Em7Un+xrpif1lyy2P8bKll8/lnZFfm9c/QPE3WDXlXvxvk3
7Ub9g7ph3u5y2oO/uiGfkuBb5NMLk82vyM7P33L+SyWL/e+TtGuKxfkXtKDH
bmChXm+AhXrDRWT1ONcbb8hWvu7UX7c77EG/7oinLOjO+QfdOf+XksX1n7sH
7td+7R7oT/SDZPH7xzzJYv/vUA/O/1kPzj9HT17/NSSL7/+9JYu/f3B7Ir61
n+vdJz05/2y9+P5XrRf195Qs/v5nJv2dvb2Qz39IjjJ/F8/i+1/l71B/zCLb
0ySL7z+7vqP++5LF+e8Pe6Meo2Jv+FtdeyOeO7k36gu290Z+5W5vzE/P8D3v
f8b36IfTWbJ4/s2E71FP9Mf3iKfd/h7zjqX9AdePXeYH1Od1+AH1h+N+wHp1
C/2NGz9Aj6X2Abul+mB90LYP6lPG9kE9+kbJ4vPf1T6ox0nZF+93/md9ET9q
1Rf1aaMki+d/rKPdDiWL/Y/k/eJZnH8s3g92tWU/1GMMJ1ur6e9eoD1I0p/3
v2JkvVl/6DGH9Ec/HY/snyVHCX+MZ/H8j6I/Qk+sCe32QLK37EfUH56WLM6/
vjvgPxb/3p5RaADiW40ki/OP9gDUFywZgH4oJwdgnvpbyeL+X+An3v/r/4R5
+j9KFs//WPgT6teOkWOvyXZeG/G8mI36w7429Knz41nszxhHaLde2NDr5vqZ
13+tn6n/h5/hr88lmwcli/NvT8m+9guv/+q/IL72HTk2+xfq//MXzNd7TA6z
DuT9v+pA6DV6SBbPf5gxEP109wxEviAaiHkpmQchnv7lIOQ3vx2E/M5Usr9z
EOYV3RuE+NoHg1FfrMJgrLe/IXuTyKE/GPWrdxjPSD+E8y8Xz/89/6STZPH8
419pV/4YAr36rSHIZ6YZivjOF0OR328/FP6RI1mcf908FP2JXafdTjUMdq/k
MOpvM4z6xwzj/DcMgx7rCte7KYbz9f/pcORXWtGujxxO/WuHoz7nEv39ZCN4
//uErLWQLP7+Y9gI6l81Avm88+Qw8Uhe/x+PhN34eiTqswbT311BDs6QlYSj
qL+IZPH7Z2PJ4v3vF/r7v4/i/E+Nwny0d0bz/v8R2W44Gv3wfiKHi0cjv3pi
NPIb/46m/vxj4O/WGwM9QX/alYVjsF4/OgbxzVdjMD8nz1je/+uMRbyoz1j4
a7+RY4cli/e/52PRDy+nw/f/mg781e8li/OvcySL8z8HyO4/DvoZZB+H+7dS
fRz196LdnDUO8Zx9ZP/ROMSPsozHeq3KePQn1n08+mdPp7+3ezz6Hz4Yj/hq
pl/hb1SSLD7/dpMs9v+mSBZ//7vjV8RT7pH1jBOov/wExHO6TKD+iRM4/230
1/6WLM6/pZvI13/ZiVjvdZQszr+Mn4h46taJ1H+T8azUk8Bu6UnwD9pJFudf
nEmIr28im9cmob/O+5PjWZz/+3wy7FFrsjZ6Mue/XrI4/3N5MvrjvTclnsX+
VwnJ4vyTKVns/46YgvXWGsni778vTkE/g6RTYVc+mYr1enOyOXQq9a+cin76
5ySL83+JpmG9pk9DvbGm07DeHjQN8/KWSxa///1Fu5pgOudfeDrmZX01nfp/
liz2v5ZOR3+VU9OhT1dm8PovOAP6nAYzUI8/QLL4/r9oBurXjs9A/NgbyeLf
f8s3E/Px6s6Ef9hPctz1qi6YSf0B/a2XM9FvN/cs2IPaksXvP31moX593iz0
zzwkWZz/fjYL8f0cs+Ef1ZAsnv/cezb6HXMli/OP+8neE8ni3z/N5qI/ajUX
8YyeZGsm2d3L9cFDF/1QssxB/XrlOdBrWnMQz5k2B/X6u+YgXnSfdu3Dubz/
VZyLfHZXsjdZcs44/dvnUv9dxjMyzMN6y5jH+XeWLJ7/MWEe5q1smwe9+u15
mJ+Z9jfEd8qQ/Q6/wT8a9xv6pW35DfXHbnC9rc5H/7xS8+Eftp2P+tSxksXz
zzfOp/6r8zn/lAvAwWcL0D+l9QLk00dJFvv/67jeCcl+8oW4/0TFF1J/y4WI
FxtOu716IfR5F+gfJlkEvWqxRZx/s0Xwt4Yson5vEfoTnF2EepVEi/n+V3Qx
1ptNFnP+AyWL9/9li9G/6LRkcf7x3SXwjxVagnnbjZZAj2cvQf5wieSccfpP
Shbvf2+XoH6rwFLU49ZfinzBj5LF/W8R7fqxpdBrvl6KfE7e3+Hvx36Hvqiv
ZPH5b/7vqC92hHb7BeN5uZbh/T6stQz9UH9Yhn4Yc5dx/gcli99/ni5DfYG2
HP1RaixHPfp3ksX9b/Zyzv9PrvcfL8f8oqwreP1XXQH/WI8V6Kc9YwX175Es
nv8T0a5m9jA/40sP8a1vPfi7Uz3UF+z0oEe576Gf+gcrEc+ssBL1ON+sRL/8
SSs5f5927Y5ksf+dfhXYLidZfP7ttAr1hr+S1T9WQZ9xaxXyW2lWI777xWrE
D9qv5vzHreb8N0sW33+vc72Tag3sfsk1yBe1kSw+/49Zg/pjG9Ygv31lDfrr
pVjL+/+na6FPbbUW8Y2Ra5HfWitZfP6/RP8g2Tre/4tLFu//LWg3h61DPGeV
ZLH/fX4d5594Pe9/H6/HvGJf024PXo9+eivWI194Zj3moybcgHxGkQ3U35h2
95cNyB/8vgH1K6c3YL76OxvjWez/fLQR8Z2GksX3n582Yl7RYtq1ExvR/9i/
G1GfnX8T+uHV20T9/cnqwk2o3zi6Cf2xXm2i/jyb41k8/6DOZuhR+koW5z9/
kyzO/x3ejPk4zzcjn59zC+qLapK178mxOWT7wBbU4/1De5h9azyL89/Vt2Je
Ri+yNYvs7tuKfgWPtqJ+Jesf0KdX+QP1mN3JznT6+7v/QL7oAe1apm28/1WS
LPa/u0kW59+nbKP+HdsQX73HeEZGn9d/eR/r3S4+1gcTfeRTfMli//dvyRXi
9KfbDrtTdjvsfkfao/G0a1tpj92ULPb/Uu8Ae6XJYbsdqFd1dqB/xib6W9d2
oB/u+zvBwec70Q+ljWSx/zWa/ub6eP7v+T+Xud5/bxfqiUrsQj2aKVns/4/Y
hfnYa3YhnndxF/KHSXcjvvrJbvgbzSWL1//Q3Zz/yt3QF5xjPCXxHr7+9T2o
32y6B/mcQWR/uWRx/uevPcivJdjL13/hvVhvf0X2ft6LeYdLJYvX/ynGM5R9
YKsg2W2wD/GDAfuofzFZP0423+xDPU6+P6m/7p/ob9TvT6zXFtA/FtDffkl/
L/d+6q+9H/5qH8ni/MO8/YhvHZIsrv9n+xE/yHGA+mseQL/03pLF/o9LdvYf
wDz8J+Qo20He/6odRD2xngeR3555EHq9vQeRL3x4kPqzHIK/UfkQ529JFvu/
0ySLz/+7DiG+8uAQ6tM/PIx4ZsXDWO90lSy+/0wmR9vpr91lvFiGI3i/t40j
WO91JocTjkCPuu0I6jduH6H+tAHf/8sEWB90oF0ZHyCevkWy+PuHGwH676hH
ef2XOgo9UdujqF8bK1l8/t1Itq8eRT1eymPxLD7/fnYM8dTWksXnn1G0W+uO
cf6hZPHvvyc/DrtS4jjsesvjiGcOlyy+/6w+jvr8C8dRf5TkBPqhFTuB/saa
nYC/PeQE+uF5ksX337OSxfmvRCfBRtGTqMdqchL53IEnkS9YRlb+Yjz93VNg
s5DkuO/XTqNT6Idvn0I/oyWSxfn3k6dQX+ztKdRnFziN69erL1mc//nxNOe/
6DTyGcdOQ4/1mnY371/oZxD7C/1W+tGuzyebR+jvvKDdz3UGHNU6g/5pP5xB
/2Jz6W8flCz2v56SQ+0s+qfWOIv4xndnEd+aTXb/PIt4wWPJYv8/2zn0S69K
NnucQz5nBtnfcw71RdE5xNcyn8f1EPvyPOZpf0u7N/U81oc7yer989BnfHCB
13+FC+iv+80F5AsmSRbX/3au1+9IFv/+Y/qLnH+5i1jvdyJHv16k/j8k54zT
f4tsp7kEf++LS5hX2J52ddwlrDc2X6L+6/R3U4W8/kuG6J/SNsQ89TG0mxtC
9MO5EqI+P8Vl9Cf6VLJ4/k+ry8gfG3kZ/bLXXoYe79Jl6k92BXa1+BXkM1pc
of5htLurJIv3v/P0V5Jcjee459noH1/FevPrq6jfGSxZ/P6zghyduYr6tYTX
MI9YkWuw242vYb33yzXkC3/nevX0NczLeOc62ProOuffULK4/n+6Dn3KEsni
+UcnJMf9Z/57HfU6+W/w/a+eZHH+tf8N5NcW3kD82NEb6Lf9SrL49z/z3Izn
uOdVh3Vuwq72vUn9v92EPuvwTdTnPpcsnn+V8xbnX+sW+qF/T7s5R7L4/f8A
7f4/5Cj7bbBW/Tbn3+s24tmzbkOvt+829IaPbqM+Nevf0GNU+Rv+VneyO12y
+P1399/olxJJFs9/y3QHdrPSHervJjlnnP4pdzCPaMcd6r8nWfz9W8a7vP+X
v4v8Xhfaw4mSxd8/+pLF59+/7yKfle4e6nHL3kP/g45k5dd7nP9WyeL88817
1J/6Pu//pclRO7Lm3Ed9sU33Ub99TbL4/vv+A9jDzx8gv9qGbIymv7Vesvj+
e5kcvBdx/p9GiKebEfzNERHqc9bQ7l+M0L8o6UPO/5OHyBdr/pD6hz5EPG/l
Q+QLz9FfTfwI/ob+iPqb0u4Ooj1YTlbOPEI+PcHjeBbP/y0sWez/fSVZPP/h
58dYHy19jH5qp2iPKU8Qzy74BPV4DZ4gfzjgCfSoi59w/sfJ1hvJ4vtfvn84
/7r/oB6l/z+oR1/wD9abAf2dl/T3cz+NZ3H+ufZTrNf6PKX+ebTbh55S/7On
qDfM8Yyv/5rP0H+jt2Tx/BP3Gfrn7qd/8CSe/zv/mv15vF3sf1Z7Dn1mz+eo
z5lJ9vc+R73RQ67XsrxAPbHKLzh/S7LY/5z2AvWFu8jqgxfU/+FLsFXxJfrl
dn2JfMFksrKD6/W7LzEvM8Mr2B3jFer1O79CvGjCK+jVtkkW5x9vc72d9jXi
e2Vewx52IKvjX6MfxhbJcfOzbrzGPF31DTgoRVbakfWxb5DP3Ci5Qpz+q5LF
+eeU/1L/Z2St9b/QFxtFtteRvZAcJn+LeGoJstHyLec/nHZ39Vv0P7hAfyWp
cuP/1asXkxyn12xGuzNEsnj9e5LF/vdZyXH91BK9g/Wxou/A324iWZz/HihZ
nH9bRlb/kiz2v999F2wVIruNyIH9LupXltKun6TdfPsu6nUKJLiB+ddPAH3R
jwkQT1tEjh2jv/06AfJ5eRPCP4wlhF3tlxD5jfkJEc86QnZfkINciTAfpXYi
xNN/SET9cxOhHucg1/tPyZGWGPm0GuTYd4kRz55N9v5MjPzhY9rVbEkwD6Mq
2eohWfz7HzMki/Pfe5Jw/g/Jeuak6If5Jdn5Nin8/amSxf7/Tsni/MN9cuyD
ZFhvV0iGer1vaA8nJcN6dTv9jTvJqD99cqx3yyXH+qCTZLH/MUGy2P/8Q7LY
/7klWfz+n+Y9rPe/eA/zidrTro0jxza/h3j2ddq9VCl4/ZdMAbvaNgXqNcaQ
rQ0pUL97hRykSEn9n5H1VimpfyTtztqU6L9/KSXnn+x99F8r/j7qi7WQLM4/
D3sf+bxVksXzH86T1SSpwMbHksX3369ToV53MDlYkQr5lbOSxfefhGo8i/3f
IirsTmMV9fq/kKPfydppyWL/553UiGd/lBp2ryHt4U+poU9dkpr6T0gWn///
lSw+/+RPg/kE9dJw/j9KFr9/LUzD+R8lO6/SoB4/T1rUG9WRLL7/9E0L/9hv
tNuHJYv9n+fkMGc6Xv+1yMb36ZDfmiM5Z5z+A7QH/6RDfEVLj/r06umpvxfZ
mZUe9fv70lP/I9q1rBmQL1ZFsnj+ZfcMnP90yWL/Y7dk8ftHRDYyZQRblchu
N8ni+/+UjMin7MyI+vV7XG9m/IDXf3nJYv+zyweoN5ooOW6/RfPpH/tbsjj/
nu5D1OeV/ZD6O0oWz7/49f847v9tpb9180PqT50JHJTOhHxKe9p1h3ZzUybq
vyZZvP7fz4zrJ/o8M+rV2kiO2++Ljc6M+Pb6zMjvXc6MfoXvZYG/+qlkxf9f
DlPyB/9ja4Rksf+3huuDi//H//NXkmWV/fsf659kRXyzueSccfqHShb7vyuz
oh/RuazQoyXOxvufno3zbypZnP8alA39DJfTXz2TDf01EmRHv6zC2WF3v8rO
+f+cHf1RfqddP0U2FQ3vF05BjfNvIFnsfw3QOP/FksW//3qcdvuNhvl4+XLw
/l83B/qh9qfdWJADeqwgB+pzX+ZAf4PcOeNZnP+rI1n8/t0nJ+ZlzsuJ/M4h
yeL837OcyB/lyIX6tJq5qL832XZzUf/+XJz/k1yYh5o9N/QZ1XLD3+qZG/nd
mZLF/s9eyeL5p49yI7+eJQ/maVbOg/yOlQf+/rQ8yB/tykP9D/Kgv7EP8+L1
Y1eUnDNOf9e80BdOzov+qjtoN+7mpf4M+TAf18gHvUFnyWL/a2I+6NW35YNe
83Y+1O+kzY/1fpn8nH8HsjZesnj+15b8qNe+kR/5PbVAPIt//6NUAehR29Fu
jJUszv9tLIB47tUCmEeQsiD0KJ8XhB69dUHOfxT9nXVkP+T6KPlHqEcrIVmc
f2lJtodLFs//W8314YWPkE9NWgj1GcUKob9Ws0LorzukEOoLPMli/+OcZLH/
kagw7GbRwqjXaVIY9fkDJYv9z2WFkU/7qzDqib1bBNevXUiy+Pu3RkUw79Au
gvzqUsni/NfJIuiH9Vay+P5boCj6F9QvCrsyQLI4/7ioKOd/rCjm47wuCr1+
Xh3ro5gOfVo/cmy+jnnZR3Tqf6GjX2Guj1GPWvtjzMf44WPMw5pLu3uQHDxl
PCVHMejTaxRDv83viqHfzuximK//ZzHEjx4XQ3+1bJ/w/lf1E8Sze3yC/nkz
PoGecM8niK8+pN3IXBz1Wl8WR33ut7QHU4tjvbKrOOLr9yWL/c8PSoCdCmT/
mxLUP4msbad/7I7kuOvHTv8p7F65T7E+7BTP/+1/TyAbf0h/8fyPW2Q3zWec
/xefwa50oF0f9xnqMzd/hn451+nvp/oc8aKSn8Nfa0uOjZEct19mb/gcerwr
tIcpSoLVz8hGK8ni+QcjSyKfu7Yk+htcIivJSyGeXrwU9JktSqEfzrBSnP8q
cnS+FPqhJSmNeLGPS3P+X5dGvd5g+ocrSiO+epZ2I+EXYKsI2W1MDn4hK8u+
QD366S9Qj/lOGfg7H5WB3W9Yhvp/KkP9SySL1/8JyeL5//9KFr9/5i+L129Y
ryzyqT+Wpf6FZZHfOkp2X5GDPOUQX4lJFn//0Lcc9f9WjvoPc73/nPYop8HX
fy0D8WLfG9BrzyF7Bwzq/4frVa089BjVy6PfVi/a3VnlES/YV57zf1we8fWs
FTAfs0oFzM/pTvan0z/aXQF6tKgC9WeqSP2VKsLudatI/VMqIr66k2zckxx3
/VoZK/H+V74S4gddaFcmVUI/dF+y+Pu3vyuhXifdl2C/7JfoR9SRdu3XL6En
tlWyOP9+k3YvdWW+/5WuDH+1fWX4G05l5Lc2kd1rjBe8XwXv90pJyeL8Qxuy
OZrsrJcsvv9dliy+/75Xlfo/rcr5m1Xhb4+QLM5/r6mKfOFF+qvJqsFufEK2
mldDfe5Q2oOV1dAf5Xw11Ksnrs7rX68Of6dpdc5/EP2j5dVRr3aG62MJakCv
XViy+Pz3Fe3hzzWwXv29BvIbpySLf/9WqYnrwy1Yk/ob1ER9yk81qX9xTcQz
jzOe84bx/Hy1eP3XrcX5968F/9gCyWL/O6hF/S9rob4wd23Ov05t5DP6SBbf
f+bVRv/cQ5LF+fdntVGPkrMO/PWadRDf7C05bv/Eceugfn+/5Jxx+p/UgR4t
ewz+sWoxzr9nDPm8mTHoCfdKFs+/fCRZ7P9mqYt4VmXJca9v1yIH0+oin7K7
LvqrP6iL+Zkf1uPrv2I96PO7kqPJ9VCPtkOy2P+9Ww/12xnqoz+eUR/2sDNZ
nVgf/TC20W7dJrtpG4CDMg2QT+lI1seTzS1k5wbZVxsiflSKrLVriP7FxjbE
enujZLH/dbUh+hembARWP2/E+bduhP5ao8juOslx+41BKDnu9aC89xXv/yUk
i/PPLSWL87/Dv0K9/uqvOP8LjKclbcz7XzGy3Uyy2P8ZIllc/15jzv8c2UjU
BK8/q2gTrHebNEG/g4FNUL+ynKz/RTbfbQp2CjVFf/xGtEc2WVvaFPOIneR6
+21T6PEKfI1+hvW/pv4BXyOesYj+1jHJ4vzra8lx/wV5m8Gu1JUcd33o/Wg3
5zej/iPNUI//ohnqiXI1RzytdnPEi/3QHOvtuZLF718Hm6M/4VOymqMF519D
srj/fdcC83Znt0D9wZ+Sxf3vSQv0T8/WEteTWVWyuP/1kCx+/5hBe7RHsjj/
/7Al55/ZBNtfmtDnfWsifzjVhB51l4n6jftk64NW0OtWaIV8wTeSxet/civU
r2+XLPa/7kgW+1/pW/P9v5xksf/ZSbJ4/5/QGv2N/UG2b7VGPi9NG+gJv5As
Pv93aMP5j2uDflub2yC+e12y+P0jVVvYlVJtMU+9bVvEM8dIFr9/bCD7V9pi
PlGKdnz//6wd+hVr1Q767JHtsN5b2w7xw0vt0B81eft4FvtfxclWi/bwd4e1
R7xglWTx+8eF9piXnqQD/M2PO6B+5+sOmIc/mP7RCvprZyWLv/9O2BHr7SKS
xfm/xuTwl46Iry7riH4ZpztCr/VOJ8zb/agT9AUNO8FfsTthHvoSyeL854lO
nP+/nTBfP39nvv7rdUZ87UdybGFnzv8o2XvFeGGeLrCrsS6Yn9FXsvj++5tk
8fnvcBfqf94F/VFyfUP9tb7BfMzvJYv9vzmSxf7XgW/Qr+gfsqZ1xfpY9a6o
x+7VFf7erK6c/z6y+pjrjazdOP8q3ai/ezesD6Z3Qz5lTzfE0yPazUzfYr1T
SXLc93G/27fQF035FvG0nd9iXrF7jGdntNBPr7yF9WEXC/WokySL84++hfzW
3xb64abrjvVB2e6Ir3Qi67+Sza1c79wk+6l74PqLSpO19j3gH3N6oH/2JrJ3
jevD93tCn1qSbLTpiXqt0T2Rz11P/+ByT/RfSdEL/vqnZNPshXqcEb2w3l9D
ji6StWTfgWOffIf4dvPvUJ83lByu5Hr1vGSx/5e493/83/Of9XgW55fdpr3h
Hwyiv7KCdv1Mb+QzE3wPu1NYsjj/+tX31P8z7drv5NgpxrOVH1CPV/AH2MMG
tKs/kY3F0l/sfx4nu28YL8jXh/rr9aH+/n1Qr7mA7AT0919KFn//kLsvX/91
+mLesT5ke55kcf0f6ov6wmd9oUfN2Y+v/5r9sN7qTXbdfphPsJ/rlX/6oR49
e3++/qv15/x79kc8f2Z/rI/20l97RHssy4/UX5nsWZLF+fdptKu7JYvX/4Mf
Of8PByC/W3EA4gVdycqUAdS/g2zeHYB8ToafeP8zfuL8O9OuTaQ9tk2y+Pxz
m/5eWpvvf2Vszr+jjXjGeLK1xUZ89wbtgfoz7/+lyXo7yeLvv8b+TP0bJYv9
36uSxf5vyl94/X8uWXz/b022R/2Cer11tIchWX1vIN7fjRIDUa/VciDqdYcP
pP7VtCsXuV5POojzLzYI+Z1mg6DXH0J75JG1c4OgL5ZoMK//ooNRj9dEsvj8
N5CsLicbfw1GPuvdIWC30BDkCxoNQT3Kz0OgR1/K9ebJIeif83YI8vsFhuJ6
iOpLFs+/GTCU+hcNxXr7GNl7PRT1hHmHxbM4/113GOoz+g1DPmu+ZPH9/4jk
nHH6X9Cu5B4ez2L/t7Zk8ffPP0gW+x9z6e8fHI56o6eSxf5fjhHIF6shWZz/
+m4E/L3Z5PDPEahffcJ4RraRYKvqSNTv9hiJeoMZI6FH2Uu7/pDxzMyjqP/L
UYjvfzsK84mmjsK8tV2joCd2X7LY//hgNPJ7FUYjfvjNaPRXnUy7sX009d8h
u+nHoP6g3BjkVzpLFs8/mSA57ryp+YfkuP0s5xbtfpqxiB99IVl8/+0wFvXH
xo1FffbmsajHuy5Z7H+lcsBqKcni+cdtHay3xjioz91ADq6QlZTjEE//jGy2
Ijsjyf7acagvujQO+rTk49HfWPHx8LdbjEf/vGHjOf9V45FPvUA2kvyK+Vgf
/4p+uF//n/1//wWDf8V6xaO/fpb+ZsIJvP6LTIC/33gC9Ea/kLVl9I+dlizO
/78zEdeH9xE5bCg57vy4akuOe16CsWQi9FgnJiK/+y/jBfknof9K/Unw13+c
hPrMhZNQv3OU7L+ahP5EeSaDtdhk1BvrOxnzsn+THG37n/7DkuPOo4fP/2/9
/1jNNQXzMWpNof7vp1D/HMni+e8HJIu//386Bf3Rtamo36w+FfGdXpLF849m
kaN99NceT4XeWNZpvP9VmYZ6ve6Sxfv/9GmoV91DuxFNQ34r03TocStJFr//
daNdmTod8fSdksX7/z3J4vxzxhl8/Zefwfl3mYF6tEkzoDfmz0B+++8ZyO+l
m0n9ZWcin9pJctzrwfh1JvprbZUs7n83Z6K+IPUsvP8qX8yCXr29ZPH9x5Es
/v3HTbPQD//aLOp/fzb0aSVnox+xNrMxb3v0bMTz1tMeXp6NetUULuo1PnWR
zzIl54zTP8Kl/jUu5qFccpFfTzYH+cxP5mAeTvM5qM8fKlk8/3KlZPH95zzX
xxLPRT22Ppf6m5LDQXNRr7qCduPMXMS3EsyLZ/H5v7Bk8fdvX81Dv5RfyPrv
ZPOUZLH/q/yGfH5ByeL7XwOy9pNksf+3+DfUZx8ne28ki/PP+eZj3mq9+Yhn
9Jcsfv9bMB/1u8F86n8pWXz+z7MA+vQ6C6i/zwLM05m3APX6hxagvuiZZPH8
v5wLcb3Eai5EPrv3Qqz33IXoX7h/IfKp/yxE/43si+JZ/P5TbRHiuz3JwcxF
WK/sW8T5P1oEvWaWxfEs9j8qSxb7Xxbt0bTFnP/uxYgXe7CY8/9wCd//Ky5B
fWFXyeLvH6YsgR5jB9m6y/VuhqV8/zeWot9Kl6WoV5+4FOvNbUs5/9v099P+
zuu/zO/Qp3WULJ5/MV6y2P/d8jviezfIobqM8y9NNtqRrbFkd+My5A+u0q68
vzyexfm/z5fDbrYmO6PI/rrlnH9Iu/beCsSPlVjB+bdcgf55wyWL/a/VK9Av
9eIKzM9I6oGtYh7iuc08rA+GeOivslJy3P1AP0e7mWgl9ReVLJ7/0GQl9Q9c
Cb3a8pXQE/trJeqz310Fu1doFdaHjcjqz6s4/6WrMF/rJP3dt+SgwGqw0mA1
9OoDyOai1dR/jHb/NTnKu4bzr0uO9VsDf3s+2TuyBv0JX3C9mnst6jdqr4W/
9cNaxHPn0h4cXIt+K89o13Oso/4a6+DvfEe7P3sd6ov+pF17wvWxbOvBdlXJ
Yv+vh2Sx/zdjPepT90qOu56Nh+uRz8q8gfq/JAffbkA8ZRrt+q4N0GPeJzsf
bET//QobOf9vNkKfNpn22PaNyG/fob+XfhPvf+U2UX/nTfA3JtDf+oPs3uL6
IM1mzr/MZujTO2yGPnOcZPH712b6+9fpH6XagvlppcixtltQnz2Gdm/DFtQb
XiGrKbdy/p9txXqrlWSx/z2SHKzdyvmHZD35H4hnFv8DdqcF7f4wcrTqD87/
wh+cf5Jt8Lc/liz+/u9ryeL7/+BtqF/1aDfOShaffxL6YLeIZHH+tzFZGegj
nr7Mp/7TkuM+fzjvbI9nsf/3kWRx/qPhdsTT7O3oX2zJduS3T9Du/bsd/Qvz
7+D86+9AfuNHsrVwB+K7R7k+eLUD81Dy7kT/9ZjkuM+vZt+d0OP8tpPzP7wT
8aPnO9EvLdcuXK+xWrswT/v7XajXm7MLesIDksX5v6e0G9pu1GdV34363F67
qX/Wbur/czfi6Y8l54zTn3VPPIv9ryqSxfnH7uRoOv21PbTHItrtTHuhz6u0
l/q7SRbn36bS39i5F/Gse3uRz824D/5BebLyzT7MW5+0D/00fcli/+tvyWL/
I92fsEdl/0S9Wqc/Md/Yr5LF/t9WyeL8402uD1Pvp/4vyEb7/eiX5eyHPnfT
fvQjuLYf/VJSHcDrVy95AP0w2xxAfGf0Aaz31x/g/C/TrqU4SP2fkm3zIOc/
QnLcfk64RnLc/qF66SDiG8kO8f73ySHMz21+CP0Khh7i/FcdQjz9vGSx/5H4
MF//+mHU7zc9jP5FgySL5x+vOIz+xc4wnp3gCO//hY/AHn51BPHVX46gfuP3
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
j35FayWL8x+hZPHvHyTPgOvBLk72WmTg/IdlQHx1tWRx/V/IgHlaSTLC7n6c
EeuDrzOin8qQjNCnexlRr3k2I/rhJPwA7Bf5AP2OGtOuDfwA/YgtkyzOP52W
LL7/vvNhPIt//+4jyeLzbyPJ4vOvLVl8/1nyIeK5Jz6E3uDfD6FPKZCJ+utn
gh7zx0zon7MwE/L7RzMhX/RKsnj/z5uZ849lRny7b2bE934jh4czI776IjP1
58qCflq1JIvnP3yfBeuDOVkQXzmYBf3Rn2ahfi0r7E51yWL/t1dW6p+VFfVo
f9I/9jgr9WfNBrtXJRvmGXbPhnrVGZLF/ueebOiHFXG9myk7/INKZOXb7KhX
n0q7uTM753+P7GfUeP2X1zBv7RtybJJk8fxrX0P/vL8li+cfpMsBfWo5stFJ
stj/+TUH1rtbaQ9u5qD+NDmhR/9Csvj+116yOP/m5ES9/ib6R9dyIr6WKhfq
iZXMhXh2m1yozxudC/HD9ZLF+d8r9DdS5EY+61Oya0oWv/+MyI16lbWSxfnf
S1xvJssDf+eTPLD7zfNAXzQ0D+rTVuVB/bHzksX+Z+K88Sz2v/S8nH/TvOiX
Ojgv57+CdutMXuR3E+Tj/AvnQ3ylcT7E03/Jh3jm7/Es9uecU/lQr6/kx/qo
YH6s1xrmh3/sp/zIby8me8fJ4Zv8qF/NXwCvV6NeAeS3+ksW9/8FBRAvCLhe
eVUA89HzFMR6s05BxHf6FEQ8fx45OkR/7TntsZwfUX/Nj5Df6y057voI3Y/Q
P/UA2fhHsvj3L7MXArvVClF/z0LIp8wqBL36vkKo33zE9U6Wwpx/5cKoN7IK
U//0wogf210Y/bcfkL0Pi/D1X7EI7Gq3IohvTCFbO4qgXvcuOchQFNeTUr4o
7HoXsjmxKOe/jXb/Nu3/H1XnHb+z+f3/tHaNBqVmxabVNkaNKlJ7FKlabY2g
9mhQWwna2sTeBKVWib2JTYvGVjWiWqtFVM2iv9/nvj7v6/N9+sPj8Xyc6zrn
vM5JcifXfd15x5l12LWKOupjdtAR35moY76/Taf+qzr6pWYsDn9G+ST+7/tv
2pK98cXRr3BzceSn/FYc8fUMJai/bAnMd1uXQD7BGMni/UcbaNcu026mLcnj
/52S0Ou3JEcjS6Je6rqSyMe4WJL9T10K12uvhGTx+d+sFPwrw0vBv766FPK3
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
tVFJLL5PNNeRnYuc76f+Df6jEr/Bn9r8N/Z/uGSx/r36N/b/F/oLU/wOPf//
A4/6PyFbX/2OeO5KcnCW4+MXr/L4f/Mq8jObkJ0hV5Gfv1yy2P9/iv5U5RrP
/9fJdsNr7P8gcriErJy4Bv/6M9qtwtd5/H94nfoHXKf+RWQtvA595pPr1F/g
BtivdwPxor6Sxfc/CyWL+78jtNsPyV7em9Rf5ybyV3rfxHjdu4l8rB843v1b
svj+77U/eP7X/AP+tJ6SxfrnHNqdA7T7d8lRzj+TWNz/VycbtmTx+5+ZfyI/
b++fyC+8TbuS/Rb1V7kF/1ZXyWL9axrtwa5biB//QX9a1ttg07iNfjidbiM/
f7Jkcf+34zb8qzduU3/mO8jPrnAH8732d9j/CXfQX2XbHcTXr3K8pca8/r0b
Y3zwWYx84nGSxfPfZsni+e8K7U76u5jvl7nL/re6i/qpY+4ivrHhLvK1I/rz
XvoL9QlLSRbvf2z5F+qlj5Qsvv9Zy/nuBdqDVPeov7hk8fzT7B7mm99wvOOT
/XP3qD/535ivvi1ZvP/8479RH3vY39T//d+of3iGduXF+0ks/v5LMcli/3/j
+9DrOveRX7CM4+OT91FP7d/76I9Z9AGP/4/I/pcPoDf6jqwef4D8jacPqL/Q
Q17/zIfIJ+z/EHqVRQ/hT/9Jsnj/+2PJ4vfP+R+Bg7qPUI+4zyPE1xY8Qn3M
w5LzJfQ/eIT8fO0x+1/7MfX3kiz2/817jP7ahyQn1rO9e4+hL8z9hP2vKVms
f/QgW7Mli/XP/U8QP4ifIL84xz9JLNa/q0kW73/+nHZnhmTx/o89tEe3yGq2
p9BnVH6KfOwuTzHem/oU+YfBU/RX+eMp6q1necb+VyK7HZ+h3sGkZ9S/naxd
f4Z6mpme4/hx3nsOf3675xgfuc+Rv7pVcr6E/t+fIz/75X9xffDKSRbHf5t/
2f9xHK9v+hf1sH7lfDedcv3/Ht9BacmJz5PYkizO/9GSxfPvesli/e+SZPH+
kzQvwB6VlCz630Ky0D9Csvj+Z41k8fuH8/QXpnwR+SnFJYvvPz4lW19LFu9/
XiU5cfwFP0sW65/Jkl3/v/XV3kqG+GbTZNDrDE2G+f6KZMgvOk1WX0iO/Iw3
ksOf3YjsDU6OfMKlydE/5WRyxNefJ0c9rSIp4M9tkAL+goEpkF+8OAX6ox3j
fPMfzncKpsR8vz456idZ3P98K1m8/+FoSup/lBL18fKlov4PyEofyWL/13zJ
4vn/R8ni/L+fCv0M8qQGx7VSI3/ti9SYb85Nzf4fpN3/i/OjXGmgV60hWdz/
d5ec+HyxZ6VBPt6+NPAX3kkDvUqOl+Bfr0q2ukkW67/TJYv7/90vUf+fZO3V
tDz+3yc7ndPCvz8lLeof7UxL/Tcli/ufV9JBn10xHfR5HdLBXzgxHfJXtksW
z7/XJIv9vxnTY75bXrJ4/m9Lezw+Pfu/JT36Zf4mWfz+J0MGHI9+2QyoR9Q6
A/WPzQD/xsYMiG9fpt1L+zL7/w5ZsV6GHn2UZHH/t+5l5OdeJAepVeQbl1BR
T625Sv3DaXdWq+iX/4uK/KIUGTFe1SWL9c9PMqI+9lcZEc9bmZH9P0t/SrJM
+PzS38yE/lhNMlH/EHKwnByfyoR8NCUzP/9ezwx9TsPM0OMP4vhoCVk9kRn5
Gs/IduFX0E/vQ8li/XMAWVn8Cuqvh5LF+u8TjncLZEli8f6DelmgJ+6bhfoX
ZoF/80gW5Oc8JPt5syJeVCcr7GpvsuFlRb72D1nRX+/vrIgfvvYq6qXUehX1
1Xu+ivHWHLJ7gPODu68iXpwzG/LXqpNNm+zMzEb9e7PBX3Q7G/ufPTvYqJId
4+2u2dn/adnZ/11k5U+O17Pm4OefkQN2t1MOzA8mSxZ//3IHx2s3crD/mXOi
fk6FnMjfb097NIF2dVtOxDeu5kQ8W831X/7v+4/fzUX9n+WCP2V8LvZ/s+TE
eqt1JRf1p8+N8UGZ3NAXtyJrY3JjvrkhN/sf5Ua+/kuvgaNSSfzf97+3fA3+
jJGvwZ+9lnbvAjlMlYf9L5GH+pvlQf7WN7S7vmTx+X+OHCfX2P+3NcQzP5ac
OF6cYbT735OjM2T1xbzsf7G87H9j2j0nL+oXLssLPcopztf/JVtF8yFf96N8
1P9lPviLvyNrx/OhnuZTyWL9s1B+sG9KFn//oj9ZXSRZ3P/9lB/x7Mf5qT9/
AZxPYd0CyEfpS9YXkK3DZPcB/QVaQdQrrl0QerReBZGfOa8g6ucckizO/3sF
ES/KXQis1iQbPcj27EKI5+0vhHhhTLuSszD1VyuMelufk90ZhaEv2CNZfP95
i/60bEXY/8pF4M/pUgT19KcWQT2ioAjyV/8ogvyNLEV5/Fcqivy8jkXZ/0mS
xf3fDo7Xrxdl/zO9Drv7HjloR45dyeL9H1vJ5u9k5+U3kI9fTrJY/2sjWbz/
YBzHG5ski98//io5sb7npSuWxGL/S2my0oqsjy6G/Kz1xeDPvVQM8YI0byax
eP4vKVn8/rWF5HwJ/SNod9ZIFs9/58lRyrfAavG3kI/x6VvI1/76Lfj3Vr2F
fMOf30I9leRv8/h/S7L4/qfp26i3O/Rt5BOseBv+49Nvo57aCzrYfENHf51G
OvUP1lHPaCnHqyfJxnOd/S9SPInF82+D4hgfDiyOeinfSRbvfz4mWax//iM5
sX7pFiwB/0H9Eux/P8mJ9SHtW443j0rOl9D/SLJY/8xXEvGjD0oivtqHdmN+
SdTP/rEk4nv3OT/MUyqJxf632qXgT/+iFOplzSW7B0ux/3+R41zvJLFY/63x
DvIxu0sWv/+eRfb3SRbvv7zzDuqr5iiNeEbV0qiv3a009HjTyeHu0qiHcqs0
+qG/Wob9f78M8nE7l0G+wRRyvLMM6qXdlCzef/1KWdTfqVgW8fwOZaEnmliW
/d9eFvkY18oivp2xHOJ75cshXti2HPqjuOWofwvHW79xvJvh3SQW7/8oK1m8
/7i15Hjnf0SNpd3c+C7651ym3U9bXs7/z/746B3JifeZqFZ5jDdGlUe+9rry
7P9Fjg9Tv8fjv+R7qLfe/D3otYaT3dWcH/zC+XGKCuy/XgH9MT+pwP5/RfZX
VkC86CxZTVaR5/+bFam/SUXk4w2piHqHyzlfOc3xulIJx4P1eiX4dxuSg0GV
kF+8pBLiaScqIZ75jHansIHPH/9DA/WKBpDVxQb1hwbi208M5OcVeB/2sN77
0Kv0kyzWvxe+D//WkffRT/ehZPH7/7yVef7XqYx4Wu/KmG96lTHf+UFy4vro
/10Z+UevVcHnlVqrCupl9KyCfO05ksX7bw5UQfzwrmSx/p2rKq4nevWq7L9d
FfrcmZLF/d9e2uPbVeFfy14NbFapRv1dJYv732nVkE+0qxriqX9Wo/6s1eHP
Nqqjv16n6qhfOFmyuP/fSdZvSBb3/5lrID+3Qg3oCdrXQLx4Qg3UT9tWA/0x
r9LuqDXB/rs1oSf6rCbiqeNrot7G5prIz75SE3q89LWSOHG/GJaRLL7/bE3W
x0gWn/8baiEfN6qFegYv1Wb/S9WGXWtJNkdKFu8/WUu7f6E26h+lqpPE4vmn
RB3YjWZ1oNf+hnbPr4P8w3OSE+e7kuID1Fd/+wPU0/pYstj/MuwD5BN8L1ms
/5whay/WTWKx/lOsLuxOY8ni+d+hPVpWF/rUUxxv/FsX/bKL1kM/vY/qQV/4
ZT3UW1lSD/714xxvPSW7herz+mfWRz5x//qov7aoPuabP3G887g+6u3nN8FR
XZP6+0oW6x8LTORjHzbh33tgop6h9iFYqUPWe32IeNa8D+HPPcTxwT3JYv03
d4MkFvs/azZg/3vQ7sym3d/fAPGjuAHiqzk/gl6j2kcYb39O9mZ8RP17yMrt
j+Bfz9YQeqzKksXf/+wiWaz/TiXHAVn7oyHyMbM0gn+nUiPq79iI+ic1Qr7q
DsmJ88+43gj1tDM1RnzvPXLYjqxMaIz4+lbJifU+6/fG8O++3ATjg3LkuE0T
6NPGNUH+5qYm0Of82gT5+OmaUn/ppqi/2op2Y3RTxLPXN0U+3qWm1J/mY37+
lfoY8/UWtFsjaHfXfIx6BOfJccpPeP0rTjY//YT6v/6E/V9Fjn7+hPqTf4p8
jLfIdlOyN1SyWP9bQVbOfIp89BeawW690Yz6GzVj/wfTHi9thny1kxxvPic7
RZpjvt+gOfs/kKx+1xz5GceaI579T3P02yvYAvPD+i3QD6V/C8zXv22B/Kyj
LeDPfcTxQb6W/2XxfUX8QRKL80fr05L9n98S/pwfyf79lux/Hgus1rbgz/hC
stj/O5d27yA5/Ius5G7F61+NVvBndW+F8e4syWL9e18r1De+w/FajtbUX5Xs
dGuN+P50yWL9dzdZvUU2Xm2D48F+vw31d24DPeGUNshXCcj6zTbwb73yGfVX
lCw+/ztIFvd/E2nXttNuXpMs9v9kbAv/fnnJ4u9/tG2L+qhuW+gxtpDt38he
hnbIJywrWdz/tGmH+PpYjrc2tkN89zLtQdr2yDd+pz3Ga1Z76DVHtcd8Zx3H
+xfbox9R6g4Yr5aULNY/m0sW63/DOd5bTQ5/6QC9SsqOyE/XO6Jf1icdUS/3
q47IN1hJjs92hH8tWSce/292wniniWTx/vshksXxv7wT8lFPd0K+htKZ+l/v
jPp4DTujP+EgyeL7/6W06yfoz3omWaz/Fe6C+MGHXZBfPICsLe5C/SHnO0+6
sP8FumJ+VK8r+9+vK8YbCyWL9c8jXan/YVfEC/N2Y/8/6Ib5eu9uGG953ZCP
+4PkfAn9f0tOrFfEr30Of1qtz1FPs6fkxHqHM0eyWP88QI7ucr6ay2b/q5Nt
28Z8byY53CtZPP/dsak/e3fUz6rSnfq7doe/YFp36t9F1v7keDNrD8R3jB7o
r9+pB/s/uQfmqzvJxo0e7H/mnmCvgmSx/tG+J/wrEyWL9Z9tPVFv66pk8f2X
+gWur8G7ksXz72e0a+O/QD7mZsmJ9VjnimTx/u/0vZI4sb4clZEsBrUmG2N6
oV/2BrIX9UI/wpd6o37KO70RX2/ZG+Otkb3hz13L8cGF3tATp+oD1kr0QT3N
Zn3g3/mmD/Lxfc6PzvVBPDVFX7Dxdl/Uy/64L/s/THK+hP7v+8K/cpasv9gP
/q1i/ai/cT/kGzj9oCdeJll8/p3ifPNfjneK9kd9/I/I0Zf9oUdd0h/zjeOS
xf7/p5LF95+FBlC/OYD6B0gW7z9aNAD6rJ8ki/WPx5LF73/yD+T1v+5A5Kv1
HQh/5oKB0OccHgg9/gNypH2J66Va50v4M3pJFusf875Eft6hL9GP8J5k8fuX
1wYlsbj/q0m2egzCfHf2INQj2D8IeuJ4EPXnHIz8zWqSxfe/nw+GP3/GYMyP
9tCu3iYb2Rx+/ld2UB+vi2Tx/rOpDuIruxzUQ//DgX8ryxDk71YagvyCjkMw
P540BPXSdkgWn//XaXcyDaX+94ZSfzuyOoFsbB0KffbvQ1EP7+VhOB/CcsOo
/zPJ4vvvccOof9Mw5O/+Ogx6g3RfUX/przBfa/UV4pmjJYv73/WSxe//L3F+
lOZrzFdLfc3+t5Asnn9GSBbvP1hDDs9LFs8/qb5JYrH+Ufwb+LM+pd39+hvk
H6wixz9/A/9a8uG4PphvDUf+TlPJ4v5v6HDUO1pBVs8MR37GCyPg335Dsvj9
T6MR8B8Oliz2fywbQf0n6c96TrtbZCTqGTQYCXs8kKx9RzaPkZ1/6M8vOAr2
qD5Z7T8K441vJYv9T0dHoR/eI84P840GK3Uli79/1mc0/Fnzye6P5OD+aPQ7
zjMG/dFqj0H9zS8ki/1fc8fAn39wDPX/RbuaeyziGTXGwr/dXbJ4/p81FvHC
fRyvxPSn5xhH/VXJbrdxGB9Mlyyef3ePQ3zt1jjUw3x1PPv//njY/c7jES+a
Ilns/wzGs/83xyOe/YpL/RVd+As7uMhfmUTWt7vIz7pGf27GCeCgPDluS9bc
CfBvbplA/b+R/QwTUY+o7ETY1TaSxfvvx06EPnsj7d5l2sO0k8BK6UnUb02i
/lFkdx05uDgJ8eLUk3n+lySbzScjvjN8MuL7q8nRL5NRDzXlFPgz9CnU/8kU
9v+rKfAXriQrP5P1ZFN5/L85FfHdJuRgiGSx/3M552unp1K/Mg3zndenIV+/
4TTMjwZNY/+XShbP/ycki/WvZ9Ogxys8nfo/nA5/ysDpyF9fTLsVTkd+7pPp
iB8UmMHzv94MjNf6zUB8c+EM+HeOzIBe/yE5yjuT178PZkKv0Vuy+P7bm0n9
P9Ae/j0T9VfyzOLnXy2y1XMW4rtzaA8OzEK8+O4sxNNyzQab1cmOTfZnzkb9
or20q3dmI38j+xywXWUO8vO6zoG/cBpZ2T0H9dT/pN3KOhf9do250Bt0mov8
4slzEV/byfnmDcli/1/mefi89ivMw/io/TzEUyfOQ37GNo63r5I91ePn37se
9bf14F8fL1m8/2Ez57tXPPgP0s/n9b/MfNi11vOhzxwzn/o3SBZ//ymSLP7+
4UsLkI/6DtloSbZHShbvf1i7APHDCwvgX0m9EPnoJchWs4WY735De+DTHp9b
iHpoKb7FePPtb5Gf8zHZH0aOvpcs1v/OShbr3y8uwni7GNlrTA6dRai3snwR
8tVPSRb7P/5dRP1FF/P4/2gx6h9/uRjjtSWLka95fDHiO0853i/0HcZHpmTx
/DdAsnj/w6LvUF/7J7L3WLJ4/su/JInF+le9JbDrfSWLv/+zgHb38BLUM3iw
BPFibSlYq7OU+nstpf55S9n/Q0tRj+ieZPH9z2vLkL9Rcxn734PszV6G+oX7
JYv9T3eXIV8953Lka1VbjvHu5+RgxnLUK95D1m5LFr9/zbYC+pzKK6i/C+3R
1BXwp+5awf7/sQL52lm+T2Kx/7uSZLH/seP37P/k71Effcf30Gddp93NtDKJ
E/+C91bCHrdbif5qE1ZCj7lVslj/+/1//hL6X16FfKNyq2BXPyMb41YhX3vT
KuTj/boK9Q3T+bz+lfFRX72Vj3yt0T76566nPbgkWXz/lWY1j/9Sq6m/xWrU
3xmxGvH9NauhJzq/Gv7VVGvARvE18G9/ugb19b4mh6skJ9aLlXOSE/ur9eRr
0V/rrbXoh9t0LeofDJUs3v+8gnbtDNl8YR37/8Y66PUbrWP/B69Dfuqydez/
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
Wez/OkS27kkW61+5b1F/jVvIJ+5+i/2fTbu5n/Od+Bbq6+e4Db1RVcni+f/z
2/BvzLjN/u+5jfp5t25T/6t3cLwqle+w/13uYLw19Q78u4Fksf55kxy/ErP/
lWLMNzvG0OdMilFff3uM+kfXJIv3f2a6i3oY791FfLsd2XMli/W/LXehV/n9
LvzrL//F478c2W1DDsb+hXzijX9Br/brX9BjpruXxOL3v6XvIR/fuof+RaMk
i+9/1t9Df4xLksXzf5q/efyXJIfNycqIv9n/NWTrPMe7Ke+z//p92ONPaNe+
liz2v626j3o4P99H/fxkD8DRm2S16QPMN4Y+QH/tFWTv9APUO1QeUv8bksX6
T6OHiGcN5nh36UP4D05IFu//fvYQ+WlFHqEeZoNHqIcz8BHG+4s5PgppV/95
hHhGwcfwZ9d/DLvX7zHmhwslJ/ZbK0cfQ6/+6DH0WfmeYLz7ATno/QT+Y+8J
6q39+AT1M++TnTz/QK9f6x/kH/X8B/HUuWTjINn+6x/o8XI9RX3C6k+Rr9Kd
rM8iW/ueoh7uHdqD7M/Y/yrPkI/W7Rnmm9Npd3bT7v9Je5T1+X9Z7FdX33/O
/neWdqF/irRXSejfSQ5vPEd9lFf+Zf8r/ot4Vod/2f+JksXf/9hGjq/+i/5q
GZWbOP7LSxbr/20lC/3jk/i/+/83S7u4/v8mORHPyPAC/NllJYvff7R+Af7D
MS/Av7KR4/XL9GelfRH5u+9IFuvfLV9EfvFIsrbuRfgzL0oW1//UyWD3SyRD
PlEzsjo8GfWvliyu/78kg38vRXL4D99ODj3KJ8nhT/+K462VyVE/92xy5BO8
mIL6i6WAP61JCvZ/SAr2f3kK5O+f4vjo3xTU/3pKsNEwJcbbg1LCn7eEHB6X
LPY/PeN8vXAq+Lc+TMX+D0iFegSLUkFP/JNk8fc/nqRCfLNAarBTj+z3TQ3/
0QLJ4vu/I0ksjl/jIcfbedNQf500yCfslYb992jXf+B86+80qJf72kvgoKZk
cf/bQ7K4/5lDu3lAslj/u/sS9edMm8Ri/bdaWuSr2pLF8T8zLepv7yV7tyWL
379nS4d8lCpkvSvZmpYO+bi70sFf8Idk8ffPs6THfM1Ij/lmp/SojzM5Perp
70iPekTXyWrmDKiHUSED9ben3ZuQAfmEWzMgvnI1A+Lr6suwW+9KFus/n0kW
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
aDUfeu3x81FPb8t81DO8KFm8/yfJAtj1txegP1bzBaiv65CDjQsQLz7H+drL
BcjPLLyQx38TyQn7xf1RtEfrFiKeemYh/Bv/SBbvfy+4CPXxzEXUP2IR+qWs
4Xj91CLEs56T3XyLoTdoSI6HLoY/beVi5GeeWEz9fy6GHl9bws9/PbI6mGws
J9tHl6C/3h+Sxe+/ci7F8afUkSx+/zBgKfxZS5aif+4hyeL8Hy+FnjjbMrBW
axnqZ/Zfhvo7C5ehXv7+ZdT/6zLkp2ZZzuO/OtnusxzzvXnLES8MyMp9sp7R
Y//f9VA/t6dH/Z96qE/8jQd/2l0P+ZjpV2C8U2UF7H63FehP5EoW63+7JYv9
f7cli/v/dCsTWdz/VZQs1r86r2T/Z5D1XSuh17opWdz/pFkFf0E5yWL/j7UK
+WnTVsGf+cUq9v9Hsp9yNfodlZYs7v/aSxbX/8mr4d/+nOz9QA5fWwNWSq6B
P73NGvTHmihZfP63koPL5PjVtZivFV+L+pktyc44sr95LeoZXViLfqqvrGP/
i65D/+xm66DHG7OO+jesgz/lnGRx///vOsS33lrP/n+wHvZgpGTx/pe1ZO30
esQz/+Z8p8AG6m+8AflGw2lXV2/AfOPkBtTDfiZZ7P/MuxHxwwYboVcZStZX
kK3jksXzrycbkU+QexOP/7pkbdAm6l+2CfVxjpD93zk+yrGZ/a8tWbz/4cNE
FuuD9mJpF88/DnJ++HAz9WfbArtecwvqafXbwv4vIAffbaH+B1vY/8yfIZ5Z
jez0lizWP+eSo2/J6j2y8eZWnv/e2Qo9Xo+t0BPOlizWP77heP1n+rPe8MFu
ZR/1D7qS45k+/Glfc775E8c7r2/DeL/CNtQv6kS7+sk25G/s3Eb9N7bBv5f6
c3BY9nPUT7HI+tTPqX8H57vXaQ9SbAfHpbbDn9ZOsnj++fF26HO2kf2r26Ev
SrYDdlXfgX4arcn2BI73PtuB+oWXdiBf5dUvMF4vRrZaSBb//2LsF/AXbCLH
57+gfuVL6DGLfInxTlPa/dFfIr9o/Zeon3qWbLyQLPZ/FtoJ9t7fifHhR7Qr
ayWL99+HO5Gf9ddO5OPm34V6B412wX88jKyt2oV6mt/vgj/n6S7E8/N8xeO/
Plkd8hXmG55ksf//GO3e46/Y/1xfw59S92vY9YFfI39rKdk9/DX6FTyivzj7
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
b/8tWex/LPAKOGwsWfz+ecQrmK+vliz0n5Qs9r8+kyzWP/ImAccNkmC8NlSy
6P8K2p3jksX635MkyDfK/Sr8q/Uki/1vgySL/T/LJIvnn0doD39/FfGVnEkT
Wbz/oDbZ+jAp4rmLk6L+wcGk0Bc/5HgtWzLoMWsmg93pJ1ms/y1Ihv5E33G8
+msy1MPI/BrYrvYa9Hm9aQ/nvgZ/SkC7fo/zrTeTIz/3Hcni+U+P5NAXz04O
f9o3yVFP82fJ4v8fvpGC/a8sOW+C/q4pqN+VLO7/v07B/v/E8d7rKZFvWCEl
xiudJYv9j5+kRD7WzpTI372REv6D1KlQn7hsKtRPsySL439qKuTj7EgFf/71
VKhPlCJ1Iies96qlU7P/7f5nT9D/Me3eNsni/UdXU0Of8lqaRE5YL9d1yWL9
q3Ua5OdOSIN6BJ+lYf8vcbz2aloe/8XSIj+nBdkfmxbzo02cr15Ii3obyus8
/ou8jvy9pq+jnuHo16l/A+frZznfevE69RdKx+P//XSoX/xROvZ/bTrMN8N0
8O/8lQ76/Pwqju+okYr+qcNVzDdWke3vJedN0P9UcsJfmOcNfv4bSE54f74+
RHLCer/lvYH57rH/cYL+x7THudLLfP4zX6ubHvmYA9OjPs7S9PDnH/4f/2d+
9Cg9+qXmyIDxxnsZUH/bzoB8vEUcHx7IwP4/lCzO/1nf5PWvhmTx/pe+b6Je
wXzJ4vO/T7JY/31ANjNlxPXdMSSL73+9MqI+0ZyM6Jf6bUb4M34h2xkywZ9X
VbJY/+meCfkqszPBv76HduuOZLH+q2ZGfkGlzKhf3CUz6qXNzEz9X2VGfZ1b
ksX6b9os6E9UPgv8qZ0ki/XP6Vngz/4yC/R4URbUO0yVNZHF/p+yWTFf75AV
+VpTJIv3f22XLL7/XZMs9n8kz8bzXynJ4v63bTbqnyRZfP/zsyFedCUb4qnJ
smO8USI7+98qO8Z747MjXriF45VLksX9b5IcqJf1dg74c5vnQL8CJwfyiTdK
Fue/8znQL/MlxzuFc7L/TSSL+59ROTFeXZ+T/T+Tk/r/yYn+egVzgUNTsvj9
90e062tyUf+pXMjHfZ6L/c+XG/Pjhrlh14ZJFvu/VtLunMiN/P0/aY80DceP
Wl+DP2OwZPH+3+Uc7x3VkH/4h8b+58oDu15Hsjj/DcgDfe6SPPAfHCLHcR7k
p2XPy+O/FtnpT/YXkqP9ksX6/2950T8jSz72v3o+5O/1IYfz8qG+yj7J4vnH
/Xyop5UxP/Jx3yUHPfNDb/ypZLH/cy/ZvMvxTvoCiSze/1GFHHUrgPqrswqg
HsbuAvBv3y4A/166grCHFQvCrnQpiHj6jIKor7WrIOrh3pQs7v/TFGL/yxVC
vlpHsjmtEPJ3vuB8/8dCiBelfIv6y7wFu9GednvyW9T/OTn8gawkL4z66CUL
Ix+rDdmdWBjxgq3k+DLHa0mL8PgvLll8/lsWQb39cUVQn2hzEeSrXiyCfI1X
irL/RYvCn9esKOKHY8jKRrJ+rijiWf8WZf/fehv24ANyPDKRxfMHbd3b1H+a
452/afcLFKP+xsWgTx1BNlYXw3z7ZDH0w3tWDPUO8xbn9b8hWR9anP1fQbt7
nBw8KY56x7lLsP/1yOagEqins6wE6uEfIUe/l6D+nDrPf7V15GN/SPYW6/AX
HuR8JeZ4PVtJfL6tmiWpv19JzA8WlIS++DvO136l3cxcCnqcaqWov3cpjI/m
lkI8NSiFfhr3ON5+szSvf+9IFuvfPUojnvJpaer/pjT6Y/0sWVz/3yiD60VQ
uQzmx13LUL9bBvmaX9Pu/FQG+vzXy8IeVSCrncsivvEJ2d5ZFvG8G7SHqctB
j1KuHMbrVjn2f2o59n8HObguWbz/OkV5XI+10uWpv115jHc+5nh/m+SE79PR
1fLIV32tAvXrFZCP3boC/HsTKsBf+FkF6r9cgfpfrQi7Vawi/LktJIv7/7EV
kX+8SXLCepJ2QbJY/1UqUX+RStDjN62EfKLRHK9uqIR4xtlKyNd+UQn5eYUq
Y3z4fmX4V0aS9bUcb4WV4c/9qzLyCfJXof5GVWDXhldB/c1VtDvfV0H//KdV
oCfKUzWRxfpHg6qYbwypSv1eVeTjHaM9fFwV+Si530lksf+7ruSE+xFr4DsY
7y59B/6Dw+8gn/gRWcvxLsab770LPY4tOeF48RdJTrifjg7Qrj58F/kaWQ34
t2sYyN/rayCfcL6B+Mp3ksXvnx8Y8G9lqgb/rlEN/oNeksX6x5xq8Kd9Ww35
m7/Q7mSoDvarShbPf7pXR3x1dnX2f49k8fz7TnX021Nr8PpfqQbmK11rsP8z
abe+qoF6ubcki+cfaWsmsvj9f/mayFfrJFkc/9NrIj/nS8ni+I9qIt8oVS1+
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
D/RLef1xIovff1cgW50eY747nRx8+Rj5xtFj6NFSP0lksf5T9gn8Ox2eIB9/
yhPUK9ouWax/XycbKf5EPLvUn4jntf0T8cJJZGWbZLH+cZVsJXsKf26Jp5gf
tCLH45+i/tpnksX6z6Wn7H+SZ7D7b5Oj5s/gXx37DHqNTc/gzz7/DPXxXtJf
WPg5jh+l6XPUXx/9nP1fT3bPPIe/4J/niBcX/Iuf//f/QjzzI8ni+dcayeL+
9xTHR8//Qn5q/r9x/BmN/kY8exjZW/k3+3+CduWpZLH/Nc8/6LdVX3LC+rI7
mPZguWTx/oujHK895ngz1wv0z6nzAvn5A15Q/5IXqLd6+AXyNx5JTvizs/+b
yAnr/V4tyeL9L/3JyiLJeRP0H/gX+Vm//Yv6u1le8viv/hL5xX1o1+a/RH7m
vpfQ59x/ifr4GZUHOP+9K1n0vxftxhzJ4vn/Xsni/veuZLH+m/6VB/8/P6Wq
5IT4eneyNUuyOP/vfgX5BLfJcbokiZxw/dAqSRbPP7skQXxnBu3+Lsni/U83
k1B/2lcf/P96G+Ul503Q31GyWP+b9irqFX7B+UpE1lMlTWTR/zJJ4d9tnxT5
BZOTQk/8eVL4067RbiZPhvo6JSWL5x9tkmF8NJGs+mTjSjL02076GvR6xV9D
PcKWr1H/eMli/XOLZLH/46Jk8fzvleTwFxRNzv43o11zyOZGyeL7z7nk7P+/
ksX1760UiK82SQG9xqgU7P+6FOz/6RTwH/6dAnqVgimhVzdTIp41IiX7v1qy
+P3PSY6Pn6WEPi1fKh7/DVOh/s5QyeL/H66QnPB9OjqeCvmqf6ZCPENLjX7b
9VJDjzcoNfyHyySL/V9HOV7/IzX150wDu1s7DeYHH0oW+18Xp0F/tENpkJ8Z
p0E+Tra0mO/XTEv9/WhXF5KN/WkRz/41LfLzMr+OeofVJIv73z5kfR7ZCiSL
9Z975ODNdNT/TjrUT+uZDvUzP02H/JxvyP7P5OgNlfqrqLAb3SSL67+rot7e
1yr7/xP9KeneoP6Kb8C/1VmyeP/BJ5LF/f/ON1D/+MYbiKelSQ//Zrn0mO9Y
6al/anrEi3ZIFus/P0oW+39TZvgvi/2Idmmy1y4D/IcfZ6D+zzNQ/w+Sxf6/
197k8a+/Sf2tyfGENxFP2/om6mFept15NSPm+8UyIl7UIiPqq47LyP5v5nj7
QkbUy1MywX9YJBPqpzTLhHrrYySL/Z8baHfPZoL/4EUm1DMulBl27YPMiG+O
zIx6O2tp90Ny9Fdm9FMtkAVsNM4CPfbwLNS/ivbwe7LyjKznzYr4VoOs1D+E
9sDLCj3xsazs/xOON3NnQzynbjbqH5gN/qKlHK8e4Xjjd9rtHNkTOeF5hPce
ObSzU//iRP7v/u+DZOsh2c2ag+f/GpLF+ndf2rUFOdAP8zvJYv3vQQ7qz5ST
n38jJ/X3Jhtzc6Je9rc5Ed/7JSfihxlyIZ7yTi6M13vkQn7W7Fzs/x7OD+7Q
Hqu5efxXzg1/ZtfcmO/MJPtf5ab+W7mRn/q6Br1GBbLdiexNT+T/vv/lS439
v6Ehvp46D+xW2Tywux0ki99/TMnD/m8na9fJZoq8qI9Tiuy3zYv8o0l5EV/d
xvHGVY63k+Xj579EPswPW+VDP5QJ+ZCf/lk+1Nu6RH9ukvw43wVv58f4uHl+
5KONzY9+mps43zmfn/pf5kd+UeECvP41LYD5xugC6Ie9XrK4/ztDDv+hP6VQ
QV7/3i+IelkfFYQ+d01B6j/F8fFzjtfyF+L5r1Eh9n9YIdTfX0l7dEKy+Pw/
pd3I8xavf/Uli/XPwW8hn3D5W6iHcoysP5Ys3v+cqzD8uXUki/1fAwqj/vGS
wtR/uDD8m4/ITvYi8O/XkizWf/uT1UVFEN84UAT+7N8ki/2fWYoiv7B6UcxX
+hal/vlkax/nu/eLov5BxrfhL36XrPUim3Mki/P/Xsli/+9dyWL9L30x2NWq
xVAPo7tk8fu/WRzv7S4GPeHtYqiPohZPZLH/tVJx+Le6FEf+7oziyC/YJVn8
/vmmZHH/m7YE2CwvWez/60i7P01y3gT9X5RAfmpUAvGNVDr82WV05O+11zE+
nKxT/3ayfk2HXit5SfhzS5bE+KBNSeQXTyyJ/DWf880rJaHXSVoK+fvFS8Ee
taRdHV+K+rfQbl8ke6+Uxuc5LCpZ3P83L414ulMa+VsbSyOee05ywvEV/Et7
/FYZHv9NyOaoMvDvrJMs9j+flizWf/4mqwXLYr5hlkX+9oiy1L+a9vBkWfb/
OVnPVw5sNSyH+rlDJYv9TyvK/U///wEoEawY
       "]]},
     Annotation[#, "Charting`Private`Tag#1"]& ]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{
    FormBox[
     TagBox["\"datum\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"temperatura\"", HoldForm], TraditionalForm]},
  AxesOrigin->{8.204544*^8, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{6.310656*^8, 
        FormBox[
         StyleBox["\"1920\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {1.2622176*^9, 
        FormBox[
         StyleBox["\"1940\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {1.8933696*^9, 
        FormBox[
         StyleBox["\"1960\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.5245216*^9, 
        FormBox[
         StyleBox["\"1980\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {4.4179776*^9, 
        FormBox[
         StyleBox["\"2040\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {6.310656*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {7.889184*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.1044512*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.4200704*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.5778368*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.7356032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.0512224*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.2089888*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.3667552*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.8401408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {4.1024448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {4.2602112*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {4.4179776*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{6.310656*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {4.4179776*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {6.310656*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {7.889184*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.1044512*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.4200704*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.5778368*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.7356032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.0512224*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.2089888*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.3667552*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.8401408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {4.1024448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {4.2602112*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {4.4179776*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& )}},
  PlotLabel->FormBox["\"Graf temperatur\"", TraditionalForm],
  PlotRange->{{8.204544*^8, 3.7867392*^9}, {-8., 38.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.920557871172686*^9, {3.9303042259882245`*^9, 3.930304229969122*^9}, 
   3.9303043618282967`*^9, 3.9303044507963667`*^9, 3.930304593439413*^9, {
   3.9303046275773535`*^9, 3.930304664985619*^9}, {3.9303049158653235`*^9, 
   3.930304934426174*^9}, {3.930305143913802*^9, 3.9303051877561755`*^9}, {
   3.9303053200574684`*^9, 3.930305375299013*^9}, {3.932526203735988*^9, 
   3.932526275626501*^9}, {3.932526473855691*^9, 3.9325264953422604`*^9}, 
   3.932526694806386*^9, 3.9325267308710933`*^9, {3.9325267995724*^9, 
   3.9325268158439984`*^9}, {3.9325268489682755`*^9, 3.9325268577984085`*^9}, 
   3.93252696574422*^9, {3.932527226247427*^9, 3.9325272473281727`*^9}, 
   3.932527291853053*^9, 3.9325273404308767`*^9, 3.9325274536588154`*^9, {
   3.932867388065341*^9, 3.932867437882292*^9}, {3.9328674967542877`*^9, 
   3.9328675240102406`*^9}, 3.9328676100573497`*^9, {3.93286765633497*^9, 
   3.9328676861740417`*^9}, {3.932867826971655*^9, 3.932867843076426*^9}, {
   3.9328684506657753`*^9, 3.932868475089347*^9}, 3.9328685134343557`*^9, 
   3.932869408447324*^9, 3.9328699324425564`*^9, {3.9328699846570272`*^9, 
   3.9328699924964237`*^9}, {3.9328702403680243`*^9, 3.9328702617259674`*^9}, 
   3.9328703544772844`*^9, {3.932870408470624*^9, 3.932870443435993*^9}, 
   3.9328705011257725`*^9, 3.932870593231829*^9, 3.9328707913305283`*^9, 
   3.932870848409088*^9, 3.932870908642969*^9, 3.9329756845995245`*^9, 
   3.9338200691140537`*^9, 3.9338251895445604`*^9, 3.9338256009931173`*^9, 
   3.933825898553578*^9, 3.9338261589891987`*^9, 3.9339037838059273`*^9, 
   3.9339124992243547`*^9, 3.933912859811907*^9, 3.933913392123658*^9, 
   3.9339151146052637`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"6d70dbe5-8598-4a63-8bd5-17a1e35405c2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Pregled ekstremov po\[ZHacek]arov iz tega obdobja (najve\[CHacek]je/najmanj\
\[SHacek]e \[SHacek]tevilo po\[ZHacek]arov...).\
\>", "Section",
 CellChangeTimes->{{3.9328679641211557`*^9, 
  3.9328680458724146`*^9}},ExpressionUUID->"1bf40e58-01cb-4ba0-a4ff-\
5630ba5a0725"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"max\[CapitalSHacek]t", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#Fires", "==", 
        RowBox[{"Max", "[", "\[SHacek]tpo\[ZHacek]arov", "]"}]}], "&"}], 
      "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
  "max\[CapitalSHacek]t", ",", "\"\<Najve\[CHacek] po\[ZHacek]arov\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min\[CapitalSHacek]t", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#Fires", "==", 
        RowBox[{"Min", "[", "\[SHacek]tpo\[ZHacek]arov", "]"}]}], "&"}], 
      "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{"min\[CapitalSHacek]t", ",", "\"\<najmanj po\[ZHacek]arov\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPov", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#Acres", "==", 
        RowBox[{"Max", "[", "pogorenaPovr\[SHacek]ina", "]"}]}], "&"}], "]"}],
      "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{"maxPov", ",", "\"\<najve\[CHacek] pogorene povr\[SHacek]ine\>\""}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minPov", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#Acres", "==", 
        RowBox[{"Min", "[", "pogorenaPovr\[SHacek]ina", "]"}]}], "&"}], "]"}],
      "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{"minPov", ",", "\"\<najmanj pogorene povr\[SHacek]ine\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxVel", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"MaximalBy", "[", 
      RowBox[{
       RowBox[{"povr\[SHacek]inaNaPo\[ZHacek]ar", "[", 
        RowBox[{"#Acres", ",", "#Fires"}], "]"}], "&"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
   "maxVel", ",", 
    "\"\<povpre\[CHacek]no najve\[CHacek]ji po\[ZHacek]ari\>\""}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.932868047149122*^9, {3.9328680892892447`*^9, 3.9328681245414295`*^9}, {
   3.9328681955938025`*^9, 3.932868275881403*^9}, {3.9328685355127635`*^9, 
   3.93286859737279*^9}, {3.9328686277129216`*^9, 3.932868660143921*^9}, {
   3.9328688252418685`*^9, 3.9328688625848155`*^9}, {3.9328690212649407`*^9, 
   3.9328691310721397`*^9}, 3.9328693290100727`*^9, {3.9328694470810056`*^9, 
   3.9328695896647787`*^9}, 3.932869683735078*^9, {3.9328700879197283`*^9, 
   3.9328700912553744`*^9}, {3.9329757078786*^9, 3.9329757918693447`*^9}, {
   3.932975826769147*^9, 3.9329758350849204`*^9}, {3.932975896332058*^9, 
   3.9329761171927457`*^9}, {3.933820111663495*^9, 3.9338201333423862`*^9}, {
   3.933821457381666*^9, 3.933821463557166*^9}, {3.933824504836116*^9, 
   3.93382450567587*^9}, {3.9339152784917765`*^9, 3.9339153163416643`*^9}, {
   3.9339156296214447`*^9, 3.933915664582403*^9}, {3.9339156965254097`*^9, 
   3.933915749253398*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"73c60815-483f-42e1-bfff-2394a956faf0"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Year" -> DateObject[{1981}, "Year", "Gregorian", -5.], "Fires" -> 
            249370, "Acres" -> 4814206|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Path" -> {}, 
         "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, 
         "DataRowCount" -> 1, "DataColumnCount" -> 3, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Year", 
                    Style[
                    "Year", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Year"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Year"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Fires", 
                    Style[
                    "Fires", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Fires"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Fires"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acres", 
                    Style[
                    "Acres", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acres"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acres"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"1981\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Year"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["249370"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Fires"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4814206"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acres"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {197., {32.634033098001964`, 38.365966901998036`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {197., {32.634033098001964`, 38.365966901998036`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"], 
    Dataset`InterpretDataset[1], Editable -> False, SelectWithContents -> 
    True, Selectable -> False], "\"Najve\[CHacek] po\[ZHacek]arov\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.932869532803877*^9, {3.9328695900936327`*^9, 3.9328696159814034`*^9}, 
   3.9329760053289337`*^9, {3.932976055907177*^9, 3.93297611851521*^9}, 
   3.933820084936676*^9, 3.9338201360154343`*^9, 3.933821471426483*^9, 
   3.9338252135533953`*^9, 3.9339131492472935`*^9, 3.933915118060738*^9, 
   3.9339152826134644`*^9, 3.9339153174276085`*^9, 3.933915660543171*^9, 
   3.933915750088468*^9, 3.9339204502107887`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"2e7543c2-9cd2-4485-93ef-1f71e0e864f7"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Year" -> DateObject[{1983}, "Year", "Gregorian", -5.], "Fires" -> 
            18229, "Acres" -> 1323666|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Path" -> {}, 
         "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, 
         "DataRowCount" -> 1, "DataColumnCount" -> 3, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Year", 
                    Style[
                    "Year", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Year"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Year"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Fires", 
                    Style[
                    "Fires", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Fires"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Fires"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acres", 
                    Style[
                    "Acres", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acres"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acres"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"1983\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Year"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["18229"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Fires"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1323666"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acres"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {190., {32.634033098001964`, 38.365966901998036`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {190., {32.634033098001964`, 38.365966901998036`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"], 
    Dataset`InterpretDataset[1], Editable -> False, SelectWithContents -> 
    True, Selectable -> False], "\"najmanj po\[ZHacek]arov\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.932869532803877*^9, {3.9328695900936327`*^9, 3.9328696159814034`*^9}, 
   3.9329760053289337`*^9, {3.932976055907177*^9, 3.93297611851521*^9}, 
   3.933820084936676*^9, 3.9338201360154343`*^9, 3.933821471426483*^9, 
   3.9338252135533953`*^9, 3.9339131492472935`*^9, 3.933915118060738*^9, 
   3.9339152826134644`*^9, 3.9339153174276085`*^9, 3.933915660543171*^9, 
   3.933915750088468*^9, 3.9339204503374805`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"e8aea0d4-9bd9-4137-ac8d-69e961a3b660"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Year" -> DateObject[{1930}, "Year", "Gregorian", -5.], "Fires" -> 
            190980, "Acres" -> 52266000|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Path" -> {}, 
         "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, 
         "DataRowCount" -> 1, "DataColumnCount" -> 3, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Year", 
                    Style[
                    "Year", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Year"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Year"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Fires", 
                    Style[
                    "Fires", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Fires"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Fires"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acres", 
                    Style[
                    "Acres", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acres"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acres"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"1930\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Year"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["190980"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Fires"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["52266000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acres"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {204., {32.634033098001964`, 38.365966901998036`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {204., {32.634033098001964`, 38.365966901998036`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"], 
    Dataset`InterpretDataset[1], Editable -> False, SelectWithContents -> 
    True, Selectable -> False], 
   "\"najve\[CHacek] pogorene povr\[SHacek]ine\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.932869532803877*^9, {3.9328695900936327`*^9, 3.9328696159814034`*^9}, 
   3.9329760053289337`*^9, {3.932976055907177*^9, 3.93297611851521*^9}, 
   3.933820084936676*^9, 3.9338201360154343`*^9, 3.933821471426483*^9, 
   3.9338252135533953`*^9, 3.9339131492472935`*^9, 3.933915118060738*^9, 
   3.9339152826134644`*^9, 3.9339153174276085`*^9, 3.933915660543171*^9, 
   3.933915750088468*^9, 3.933920450475112*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"9afd4cf6-5bd3-47a2-b482-3b441e5cfd5a"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Year" -> DateObject[{1984}, "Year", "Gregorian", -5.], "Fires" -> 
            20493, "Acres" -> 1148409|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Path" -> {}, 
         "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, 
         "DataRowCount" -> 1, "DataColumnCount" -> 3, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Year", 
                    Style[
                    "Year", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Year"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Year"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Fires", 
                    Style[
                    "Fires", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Fires"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Fires"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acres", 
                    Style[
                    "Acres", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acres"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acres"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"1984\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Year"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20493"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Fires"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1148409"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acres"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {190., {32.634033098001964`, 38.365966901998036`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {190., {32.634033098001964`, 38.365966901998036`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"], 
    Dataset`InterpretDataset[1], Editable -> False, SelectWithContents -> 
    True, Selectable -> False], "\"najmanj pogorene povr\[SHacek]ine\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.932869532803877*^9, {3.9328695900936327`*^9, 3.9328696159814034`*^9}, 
   3.9329760053289337`*^9, {3.932976055907177*^9, 3.93297611851521*^9}, 
   3.933820084936676*^9, 3.9338201360154343`*^9, 3.933821471426483*^9, 
   3.9338252135533953`*^9, 3.9339131492472935`*^9, 3.933915118060738*^9, 
   3.9339152826134644`*^9, 3.9339153174276085`*^9, 3.933915660543171*^9, 
   3.933915750088468*^9, 3.933920450607757*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a6f7f1e6-9ac7-4fd7-a27f-5e3649aaecda"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "Year" -> DateObject[{1929}, "Year", "Gregorian", -5.], "Fires" -> 
            134895, "Acres" -> 46230000|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Year"} -> 
            1, {All, "Fires"} -> 1, {All, "Acres"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Year" -> TypeSystem`PackageScope`AtomShape[75], "Fires" -> 
                TypeSystem`PackageScope`AtomShape[34], "Acres" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Year", "Fires", "Acres"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 1], "Path" -> {}, 
         "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, 
         "DataRowCount" -> 1, "DataColumnCount" -> 3, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Year", 
                    Style[
                    "Year", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Year"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Year"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Fires", 
                    Style[
                    "Fires", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Fires"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Fires"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acres", 
                    Style[
                    "Acres", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acres"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acres"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"1929\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Year"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["134895"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Fires"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["46230000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acres"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {204., {32.634033098001964`, 38.365966901998036`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {204., {32.634033098001964`, 38.365966901998036`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"], 
    Dataset`InterpretDataset[1], Editable -> False, SelectWithContents -> 
    True, Selectable -> False], 
   "\"povpre\[CHacek]no najve\[CHacek]ji po\[ZHacek]ari\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.932869532803877*^9, {3.9328695900936327`*^9, 3.9328696159814034`*^9}, 
   3.9329760053289337`*^9, {3.932976055907177*^9, 3.93297611851521*^9}, 
   3.933820084936676*^9, 3.9338201360154343`*^9, 3.933821471426483*^9, 
   3.9338252135533953`*^9, 3.9339131492472935`*^9, 3.933915118060738*^9, 
   3.9339152826134644`*^9, 3.9339153174276085`*^9, 3.933915660543171*^9, 
   3.933915750088468*^9, 3.933920450737379*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"db859137-8298-4078-95e7-500c0bbf2a72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"46230000", "/", "134895"}], "//", "N"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9338209289607134`*^9, 3.9338209788681526`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"25082115-5742-4e04-96e0-d01d97ab77aa"],

Cell[BoxData["342.71099744245527`"], "Output",
 CellChangeTimes->{{3.9338209487044573`*^9, 3.933820979713619*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"923d6602-5d97-4626-8fd0-1838a2f41208"]
}, Open  ]],

Cell["\<\
Ugotovimo, da je bilo najve\[CHacek] po\[ZHacek]arov leta 1981 s kar 249370 \
po\[ZHacek]ari. Najmanj pa le 2 leti kasneje, in sicer leta 1983 s 18229 po\
\[ZHacek]ari.
Ugotovimo tudi, da je najve\[CHacek] povr\[SHacek]ine pogorelo leta 1930 s \
52266000 akri pogorele povr\[SHacek]ine. Najmanj pa leta 1984 s 1148409 akri \
pogorele povr\[SHacek]ine.
Iz tega lahko vidimo, da najve\[CHacek]je \[SHacek]tevilo po\[ZHacek]arov ne \
pomeni hkrati tudi najve\[CHacek] pogorele povr\[SHacek]ine. Zato sem \
preveril tudi najve\[CHacek]jo povpre\[CHacek]no velikost po\[ZHacek]arov. 
Najve\[CHacek]ja povpre\[CHacek]na velikost po\[ZHacek]arov je bila leta 1929 \
s 134895 po\[ZHacek]ari ter 46230000 akri pogorene povr\[SHacek]ine. To je \
povpre\[CHacek]no 342.711 akrov pogorele povr\[SHacek]ine na po\[ZHacek]ar.
\
\>", "Text",
 CellChangeTimes->{{3.93382014122552*^9, 3.933820263029215*^9}, {
  3.933820518388439*^9, 3.9338205655404077`*^9}, {3.9338206674377227`*^9, 
  3.9338206681089187`*^9}, {3.933820708413097*^9, 3.9338209124681864`*^9}, {
  3.933820990612901*^9, 3.9338210212926598`*^9}, {3.934027846862605*^9, 
  3.9340278630762343`*^9}, {3.9340278958825884`*^9, 
  3.9340279282197046`*^9}},ExpressionUUID->"c3858421-03dc-416c-8825-\
14291840610d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.93286950335133*^9, 3.9328695071512794`*^9}, 
   3.9328696111123047`*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"c8fcd3cd-c292-40be-9ec3-bd25ca940f2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ra\[CHacek]unanje povpre\[CHacek]nih vrednosti", "Section",
 CellChangeTimes->{{3.9338210331921945`*^9, 
  3.933821062228125*^9}},ExpressionUUID->"e7c1b861-9830-4dcb-9b6b-\
bcfdc40c26e8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"se\[SHacek]tevekPo\[ZHacek]arov", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<Fires\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]noPo\[ZHacek]arov", "=", 
  RowBox[{
   RowBox[{
   "se\[SHacek]tevekPo\[ZHacek]arov", "/", "\[SHacek]teviloPodatkov"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekPovr\[SHacek]ine", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<Acres\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]noPovr\[SHacek]ine", "=", 
  RowBox[{
   RowBox[{
   "se\[SHacek]tevekPovr\[SHacek]ine", "/", "\[SHacek]teviloPodatkov"}], "//",
    "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"se\[SHacek]tevekVelikosti", "=", 
  RowBox[{"podatki", "//", 
   RowBox[{"Query", "[", 
    RowBox[{"Total", ",", 
     RowBox[{
      RowBox[{"povr\[SHacek]inaNaPo\[ZHacek]ar", "[", 
       RowBox[{"#Acres", ",", "#Fires"}], "]"}], "&"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]naVelikost", "=", 
  RowBox[{
   RowBox[{"se\[SHacek]tevekVelikosti", "/", "\[SHacek]teviloPodatkov"}], "//",
    "N"}]}]}], "Input",
 CellChangeTimes->{{3.9338210637684345`*^9, 3.9338211374295406`*^9}, {
   3.9338212096612177`*^9, 3.9338212131617966`*^9}, {3.933821266525543*^9, 
   3.933821365373247*^9}, 3.9338214025638466`*^9, {3.933821479668582*^9, 
   3.9338215643092933`*^9}, {3.933821594709884*^9, 3.933821643331879*^9}, {
   3.9338216932053995`*^9, 3.9338217818847294`*^9}, {3.9338225040436964`*^9, 
   3.933822632723978*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"dc21b767-2a20-4d68-b471-9cabd2bb5553"],

Cell[BoxData["124499.98936170213`"], "Output",
 CellChangeTimes->{
  3.933821221088609*^9, 3.9338212731222396`*^9, {3.933821325702903*^9, 
   3.933821339755604*^9}, {3.933821485803753*^9, 3.9338215226120863`*^9}, {
   3.933821554850008*^9, 3.9338215646344147`*^9}, {3.933821595044936*^9, 
   3.9338216351976376`*^9}, {3.9338217445224924`*^9, 
   3.9338217821949005`*^9}, {3.933822569699175*^9, 3.9338225962324595`*^9}, 
   3.9338226330417023`*^9, 3.9339134117054586`*^9, 3.93391513155254*^9, 
   3.9339204769351325`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"cbe73e6f-c755-4364-887f-dbd4dea02f23"],

Cell[BoxData["1.2062963`*^7"], "Output",
 CellChangeTimes->{
  3.933821221088609*^9, 3.9338212731222396`*^9, {3.933821325702903*^9, 
   3.933821339755604*^9}, {3.933821485803753*^9, 3.9338215226120863`*^9}, {
   3.933821554850008*^9, 3.9338215646344147`*^9}, {3.933821595044936*^9, 
   3.9338216351976376`*^9}, {3.9338217445224924`*^9, 
   3.9338217821949005`*^9}, {3.933822569699175*^9, 3.9338225962324595`*^9}, 
   3.9338226330417023`*^9, 3.9339134117054586`*^9, 3.93391513155254*^9, 
   3.9339204769451036`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"a39ec885-734c-45ff-92e1-9105648f3fb0"],

Cell[BoxData["8436.143340248553`"], "Output",
 CellChangeTimes->{
  3.933821221088609*^9, 3.9338212731222396`*^9, {3.933821325702903*^9, 
   3.933821339755604*^9}, {3.933821485803753*^9, 3.9338215226120863`*^9}, {
   3.933821554850008*^9, 3.9338215646344147`*^9}, {3.933821595044936*^9, 
   3.9338216351976376`*^9}, {3.9338217445224924`*^9, 
   3.9338217821949005`*^9}, {3.933822569699175*^9, 3.9338225962324595`*^9}, 
   3.9338226330417023`*^9, 3.9339134117054586`*^9, 3.93391513155254*^9, 
   3.9339204769480963`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"8ca7ffb6-8789-460c-a098-a8a02fe21716"],

Cell[BoxData["89.74620574732502`"], "Output",
 CellChangeTimes->{
  3.933821221088609*^9, 3.9338212731222396`*^9, {3.933821325702903*^9, 
   3.933821339755604*^9}, {3.933821485803753*^9, 3.9338215226120863`*^9}, {
   3.933821554850008*^9, 3.9338215646344147`*^9}, {3.933821595044936*^9, 
   3.9338216351976376`*^9}, {3.9338217445224924`*^9, 
   3.9338217821949005`*^9}, {3.933822569699175*^9, 3.9338225962324595`*^9}, 
   3.9338226330417023`*^9, 3.9339134117054586`*^9, 3.93391513155254*^9, 
   3.9339204769520855`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d611375b-d671-42d1-b6e0-30b4aab035ee"]
}, Open  ]],

Cell["\<\
Izvemo, da je povpre\[CHacek]no \[SHacek]tevilo po\[ZHacek]arov na leto \
pribli\[ZHacek]no 124500.
Povpre\[CHacek]na pogorena povr\[SHacek]ina na leto pa je 1.2063*10^7 akrov. 
Povpre\[CHacek]na velikost po\[ZHacek]ara pa je 89.7462 akrov na po\[ZHacek]ar.
Iz zgornjih grafov je razvidno, da sta plo\[SHacek]\[CHacek]ina pogorele povr\
\[SHacek]ine in povpre\[CHacek]na velikost po\[ZHacek]arov na leto \
eksponentno padali. 
To verjetno lahko pripi\[SHacek]emo bolj\[SHacek]i zavednosti za varnost pred \
po\[ZHacek]ari ter napredku tehnologije.
Vendar zaradi tega te \[SHacek]tevilke ne predstavljajo realnega stanja za \
bli\[ZHacek]njo preteklost, ker stari podatki vi\[SHacek]ajo povpre\[CHacek]je.
Zato sem preveril \[SHacek]e vse povpre\[CHacek]ne vrednosti za obdobje \
1926-1970 in obdobje 1971-2019.
\
\>", "Text",
 CellChangeTimes->{{3.9338218442565594`*^9, 3.9338219350527086`*^9}, {
   3.933822251459339*^9, 3.9338224938920197`*^9}, {3.9338226399954205`*^9, 
   3.9338226618834977`*^9}, {3.933822694363901*^9, 3.933822797515335*^9}, 
   3.933822858306647*^9, {3.9339205015698457`*^9, 3.933920501931416*^9}, {
   3.934027943924677*^9, 
   3.9340279724188156`*^9}},ExpressionUUID->"2037cafa-94d7-4818-bb24-\
0636e0288e4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"podatkiStari", "=", 
   RowBox[{"podatki", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"1970", ">=", 
        RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", "#Year", "]"}]}], " ", 
       "&"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"podatkiNovi", "=", 
    RowBox[{"podatki", "//", 
     RowBox[{"Query", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", "#Year", "]"}], ">", 
         "1970"}], " ", "&"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"letnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"\[SHacek]tpo\[ZHacek]arov", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"1970", "-", "1926"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Graf \[SHacek]tevila po\[ZHacek]arov 1926-1970\>\""}], ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<leto\>\"", ",", "\"\<\[SHacek]tevilo po\[ZHacek]arov\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"letnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"pogorenaPovr\[SHacek]ina", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"1970", "-", "1926"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Graf pogorele povr\[SHacek]ine 1926-1970\>\""}], 
   ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<leto\>\"", ",", "\"\<Pogorela povr\[SHacek]ina (v hektarjih)\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"letnice", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"pogorenaPovr\[SHacek]ina", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/", 
          RowBox[{"\[SHacek]tpo\[ZHacek]arov", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "//", "N"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"1970", "-", "1926"}]}], "}"}]}], "]"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Graf povpre\[CHacek]ne velikosti po\[ZHacek]arov 1926-1970\>\""}], 
    ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<leto\>\"", ",", 
       "\"\<Povpre\[CHacek]no pogorena povr\[SHacek]ina na po\[ZHacek]ar (v \
hektarjih)\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"letnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"\[SHacek]tpo\[ZHacek]arov", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"1970", "-", "1926", "+", "1"}], ",", 
       "\[SHacek]teviloPodatkov"}], "}"}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Graf \[SHacek]tevila po\[ZHacek]arov 1971-2019\>\""}], ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<leto\>\"", ",", "\"\<\[SHacek]tevilo po\[ZHacek]arov\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"letnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"pogorenaPovr\[SHacek]ina", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"1970", "-", "1926", "+", "1"}], ",", 
       "\[SHacek]teviloPodatkov"}], "}"}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Graf pogorele povr\[SHacek]ine 1971-2019\>\""}], 
   ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<leto\>\"", ",", "\"\<Pogorela povr\[SHacek]ina (v hektarjih)\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"letnice", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"pogorenaPovr\[SHacek]ina", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/", 
         RowBox[{"\[SHacek]tpo\[ZHacek]arov", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "//", "N"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"1970", "-", "1926", "+", "1"}], ",", 
       "\[SHacek]teviloPodatkov"}], "}"}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Graf povpre\[CHacek]ne velikosti po\[ZHacek]arov 1971-2019\>\""}], 
   ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<leto\>\"", ",", 
      "\"\<Povpre\[CHacek]no pogorena povr\[SHacek]ina na po\[ZHacek]ar (v \
hektarjih)\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9338228599921703`*^9, 3.9338228765794415`*^9}, {
   3.9338229094837074`*^9, 3.933823013899704*^9}, {3.933823125675973*^9, 
   3.9338231629880037`*^9}, {3.933823199652137*^9, 3.9338232039474916`*^9}, {
   3.9338252250106506`*^9, 3.9338252608739123`*^9}, {3.9338253005463386`*^9, 
   3.933825336610026*^9}, {3.9338255299862022`*^9, 3.93382554061808*^9}, {
   3.933825650787246*^9, 3.9338257523218775`*^9}, 3.9338259450752583`*^9, {
   3.933825978137596*^9, 3.933826011930826*^9}, {3.9338260954354324`*^9, 
   3.9338261308172874`*^9}, {3.933826646155724*^9, 3.9338267094504156`*^9}, 
   3.9339205312130127`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"cf91ac8a-3da5-4c71-9c1d-67b8b6aefea9"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJwt0i9IA2EYx/HXOT3/gnHBcIJhwoQFw4LCiYYFwUMEFRaGKEwRPFBwgmGo
iEFhQVCYqEFwYWHBsGBQMBi1iSs2Fw3+mZyKbt/fwfHy4Tme53l/XM/s8sR8
wBgT+X9rZ/0JnTi1o2vho36abhydahyu28av6024F6fXDA5j27VwBHtPzTiK
q+NBPICz/Q04hmNlzRvEcVt1B6dO2/EovsupfxyHZzrwmOa9t2IXh8rabxIX
ky14Gt8v6vuE6gU5iStB3XcOZ1Z+ySul7y3ls6T5m+rvaf8R1VeVz4X2SSsP
T/M2tI+lvDI47+u+25r/EMC7+PFQ/ffwc0n5ZbX/lnyATeKN8wgnXz7xsbz/
hc90vyH5HLudVZzX/9P3jQu41Kb9i+qXUv0SOzc+LsmVH3ylfjvK91rzc/Kt
8iv4zh9HHYAq
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJwt0i9IA2EYx/HXOT3/gnHBcIJhwoQFw4LCiYYFwUMEFRaGKEwRPFBwgmGo
iEFhQVCYqEFwYWHBsGBQMBi1iSs2Fw3+mZyKbt/fwfHy4Tme53l/XM/s8sR8
wBgT+X9rZ/0JnTi1o2vho36abhydahyu28av6024F6fXDA5j27VwBHtPzTiK
q+NBPICz/Q04hmNlzRvEcVt1B6dO2/EovsupfxyHZzrwmOa9t2IXh8rabxIX
ky14Gt8v6vuE6gU5iStB3XcOZ1Z+ySul7y3ls6T5m+rvaf8R1VeVz4X2SSsP
T/M2tI+lvDI47+u+25r/EMC7+PFQ/ffwc0n5ZbX/lnyATeKN8wgnXz7xsbz/
hc90vyH5HLudVZzX/9P3jQu41Kb9i+qXUv0SOzc+LsmVH3ylfjvK91rzc/Kt
8iv4zh9HHYAq
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1925.104166666671, 1969.}, {0, 232229.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1925.104166666671, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1925.104166666671, 1969.}, {0, 232229.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1925.104166666671, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{327.2923988698802, 
       421.88426354614256`}, {-83.12985852752146, -40.65633283638627}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJwt0i9IA2EYx/HXOT3/gnHBcIJhwoQFw4LCiYYFwUMEFRaGKEwRPFBwgmGo
iEFhQVCYqEFwYWHBsGBQMBi1iSs2Fw3+mZyKbt/fwfHy4Tme53l/XM/s8sR8
wBgT+X9rZ/0JnTi1o2vho36abhydahyu28av6024F6fXDA5j27VwBHtPzTiK
q+NBPICz/Q04hmNlzRvEcVt1B6dO2/EovsupfxyHZzrwmOa9t2IXh8rabxIX
ky14Gt8v6vuE6gU5iStB3XcOZ1Z+ySul7y3ls6T5m+rvaf8R1VeVz4X2SSsP
T/M2tI+lvDI47+u+25r/EMC7+PFQ/ffwc0n5ZbX/lnyATeKN8wgnXz7xsbz/
hc90vyH5HLudVZzX/9P3jQu41Kb9i+qXUv0SOzc+LsmVH3ylfjvK91rzc/Kt
8iv4zh9HHYAq
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1925.104166666671, 1969.}, {0, 232229.}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1925.104166666671, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[SHacek]tevilo po\[ZHacek]arov\"", HoldForm], 
     TraditionalForm]},
  AxesOrigin->{1925.104166666671, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graf \[SHacek]tevila po\[ZHacek]arov 1926-1970\"", TraditionalForm],
  PlotRange->{{1925.104166666671, 1969.}, {0, 232229.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9338229848034735`*^9, 3.93382301443727*^9}, 
   3.93382316352672*^9, 3.9338232049106736`*^9, {3.9338252335097847`*^9, 
   3.9338252480365086`*^9}, 3.933825311045189*^9, {3.9338257421506424`*^9, 
   3.933825752763693*^9}, 3.933825906198682*^9, 3.9338260133839006`*^9, 
   3.933826172833062*^9, 3.933826646717227*^9, 3.9338267143620625`*^9, 
   3.9339134148445363`*^9, 3.933915137120854*^9, {3.9339205188923855`*^9, 
   3.9339205332650414`*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"0b58fc0c-c919-488f-a562-b7e4d8531abb"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJwt0U0og3EcwPFZIilyUEteppY2DU9xUFOe1QpLNnKwaBYjC221xVablq21
ww5TK69JWUuSHCjFYYVcxIkUBzk5eMnFTbHn+3/q6enT9/f717+nccI7NKVW
qVTG/7fwVR7Ntlz4JKRFs+JaxfnI+DLWKo62XcSxDtvKE1iPte9JbGT/cFNY
wtkKsd/B/P6HcKdiueY7hrvoRZ9hLLNv3RDzFnrgJ4B76bcNUdxPfyiLYDv3
S+WCeJiebA3hEfqTawmP0W/uhV30lbQXu+m5Zx+ewbEzP55j3tO0gH04lBH7
AVzlnMdBvLsuHMaGtBtHcXflLI5jTekkTuLfRxdO4ddrJ05jY7sDZ7C+2IrX
sFzSh7ewdGLDO9hUPYiz3LeuuQfv0VfrxfwBfjGM4iP+75fajo/pbyYLPqW3
+MX555w/fSWcZ/5OJ/YvmR+IO8x/S9yLfg==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJwt0U0og3EcwPFZIilyUEteppY2DU9xUFOe1QpLNnKwaBYjC221xVablq21
ww5TK69JWUuSHCjFYYVcxIkUBzk5eMnFTbHn+3/q6enT9/f717+nccI7NKVW
qVTG/7fwVR7Ntlz4JKRFs+JaxfnI+DLWKo62XcSxDtvKE1iPte9JbGT/cFNY
wtkKsd/B/P6HcKdiueY7hrvoRZ9hLLNv3RDzFnrgJ4B76bcNUdxPfyiLYDv3
S+WCeJiebA3hEfqTawmP0W/uhV30lbQXu+m5Zx+ewbEzP55j3tO0gH04lBH7
AVzlnMdBvLsuHMaGtBtHcXflLI5jTekkTuLfRxdO4ddrJ05jY7sDZ7C+2IrX
sFzSh7ewdGLDO9hUPYiz3LeuuQfv0VfrxfwBfjGM4iP+75fajo/pbyYLPqW3
+MX555w/fSWcZ/5OJ/YvmR+IO8x/S9yLfg==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1925.104166666671, 1969.}, {0, 5.2266*^7}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1925.104166666671, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1925.104166666671, 1969.}, {0, 5.2266*^7}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1925.104166666671, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJwt0U0og3EcwPFZIilyUEteppY2DU9xUFOe1QpLNnKwaBYjC221xVablq21
ww5TK69JWUuSHCjFYYVcxIkUBzk5eMnFTbHn+3/q6enT9/f717+nccI7NKVW
qVTG/7fwVR7Ntlz4JKRFs+JaxfnI+DLWKo62XcSxDtvKE1iPte9JbGT/cFNY
wtkKsd/B/P6HcKdiueY7hrvoRZ9hLLNv3RDzFnrgJ4B76bcNUdxPfyiLYDv3
S+WCeJiebA3hEfqTawmP0W/uhV30lbQXu+m5Zx+ewbEzP55j3tO0gH04lBH7
AVzlnMdBvLsuHMaGtBtHcXflLI5jTekkTuLfRxdO4ddrJ05jY7sDZ7C+2IrX
sFzSh7ewdGLDO9hUPYiz3LeuuQfv0VfrxfwBfjGM4iP+75fajo/pbyYLPqW3
+MX555w/fSWcZ/5OJ/YvmR+IO8x/S9yLfg==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1925.104166666671, 1969.}, {0, 5.2266*^7}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1925.104166666671, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Pogorela povr\[SHacek]ina (v hektarjih)\"", HoldForm], 
     TraditionalForm]},
  AxesOrigin->{1925.104166666671, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graf pogorele povr\[SHacek]ine 1926-1970\"", TraditionalForm],
  PlotRange->{{1925.104166666671, 1969.}, {0, 5.2266*^7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9338229848034735`*^9, 3.93382301443727*^9}, 
   3.93382316352672*^9, 3.9338232049106736`*^9, {3.9338252335097847`*^9, 
   3.9338252480365086`*^9}, 3.933825311045189*^9, {3.9338257421506424`*^9, 
   3.933825752763693*^9}, 3.933825906198682*^9, 3.9338260133839006`*^9, 
   3.933826172833062*^9, 3.933826646717227*^9, 3.9338267143620625`*^9, 
   3.9339134148445363`*^9, 3.933915137120854*^9, {3.9339205188923855`*^9, 
   3.933920533316902*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"6db8e1a2-ad5c-4641-896a-2cb87a904b36"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJwt0H9Ik1EUBuCVrFqaGkKUKyqbUrAoajFZOd85I9kKZFsksdqa1QauudWi
VSMs5jIwyVbQYB2zFq4mJlExocZK+4FBkQsJwRhkQmEqg+iPEFqe78Lh8vBe
7jmc9bZmw7GFIpFInqv/9/xZSZhNK6ftHW7MezUhXuNyyI+72OsIiS/is49n
BMsIm/rG1Nam0+yNhKIHo2sGSz1sOWHImTYHVYK3Eh52+3Qrws1sBWGBdOSp
9sIpdiXhZn5KdXe50H8XIStVqySLm9gg5PWku1Z9tbNrCdOT2Q2x+CF2HaFD
E524st3G3kuQ7ZdIQt+PsOsJxdX+Fm+blW0iXO+0PSu9LLiBkNR9Xupf28g2
E162Vv3WKwVbCWUeV9lk0MI+SrCMTM0oEsL/DsLcx0z46qLDbCdBOvv+b/Kn
me0mRAqmXhkGD7C9BE/B3HDDuJHtI0Tt1f3jtw1sP6HR8sH7w1nPbiFsUfmy
l0aFPEB4E9+h6Nws5G2EcOF5V/RPHbud8PaeKVM+rGdfI4had7pLxHvYNwjl
hUs0JSdr2bcIOqoQi1NgRwi20Oy2gTEt+w7hW4Uvoo/tZkcJNbK8+MAnNTtG
eFcVUjn6NOze3D4N6YPnHgnv+wkTgV9ntJIa9hPC/aL8qNykZCcIhmTxstdx
IX+e6x8wyt3dglMEY0/liRcZYb6h3DzB3q72i/vwD2fh1RA=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJwt0H9Ik1EUBuCVrFqaGkKUKyqbUrAoajFZOd85I9kKZFsksdqa1QauudWi
VSMs5jIwyVbQYB2zFq4mJlExocZK+4FBkQsJwRhkQmEqg+iPEFqe78Lh8vBe
7jmc9bZmw7GFIpFInqv/9/xZSZhNK6ftHW7MezUhXuNyyI+72OsIiS/is49n
BMsIm/rG1Nam0+yNhKIHo2sGSz1sOWHImTYHVYK3Eh52+3Qrws1sBWGBdOSp
9sIpdiXhZn5KdXe50H8XIStVqySLm9gg5PWku1Z9tbNrCdOT2Q2x+CF2HaFD
E524st3G3kuQ7ZdIQt+PsOsJxdX+Fm+blW0iXO+0PSu9LLiBkNR9Xupf28g2
E162Vv3WKwVbCWUeV9lk0MI+SrCMTM0oEsL/DsLcx0z46qLDbCdBOvv+b/Kn
me0mRAqmXhkGD7C9BE/B3HDDuJHtI0Tt1f3jtw1sP6HR8sH7w1nPbiFsUfmy
l0aFPEB4E9+h6Nws5G2EcOF5V/RPHbud8PaeKVM+rGdfI4had7pLxHvYNwjl
hUs0JSdr2bcIOqoQi1NgRwi20Oy2gTEt+w7hW4Uvoo/tZkcJNbK8+MAnNTtG
eFcVUjn6NOze3D4N6YPnHgnv+wkTgV9ntJIa9hPC/aL8qNykZCcIhmTxstdx
IX+e6x8wyt3dglMEY0/liRcZYb6h3DzB3q72i/vwD2fh1RA=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1925.104166666671, 1969.}, {
             0, 342.71099744245527`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1925.104166666671, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1925.104166666671, 1969.}, {
            0, 342.71099744245527`}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1925.104166666671, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{312.36079778457264`, 387.1028768200909}, {
       17.853363172144284`, 57.49491365584835}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJwt0H9Ik1EUBuCVrFqaGkKUKyqbUrAoajFZOd85I9kKZFsksdqa1QauudWi
VSMs5jIwyVbQYB2zFq4mJlExocZK+4FBkQsJwRhkQmEqg+iPEFqe78Lh8vBe
7jmc9bZmw7GFIpFInqv/9/xZSZhNK6ftHW7MezUhXuNyyI+72OsIiS/is49n
BMsIm/rG1Nam0+yNhKIHo2sGSz1sOWHImTYHVYK3Eh52+3Qrws1sBWGBdOSp
9sIpdiXhZn5KdXe50H8XIStVqySLm9gg5PWku1Z9tbNrCdOT2Q2x+CF2HaFD
E524st3G3kuQ7ZdIQt+PsOsJxdX+Fm+blW0iXO+0PSu9LLiBkNR9Xupf28g2
E162Vv3WKwVbCWUeV9lk0MI+SrCMTM0oEsL/DsLcx0z46qLDbCdBOvv+b/Kn
me0mRAqmXhkGD7C9BE/B3HDDuJHtI0Tt1f3jtw1sP6HR8sH7w1nPbiFsUfmy
l0aFPEB4E9+h6Nws5G2EcOF5V/RPHbud8PaeKVM+rGdfI4had7pLxHvYNwjl
hUs0JSdr2bcIOqoQi1NgRwi20Oy2gTEt+w7hW4Uvoo/tZkcJNbK8+MAnNTtG
eFcVUjn6NOze3D4N6YPnHgnv+wkTgV9ntJIa9hPC/aL8qNykZCcIhmTxstdx
IX+e6x8wyt3dglMEY0/liRcZYb6h3DzB3q72i/vwD2fh1RA=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1925.104166666671, 1969.}, {0, 342.71099744245527`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1925.104166666671, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
     "\"Povpre\[CHacek]no pogorena povr\[SHacek]ina na po\[ZHacek]ar (v \
hektarjih)\"", HoldForm], TraditionalForm]},
  AxesOrigin->{1925.104166666671, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graf povpre\[CHacek]ne velikosti po\[ZHacek]arov 1926-1970\"", 
    TraditionalForm],
  PlotRange->{{1925.104166666671, 1969.}, {0, 342.71099744245527`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9338229848034735`*^9, 3.93382301443727*^9}, 
   3.93382316352672*^9, 3.9338232049106736`*^9, {3.9338252335097847`*^9, 
   3.9338252480365086`*^9}, 3.933825311045189*^9, {3.9338257421506424`*^9, 
   3.933825752763693*^9}, 3.933825906198682*^9, 3.9338260133839006`*^9, 
   3.933826172833062*^9, 3.933826646717227*^9, 3.9338267143620625`*^9, 
   3.9339134148445363`*^9, 3.933915137120854*^9, {3.9339205188923855`*^9, 
   3.93392053336082*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"ef8bf09b-80fd-448b-9e46-c03e529a5e96"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJwt0U8og3Ecx/GHUdJo4rCDw5SDlcOSg9rUoxx22GEJOeywRO2gPIe1HKQp
1sRBcmYlNwcnHOVEjaZ2cHDYQSyWDTN/GrF93k89/Xr1fH/ff0/P9PzYbKNh
GAP/b+2sP+c7Zu2In/zUTyMt52LfckZORX7lrBxMV+UbOXzVMFL3rXwaM+Sc
7Fxuk+9ka7hZzsuZo1a5QP0nm1wi/4FdLhNvtcuf5J8gX1U2L6/Vn7Er27Jy
k1xyl+UW2fOF7cRHXmSHnDvDXXLq/kF2yg5vSe7m+9Kr7JJdk+9yL/mPC3If
9YNvcj/3O+nHIx8mPuRB7rupN8T9C+77ZGu7IpvkW8WjzJ8gv5/+i8wXIL6j
KAdxBY8TH6D+FE7SX0jeLJA/TH9++puR4z4c4fsW9efYt5P9WXidelE57GX/
C7Lx+Kxzkfn3iI8z7xpeYZ9R6iXJF+J/bDDvft78AywjqDE=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJwt0U8og3Ecx/GHUdJo4rCDw5SDlcOSg9rUoxx22GEJOeywRO2gPIe1HKQp
1sRBcmYlNwcnHOVEjaZ2cHDYQSyWDTN/GrF93k89/Xr1fH/ff0/P9PzYbKNh
GAP/b+2sP+c7Zu2In/zUTyMt52LfckZORX7lrBxMV+UbOXzVMFL3rXwaM+Sc
7Fxuk+9ka7hZzsuZo1a5QP0nm1wi/4FdLhNvtcuf5J8gX1U2L6/Vn7Er27Jy
k1xyl+UW2fOF7cRHXmSHnDvDXXLq/kF2yg5vSe7m+9Kr7JJdk+9yL/mPC3If
9YNvcj/3O+nHIx8mPuRB7rupN8T9C+77ZGu7IpvkW8WjzJ8gv5/+i8wXIL6j
KAdxBY8TH6D+FE7SX0jeLJA/TH9++puR4z4c4fsW9efYt5P9WXidelE57GX/
C7Lx+Kxzkfn3iI8z7xpeYZ9R6iXJF+J/bDDvft78AywjqDE=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1968.9791666666708`, 2019.}, {0, 249370.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1968.9791666666708`, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1968.9791666666708`, 2019.}, {0, 249370.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1968.9791666666708`, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJwt0U8og3Ecx/GHUdJo4rCDw5SDlcOSg9rUoxx22GEJOeywRO2gPIe1HKQp
1sRBcmYlNwcnHOVEjaZ2cHDYQSyWDTN/GrF93k89/Xr1fH/ff0/P9PzYbKNh
GAP/b+2sP+c7Zu2In/zUTyMt52LfckZORX7lrBxMV+UbOXzVMFL3rXwaM+Sc
7Fxuk+9ka7hZzsuZo1a5QP0nm1wi/4FdLhNvtcuf5J8gX1U2L6/Vn7Er27Jy
k1xyl+UW2fOF7cRHXmSHnDvDXXLq/kF2yg5vSe7m+9Kr7JJdk+9yL/mPC3If
9YNvcj/3O+nHIx8mPuRB7rupN8T9C+77ZGu7IpvkW8WjzJ8gv5/+i8wXIL6j
KAdxBY8TH6D+FE7SX0jeLJA/TH9++puR4z4c4fsW9efYt5P9WXidelE57GX/
C7Lx+Kxzkfn3iI8z7xpeYZ9R6iXJF+J/bDDvft78AywjqDE=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1968.9791666666708`, 2019.}, {0, 249370.}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1968.9791666666708`, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[SHacek]tevilo po\[ZHacek]arov\"", HoldForm], 
     TraditionalForm]},
  AxesOrigin->{1968.9791666666708`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graf \[SHacek]tevila po\[ZHacek]arov 1971-2019\"", TraditionalForm],
  PlotRange->{{1968.9791666666708`, 2019.}, {0, 249370.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9338229848034735`*^9, 3.93382301443727*^9}, 
   3.93382316352672*^9, 3.9338232049106736`*^9, {3.9338252335097847`*^9, 
   3.9338252480365086`*^9}, 3.933825311045189*^9, {3.9338257421506424`*^9, 
   3.933825752763693*^9}, 3.933825906198682*^9, 3.9338260133839006`*^9, 
   3.933826172833062*^9, 3.933826646717227*^9, 3.9338267143620625`*^9, 
   3.9339134148445363`*^9, 3.933915137120854*^9, {3.9339205188923855`*^9, 
   3.9339205334096546`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"792d46e2-3e63-4761-9289-ccac8b04da14"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJwt0ksoRGEYxvHToBSKQgohErJgGkUzGEKug2FQxm1QkluSJGmSa1kpsnEt
Cym7WdjISgYL5ZJkashCkSwUSm7f/z11zunX873vdzknztFv7dRpmqb/u//f
6jpaNf89nYM+JXnKp8qa3lqFz/BMYgG+wHNZ2fiaeuN7Ib4lb7EZsZc8ebwG
P5BPBBXjR3LnVQV+Jt9yF+FXZfN0SC1+Y3xLkxV/ML47NR9/4QW9AWtryp9T
6dhX2TkXIf39yT37sr9A7N2RfsGMv4+U9YeSv9zJ/iKUzRUb1TiK3DUr/WPx
9mIuTsCHvVKfRP+M0EqcSr4ZZsJp5Ofx9diAf07kvDMZn1Qq+zWxHuOwDZtx
hsGOC6jvzynDxdRbuxpxOfbLtOAqHP7QjGuV1z0LrbhBOTbl0oHt5K7jNtxK
fW+afL8O5v9eqsNd5LroUtyj7F1ekf4Dygfnbuk3RL1lVP7PEbzbJ/sZY/6n
ynbspP7GV85jEs/HSD5LvbYn882znoCT6rxffT2b0w==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJwt0ksoRGEYxvHToBSKQgohErJgGkUzGEKug2FQxm1QkluSJGmSa1kpsnEt
Cym7WdjISgYL5ZJkashCkSwUSm7f/z11zunX873vdzknztFv7dRpmqb/u//f
6jpaNf89nYM+JXnKp8qa3lqFz/BMYgG+wHNZ2fiaeuN7Ib4lb7EZsZc8ebwG
P5BPBBXjR3LnVQV+Jt9yF+FXZfN0SC1+Y3xLkxV/ML47NR9/4QW9AWtryp9T
6dhX2TkXIf39yT37sr9A7N2RfsGMv4+U9YeSv9zJ/iKUzRUb1TiK3DUr/WPx
9mIuTsCHvVKfRP+M0EqcSr4ZZsJp5Ofx9diAf07kvDMZn1Qq+zWxHuOwDZtx
hsGOC6jvzynDxdRbuxpxOfbLtOAqHP7QjGuV1z0LrbhBOTbl0oHt5K7jNtxK
fW+afL8O5v9eqsNd5LroUtyj7F1ekf4Dygfnbuk3RL1lVP7PEbzbJ/sZY/6n
ynbspP7GV85jEs/HSD5LvbYn882znoCT6rxffT2b0w==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1968.9791666666708`, 2019.}, {0, 1.0125149*^7}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1968.9791666666708`, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1968.9791666666708`, 2019.}, {0, 1.0125149*^7}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1968.9791666666708`, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJwt0ksoRGEYxvHToBSKQgohErJgGkUzGEKug2FQxm1QkluSJGmSa1kpsnEt
Cym7WdjISgYL5ZJkashCkSwUSm7f/z11zunX873vdzknztFv7dRpmqb/u//f
6jpaNf89nYM+JXnKp8qa3lqFz/BMYgG+wHNZ2fiaeuN7Ib4lb7EZsZc8ebwG
P5BPBBXjR3LnVQV+Jt9yF+FXZfN0SC1+Y3xLkxV/ML47NR9/4QW9AWtryp9T
6dhX2TkXIf39yT37sr9A7N2RfsGMv4+U9YeSv9zJ/iKUzRUb1TiK3DUr/WPx
9mIuTsCHvVKfRP+M0EqcSr4ZZsJp5Ofx9diAf07kvDMZn1Qq+zWxHuOwDZtx
hsGOC6jvzynDxdRbuxpxOfbLtOAqHP7QjGuV1z0LrbhBOTbl0oHt5K7jNtxK
fW+afL8O5v9eqsNd5LroUtyj7F1ekf4Dygfnbuk3RL1lVP7PEbzbJ/sZY/6n
ynbspP7GV85jEs/HSD5LvbYn882znoCT6rxffT2b0w==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1968.9791666666708`, 2019.}, {0, 1.0125149*^7}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1968.9791666666708`, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Pogorela povr\[SHacek]ina (v hektarjih)\"", HoldForm], 
     TraditionalForm]},
  AxesOrigin->{1968.9791666666708`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graf pogorele povr\[SHacek]ine 1971-2019\"", TraditionalForm],
  PlotRange->{{1968.9791666666708`, 2019.}, {0, 1.0125149*^7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9338229848034735`*^9, 3.93382301443727*^9}, 
   3.93382316352672*^9, 3.9338232049106736`*^9, {3.9338252335097847`*^9, 
   3.9338252480365086`*^9}, 3.933825311045189*^9, {3.9338257421506424`*^9, 
   3.933825752763693*^9}, 3.933825906198682*^9, 3.9338260133839006`*^9, 
   3.933826172833062*^9, 3.933826646717227*^9, 3.9338267143620625`*^9, 
   3.9339134148445363`*^9, 3.933915137120854*^9, {3.9339205188923855`*^9, 
   3.933920533458556*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"d8761f16-0265-494f-9a47-59a2636cf707"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[2], PointBox[CompressedData["
1:eJwt0XtI01EUB/CRCQWK/WGhIKXoKl2QOrWhot9cP7VS0+Wz+Zo2kZllmfko
LVT4SS+kBxTVPQVG0B+uhBBpaVCwCqMQwZVigoNC1CSiiQa2PPfC5fLh3HsO
556wqlMm6waNRhPr3f/P9fVOYOw8POpiItY9KjATk/El0mFkfxZYG/ro3xYX
zx4XCI3pnutPjma7BB5Ym6NdDj17SsCByXuG3ij2jIB9aOeKEiHfuwUW5/oD
67fHsn8IDEfMav9Mx7DnBbZV/PIpyJbxJYGLhfHqTWsC+7fAS9eYqs+R9ZYF
YptslQtpOvZfgaJ2z+OUXSa2hlA61fJe45vF3kgYrH/r19yzn72JsKR1hvk8
SWX7Ea4n6k+fi5TxLYS+kf6c0YQ8diChq2HVeexpGjuI0Gbz79NaZDyEMDB+
eeJuh/y/UMLoGd/hMvs+dgQhSXnWPtGbwt5NUGr2GrNHDrL3EMKNW9uHLbLf
aMLYHfdDtfUIO44wWZOkKbulsA2EOtMgHaqV80gmkPPnarUthw2CpTPPVro5
n32AsLpWoqYny/eZBFfmyndHYzE7i3D7kbn+2w5ZL5fQ5Fhp1S6Us/O9/6Oe
1HUplexigs5cFxJ3v4RdShhpcs8+jzezKwmBCrpfvM5lH/fmV8KvBHyQ86kl
VK0tVh92ZrBPePuZz08tsZSxGwiNfg1LjXoL+6y3foDdYB4oZLcQOjrfRFVY
5XwvEET5K1/DjSr2Je+8bXb9tQLZfzfhq0cXZFRlvh7Csjs9+Oi0vH+V4Pyk
b/EEF+EfolzyVQ==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Point[CompressedData["
1:eJwt0XtI01EUB/CRCQWK/WGhIKXoKl2QOrWhot9cP7VS0+Wz+Zo2kZllmfko
LVT4SS+kBxTVPQVG0B+uhBBpaVCwCqMQwZVigoNC1CSiiQa2PPfC5fLh3HsO
556wqlMm6waNRhPr3f/P9fVOYOw8POpiItY9KjATk/El0mFkfxZYG/ro3xYX
zx4XCI3pnutPjma7BB5Ym6NdDj17SsCByXuG3ij2jIB9aOeKEiHfuwUW5/oD
67fHsn8IDEfMav9Mx7DnBbZV/PIpyJbxJYGLhfHqTWsC+7fAS9eYqs+R9ZYF
YptslQtpOvZfgaJ2z+OUXSa2hlA61fJe45vF3kgYrH/r19yzn72JsKR1hvk8
SWX7Ea4n6k+fi5TxLYS+kf6c0YQ8diChq2HVeexpGjuI0Gbz79NaZDyEMDB+
eeJuh/y/UMLoGd/hMvs+dgQhSXnWPtGbwt5NUGr2GrNHDrL3EMKNW9uHLbLf
aMLYHfdDtfUIO44wWZOkKbulsA2EOtMgHaqV80gmkPPnarUthw2CpTPPVro5
n32AsLpWoqYny/eZBFfmyndHYzE7i3D7kbn+2w5ZL5fQ5Fhp1S6Us/O9/6Oe
1HUplexigs5cFxJ3v4RdShhpcs8+jzezKwmBCrpfvM5lH/fmV8KvBHyQ86kl
VK0tVh92ZrBPePuZz08tsZSxGwiNfg1LjXoL+6y3foDdYB4oZLcQOjrfRFVY
5XwvEET5K1/DjSr2Je+8bXb9tQLZfzfhq0cXZFRlvh7Csjs9+Oi0vH+V4Pyk
b/EEF+EfolzyVQ==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1968.9791666666708`, 2019.}, {
             0, 150.94764388891758`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1968.9791666666708`, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1968.9791666666708`, 2019.}, {
            0, 150.94764388891758`}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1968.9791666666708`, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJwt0XtI01EUB/CRCQWK/WGhIKXoKl2QOrWhot9cP7VS0+Wz+Zo2kZllmfko
LVT4SS+kBxTVPQVG0B+uhBBpaVCwCqMQwZVigoNC1CSiiQa2PPfC5fLh3HsO
556wqlMm6waNRhPr3f/P9fVOYOw8POpiItY9KjATk/El0mFkfxZYG/ro3xYX
zx4XCI3pnutPjma7BB5Ym6NdDj17SsCByXuG3ij2jIB9aOeKEiHfuwUW5/oD
67fHsn8IDEfMav9Mx7DnBbZV/PIpyJbxJYGLhfHqTWsC+7fAS9eYqs+R9ZYF
YptslQtpOvZfgaJ2z+OUXSa2hlA61fJe45vF3kgYrH/r19yzn72JsKR1hvk8
SWX7Ea4n6k+fi5TxLYS+kf6c0YQ8diChq2HVeexpGjuI0Gbz79NaZDyEMDB+
eeJuh/y/UMLoGd/hMvs+dgQhSXnWPtGbwt5NUGr2GrNHDrL3EMKNW9uHLbLf
aMLYHfdDtfUIO44wWZOkKbulsA2EOtMgHaqV80gmkPPnarUthw2CpTPPVro5
n32AsLpWoqYny/eZBFfmyndHYzE7i3D7kbn+2w5ZL5fQ5Fhp1S6Us/O9/6Oe
1HUplexigs5cFxJ3v4RdShhpcs8+jzezKwmBCrpfvM5lH/fmV8KvBHyQ86kl
VK0tVh92ZrBPePuZz08tsZSxGwiNfg1LjXoL+6y3foDdYB4oZLcQOjrfRFVY
5XwvEET5K1/DjSr2Je+8bXb9tQLZfzfhq0cXZFRlvh7Csjs9+Oi0vH+V4Pyk
b/EEF+EfolzyVQ==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1968.9791666666708`, 2019.}, {
          0, 150.94764388891758`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1968.9791666666708`, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"leto\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
     "\"Povpre\[CHacek]no pogorena povr\[SHacek]ina na po\[ZHacek]ar (v \
hektarjih)\"", HoldForm], TraditionalForm]},
  AxesOrigin->{1968.9791666666708`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graf povpre\[CHacek]ne velikosti po\[ZHacek]arov 1971-2019\"", 
    TraditionalForm],
  PlotRange->{{1968.9791666666708`, 2019.}, {0, 150.94764388891758`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9338229848034735`*^9, 3.93382301443727*^9}, 
   3.93382316352672*^9, 3.9338232049106736`*^9, {3.9338252335097847`*^9, 
   3.9338252480365086`*^9}, 3.933825311045189*^9, {3.9338257421506424`*^9, 
   3.933825752763693*^9}, 3.933825906198682*^9, 3.9338260133839006`*^9, 
   3.933826172833062*^9, 3.933826646717227*^9, 3.9338267143620625`*^9, 
   3.9339134148445363`*^9, 3.933915137120854*^9, {3.9339205188923855`*^9, 
   3.9339205335074224`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"c5eb27e2-8374-4efb-8a61-37a7a43fd6eb"]
}, Open  ]],

Cell["\<\
\[CapitalZHacek]e iz samih skal na grafih vidimo o\[CHacek]itno razliko v \
pogoreli povr\[SHacek]ini ter velikosti po\[ZHacek]arov.
Nato sem izra\[CHacek]unal \[SHacek]e nekaj konkretnih \[SHacek]tevilk.\
\>", "Text",
 CellChangeTimes->{{3.933826228142028*^9, 3.9338263111604548`*^9}, {
  3.9340279870626507`*^9, 
  3.9340279950503187`*^9}},ExpressionUUID->"5301dfa1-7b1a-46aa-bba8-\
e7f4526b2e38"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"se\[SHacek]tevekPo\[ZHacek]arovstari", "=", 
   RowBox[{"podatkiStari", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<Fires\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]noPo\[ZHacek]arovstari", "=", 
  RowBox[{
   RowBox[{"se\[SHacek]tevekPo\[ZHacek]arovstari", "/", 
    RowBox[{"(", 
     RowBox[{"1970", "-", "1926", "+", "1"}], ")"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekPovr\[SHacek]inestari", "=", 
   RowBox[{"podatkiStari", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<Acres\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]noPovr\[SHacek]inestari", "=", 
  RowBox[{
   RowBox[{"se\[SHacek]tevekPovr\[SHacek]inestari", "/", 
    RowBox[{"(", 
     RowBox[{"1970", "-", "1926", "+", "1"}], ")"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekVelikostistari", "=", 
   RowBox[{"podatkiStari", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", 
      RowBox[{
       RowBox[{"povr\[SHacek]inaNaPo\[ZHacek]ar", "[", 
        RowBox[{"#Acres", ",", "#Fires"}], "]"}], "&"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]naVelikoststari", "=", 
  RowBox[{
   RowBox[{"se\[SHacek]tevekVelikostistari", "/", 
    RowBox[{"(", 
     RowBox[{"1970", "-", "1926", "+", "1"}], ")"}]}], "//", 
   "N"}]}]}], "Input",
 CellChangeTimes->{
  3.9338217927675304`*^9, {3.933826321027478*^9, 3.9338264634267635`*^9}, {
   3.9338265254180717`*^9, 3.933826630209014*^9}, {3.9338267334096346`*^9, 
   3.9338267488247433`*^9}},
 NumberMarks->False,
 CellLabel->"In[50]:=",ExpressionUUID->"4585e205-1b27-4cb0-8b1f-30d12e0c96d3"],

Cell[BoxData["155606.77777777778`"], "Output",
 CellChangeTimes->{{3.9338264550436974`*^9, 3.933826463737449*^9}, {
   3.9338265488375025`*^9, 3.9338266306748543`*^9}, 3.9338267495647326`*^9, 
   3.933913420047843*^9, 3.933915144658928*^9, 3.9339205426199684`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"5a3f9c28-3cc3-4857-bfab-b958ceb9bea5"],

Cell[BoxData["2.009793571111111`*^7"], "Output",
 CellChangeTimes->{{3.9338264550436974`*^9, 3.933826463737449*^9}, {
   3.9338265488375025`*^9, 3.9338266306748543`*^9}, 3.9338267495647326`*^9, 
   3.933913420047843*^9, 3.933915144658928*^9, 3.9339205426229596`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"318c9476-ab3a-4386-bca5-f3b984194f53"],

Cell[BoxData["121.90735398242596`"], "Output",
 CellChangeTimes->{{3.9338264550436974`*^9, 3.933826463737449*^9}, {
   3.9338265488375025`*^9, 3.9338266306748543`*^9}, 3.9338267495647326`*^9, 
   3.933913420047843*^9, 3.933915144658928*^9, 3.9339205426269493`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"3c5abd97-efbf-4975-b86c-ffabcf689a1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"se\[SHacek]tevekPo\[ZHacek]arovnovi", "=", 
   RowBox[{"podatkiNovi", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<Fires\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]noPo\[ZHacek]arovnovi", "=", 
  RowBox[{
   RowBox[{"se\[SHacek]tevekPo\[ZHacek]arovnovi", "/", 
    RowBox[{"(", 
     RowBox[{"2019", "-", "1970"}], ")"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekPovr\[SHacek]inenovi", "=", 
   RowBox[{"podatkiNovi", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<Acres\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]noPovr\[SHacek]inenovi", "=", 
  RowBox[{
   RowBox[{"se\[SHacek]tevekPovr\[SHacek]inenovi", "/", 
    RowBox[{"(", 
     RowBox[{"2019", "-", "1970"}], ")"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekVelikostinovi", "=", 
   RowBox[{"podatkiNovi", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", 
      RowBox[{
       RowBox[{"povr\[SHacek]inaNaPo\[ZHacek]ar", "[", 
        RowBox[{"#Acres", ",", "#Fires"}], "]"}], "&"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"povpre\[CHacek]naVelikostnovi", "=", 
  RowBox[{
   RowBox[{"se\[SHacek]tevekVelikostinovi", "/", 
    RowBox[{"(", 
     RowBox[{"2019", "-", "1970"}], ")"}]}], "//", "N"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.933826769476678*^9, 3.9338270019453325`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d6bcd16e-d482-4613-86d3-e55be062e199"],

Cell[BoxData["95932.5306122449`"], "Output",
 CellChangeTimes->{{3.933826978056224*^9, 3.933827002528741*^9}, 
   3.933913421866647*^9, 3.933915146783856*^9, 3.933920544683214*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"de0f9186-5985-4471-bef7-a4a7679d7da5"],

Cell[BoxData["4.683906428571428`*^6"], "Output",
 CellChangeTimes->{{3.933826978056224*^9, 3.933827002528741*^9}, 
   3.933913421866647*^9, 3.933915146783856*^9, 3.9339205446882253`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"68dfee3f-bd4c-42d8-859a-a51c2bceb9b1"],

Cell[BoxData["60.21045736815069`"], "Output",
 CellChangeTimes->{{3.933826978056224*^9, 3.933827002528741*^9}, 
   3.933913421866647*^9, 3.933915146783856*^9, 3.9339205446911917`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"f3cc2035-fef1-4bab-9377-edfdc3b0c488"]
}, Open  ]],

Cell["\<\
Iz zgornjih podatkov je razvidno, da je povpre\[CHacek]no pogorele povr\
\[SHacek]ine ter \[SHacek]tevila po\[ZHacek]arov veliko manj v \
bli\[ZHacek]nji preteklosti, kot jih je bilo pred letom 1970. Velikost po\
\[ZHacek]arov pa je kar za polovico manj\[SHacek]a.\
\>", "Text",
 CellChangeTimes->{{3.9338279856948767`*^9, 3.9338281229112077`*^9}, {
  3.9340280051333485`*^9, 
  3.9340280096901636`*^9}},ExpressionUUID->"88c17a19-c6d1-4f53-a2f5-\
930ee80cb2b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vpliv temperatur na po\[ZHacek]are", "Section",
 CellChangeTimes->{{3.933913432162634*^9, 
  3.9339134478409004`*^9}},ExpressionUUID->"edfc8365-21fd-4291-b49e-\
6035bb9e3732"],

Cell["\<\
Za ekstremna leta glede \[SHacek]tevila po\[ZHacek]arov in obmo\[CHacek]ja \
pogorele povr\[SHacek]ine sem preveril tudi vpliv temperatur.\
\>", "Text",
 CellChangeTimes->{{3.9339151534604673`*^9, 3.9339152514691877`*^9}, {
  3.9340280240467343`*^9, 
  3.934028030275076*^9}},ExpressionUUID->"f082b249-4324-4904-abba-\
1f8f6883b172"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"max\[CapitalSHacek]tLetnica", "=", 
   RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", " ", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"max\[CapitalSHacek]t", "//", 
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", "\"\<Year\>\""}], "]"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min\[CapitalSHacek]tLetnica", "=", 
   RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", " ", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"min\[CapitalSHacek]t", "//", 
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", "\"\<Year\>\""}], "]"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPovLetnica", "=", 
   RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", " ", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"maxPov", "//", 
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", "\"\<Year\>\""}], "]"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minPovLetnica", "=", 
   RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", " ", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"minPov", "//", 
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", "\"\<Year\>\""}], "]"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxVelLetnica", "=", 
    RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", " ", 
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"maxVel", "//", 
        RowBox[{"Query", "[", 
         RowBox[{"All", ",", "\"\<Year\>\""}], "]"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempMax\[CapitalSHacek]t", "=", 
   RowBox[{"podatkiTemp", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", "#Date", " ", "]"}], "==",
         "max\[CapitalSHacek]tLetnica"}], "&"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempMax\[CapitalSHacek]t", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<Date\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempMax\[CapitalSHacek]t", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<tmax\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "tempMax\[CapitalSHacek]t", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Temperature leta z najve\[CHacek] po\[ZHacek]ari\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempmin\[CapitalSHacek]t", "=", 
   RowBox[{"podatkiTemp", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", "#Date", " ", "]"}], "==",
         "min\[CapitalSHacek]tLetnica"}], "&"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempmin\[CapitalSHacek]t", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<Date\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempmin\[CapitalSHacek]t", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<tmax\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "tempmin\[CapitalSHacek]t", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Temperature leta z najmanj po\[ZHacek]ari\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempmaxPov", "=", 
   RowBox[{"podatkiTemp", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", "#Date", " ", "]"}], "==",
         "maxPovLetnica"}], "&"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempmaxPov", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<Date\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempmaxPov", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<tmax\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "tempmaxPov", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Temperature leta z najve\[CHacek] pogorene \
povr\[SHacek]ine\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempminPov", "=", 
   RowBox[{"podatkiTemp", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", "#Date", " ", "]"}], "==",
         "minPovLetnica"}], "&"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempminPov", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<Date\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempminPov", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<tmax\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "tempminPov", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Temperature leta z najmanj pogorene povr\[SHacek]ine\>\""}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempmaxVel", "=", 
   RowBox[{"podatkiTemp", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Naredi\[CapitalSHacek]tevilko", "[", "#Date", " ", "]"}], "==",
         "maxVelLetnica"}], "&"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempmaxVel", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<Date\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"tempmaxVel", "//", 
           RowBox[{"Query", "[", 
            RowBox[{"All", ",", "\"\<tmax\>\""}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "tempmaxVel", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Temperature leta z najve\[CHacek]jimi po\[ZHacek]ari\>\""}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekTempMax\[CapitalSHacek]t", "=", 
   RowBox[{"tempMax\[CapitalSHacek]t", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<tmax\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"povpre\[CHacek]naTempMax\[CapitalSHacek]t", "=", 
   RowBox[{
    RowBox[{"se\[SHacek]tevekTempMax\[CapitalSHacek]t", "/", 
     RowBox[{"Length", "[", "tempMax\[CapitalSHacek]t", "]"}]}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
   "povpre\[CHacek]naTempMax\[CapitalSHacek]t", ",", 
    "\"\<Povpre\[CHacek]na temperatura leta z najve\[CHacek] po\[ZHacek]ari\>\
\""}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekTempMin\[CapitalSHacek]t", "=", 
   RowBox[{"tempmin\[CapitalSHacek]t", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<tmax\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"povpre\[CHacek]naTempMin\[CapitalSHacek]t", "=", 
   RowBox[{
    RowBox[{"se\[SHacek]tevekTempMin\[CapitalSHacek]t", "/", 
     RowBox[{"Length", "[", "tempmin\[CapitalSHacek]t", "]"}]}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
   "povpre\[CHacek]naTempMin\[CapitalSHacek]t", ",", 
    "\"\<Povpre\[CHacek]na temperatura leta z najmanj po\[ZHacek]ari\>\""}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekTempMaxPov", "=", 
   RowBox[{"tempmaxPov", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<tmax\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"povpre\[CHacek]naTempMaxPov", "=", 
   RowBox[{
    RowBox[{"se\[SHacek]tevekTempMaxPov", "/", 
     RowBox[{"Length", "[", "tempmaxPov", "]"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
   "povpre\[CHacek]naTempMaxPov", ",", 
    "\"\<Povpre\[CHacek]na temperatura leta z najve\[CHacek] pogorele povr\
\[SHacek]ine\>\""}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekTempMinPov", "=", 
   RowBox[{"tempminPov", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<tmax\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"povpre\[CHacek]naTempMinPov", "=", 
   RowBox[{
    RowBox[{"se\[SHacek]tevekTempMinPov", "/", 
     RowBox[{"Length", "[", "tempminPov", "]"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
   "povpre\[CHacek]naTempMinPov", ",", 
    "\"\<Povpre\[CHacek]na temperatura leta z najmanj pogorele \
povr\[SHacek]ine\>\""}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"se\[SHacek]tevekTempMaxVel", "=", 
   RowBox[{"tempmaxVel", "//", 
    RowBox[{"Query", "[", 
     RowBox[{"Total", ",", "\"\<tmax\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"povpre\[CHacek]naTempMaxVel", "=", 
   RowBox[{
    RowBox[{"se\[SHacek]tevekTempMaxVel", "/", 
     RowBox[{"Length", "[", "tempmaxVel", "]"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
  "povpre\[CHacek]naTempMaxVel", ",", 
   "\"\<Povpre\[CHacek]na temperatura leta z najve\[CHacek]jimi \
po\[ZHacek]ari\>\""}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9339152536495066`*^9, 3.933915253764165*^9}, {
  3.9339153343410664`*^9, 3.9339153863088465`*^9}, {3.933915431141097*^9, 
  3.933915466389855*^9}, {3.933915510095041*^9, 3.9339155843090553`*^9}, {
  3.9339157662301664`*^9, 3.9339160485419292`*^9}, {3.933916103653179*^9, 
  3.9339162410418572`*^9}, {3.9339162923503604`*^9, 3.933916545860137*^9}, {
  3.9339165791902676`*^9, 3.9339165879744577`*^9}, {3.933916624237155*^9, 
  3.9339166810041895`*^9}, {3.9339167556858096`*^9, 3.9339168331387973`*^9}, {
  3.933916869475868*^9, 3.93391711530067*^9}, {3.933917257819456*^9, 
  3.9339173634121666`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"139fcd88-c004-41f6-bca7-5d49e400616d"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[2], LineBox[CompressedData["
1:eJxVmHd41VQYh4OiolJIa1tautJL9wylvaV0pVtxRVwoihEVRUGuihsl4t5R
3DPuLXHgHnEhimJQVFCUiFsccQ9c3HOfe3he/rj0fb5xvt/3nXOeJKUz5k45
bAtFUeYMU5Tk/5v+6cdv/2lP6s9sY9OPdbNkLcnOa5Lzkuz/TP+oaGSaU0E7
jkS8eSzZvoH+3lLJUfemnzCiXS3ISPMIf9OPMSBZTXJibgb83WszsF7wUgbq
V77fHJ9kPW+UjBf6e0fB7syWXCf0XyW5Suj3R2E9bQPZzBmN9e1uyYVJ9mZJ
LktyuEiynmT1ObLxFf0TWSrqcTtU6AlmSh4h9F+mQo/+tIr81ueMd0Zngv22
TPQ7OiST+i/JRH3mE5JjQv/6TPTDG5mFesK45Cah/+AszMO4MAv1JJZkIZ+7
Lovz33YH6FOaJU8Q+qdLbhb6zyM7D0tuEPrXSq5IcrR1Nvqvjc9GfnNaNuLt
s7Oh11vM+HBNNvqlDs9Jc1zob8hBfxJTc+DvLsyh/vtzMA/l/Ryspw/Lhd2q
zUW8s7dksV/9BfSP7sml/lW50Gf+S7tdNQb99aaM4fznSx4v9N9Fu7GSnNg4
BvW45Xm4n4Ld86BHOSWP+m+n3VqRB73OH3nI78fyef53yUc92on5mJd5C+32
ctq9X/PRj7BkbJonCv2TycY8ya1C/02SO4T+ZZInCf0/kZWiAp7/Ick1Qv8x
BajPuZ7sv1KA+UQ/FCC/NrYQ9Zj9hZz/0YWo37umkPN/sRD9UL8rxPrGmCLk
T/RIFufBPUqyOG/BlZLFeVX8IuTXv5HcJvRnF1N/VzH0+kcUY73ocsnivGvP
FlP/l5K7hP7MEs6/nRweVoJ+qE4J1jOektwi9H8mWdxv7igN/sFEDf1QDtE4
/4s16LMe15Df+UTDvPztS9G/qIWsWZLFfjAvkNwu9D9aSv0fl2K9cESM858Q
Q73GgTHoSZwb4/wfimH94MMY6le2Hge7rks2hP79x2F+zllk/0HGR6sli/Op
bVnG+deXcf77llH/GfQP76O/+h7ZUMrT3Cn015TD7u5VjnzB6eXov3JPOfTq
75Ctf8qhz6msAPt7VCB/dKrkbqH/zgrkM4M024LtvypQr1dWifMX7lYJferJ
ldR/GznxpuQeof/3SuovrQIru1TBXz+hCutbbhXm6bxeRf2/kKPiasRrO1XD
bh5Htm8ke69Wc/4/VnP+hTWYnzFYQ/2JGvTbva4G/Q5eJis/1KC/en4t8ll9
tcjnzCH7V9dS/wu11P8t7WZuHc+/UYd83pHk8Io6zEd9nvHG13XIn9ihHux2
1kNfcHg99CmX12M9/Rmy9QXZURuwH/xJDdR/KFm7lGw+2YD52p9KFufFy2iE
3rC1EfHqDLJxUSPn/1gj9Loh7cF2OvW36MinH6SjPut8svMI4/2PdKwXbTOe
918T2TxAsrjv7HMki/ve82gPP5Ccuv+3akI+o7GJ899Psrjf3TObkC94gP7K
arK+xQTsL6tuAuzOPpLF/vZt2qN7ydq79Df/I9vVzbz/92yGvvC0Zs7/brLx
Nv0Tf9PuVrTw/jNbOP9TadfvoN16i+z82UL94+Lod7RrHHq0k+KYn3lrHPXa
b8RRr/dbHP0PtVbOf2eycXwr1kvc3Ir87mutyBf83Ir6leKJyKfvOBH5rGMl
i/3t3EC7v1Ry6vk3Yj6toI3nf6AN/bbntnH+10oWzy/hS5LF8436Pe1G3qQ0
i+e9RC/ZnT0J8cFVtCsvkPUNksV5tHLa0yyet5zuds5/Vjvio0Vk7bl25DO/
kiz2i53VgXxeh+TU++/MDuRTL+tAv4ynyYnPJYvnb3d0J+oP2sjKoZ3UfwnZ
eqIT9TvrafdHdsEexcnawV2Yl3lhF/TZS7pQj7eO/uG23bCrzZLF+5kxXXLq
+895ZPdhyeJ9J1jLfMo2BvavPt5AfmuawfmfTX9/sYH+R2sMrK8N70lz6vtX
g2TxPm1Ppd1bSA7v70G/1Pclp87/sF7u/9pexLt7Sxbfg4IFvahfubcX/dZX
9aJ+699e9MOp6kN+fwo5mt+Hfml39aE+c2Uf6rE3Shbfs7zyfnC4ez/81VPI
xu39WC+xguz+0Y9+B7EB6FN2JesnSk59/7yF7CwfQH3+rwNYLyoZ5P0/eZDz
nzfI+d8kWXyf8ZbRP/xpEPWpRUOwG0NDqCdxzNBm//8BRNHeVg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxVmHd41VQYh4OiolJIa1tautJL9wylvaV0pVtxRVwoihEVRUGuihsl4t5R
3DPuLXHgHnEhimJQVFCUiFsccQ9c3HOfe3he/rj0fb5xvt/3nXOeJKUz5k45
bAtFUeYMU5Tk/5v+6cdv/2lP6s9sY9OPdbNkLcnOa5Lzkuz/TP+oaGSaU0E7
jkS8eSzZvoH+3lLJUfemnzCiXS3ISPMIf9OPMSBZTXJibgb83WszsF7wUgbq
V77fHJ9kPW+UjBf6e0fB7syWXCf0XyW5Suj3R2E9bQPZzBmN9e1uyYVJ9mZJ
LktyuEiynmT1ObLxFf0TWSrqcTtU6AlmSh4h9F+mQo/+tIr81ueMd0Zngv22
TPQ7OiST+i/JRH3mE5JjQv/6TPTDG5mFesK45Cah/+AszMO4MAv1JJZkIZ+7
Lovz33YH6FOaJU8Q+qdLbhb6zyM7D0tuEPrXSq5IcrR1Nvqvjc9GfnNaNuLt
s7Oh11vM+HBNNvqlDs9Jc1zob8hBfxJTc+DvLsyh/vtzMA/l/Ryspw/Lhd2q
zUW8s7dksV/9BfSP7sml/lW50Gf+S7tdNQb99aaM4fznSx4v9N9Fu7GSnNg4
BvW45Xm4n4Ld86BHOSWP+m+n3VqRB73OH3nI78fyef53yUc92on5mJd5C+32
ctq9X/PRj7BkbJonCv2TycY8ya1C/02SO4T+ZZInCf0/kZWiAp7/Ick1Qv8x
BajPuZ7sv1KA+UQ/FCC/NrYQ9Zj9hZz/0YWo37umkPN/sRD9UL8rxPrGmCLk
T/RIFufBPUqyOG/BlZLFeVX8IuTXv5HcJvRnF1N/VzH0+kcUY73ocsnivGvP
FlP/l5K7hP7MEs6/nRweVoJ+qE4J1jOektwi9H8mWdxv7igN/sFEDf1QDtE4
/4s16LMe15Df+UTDvPztS9G/qIWsWZLFfjAvkNwu9D9aSv0fl2K9cESM858Q
Q73GgTHoSZwb4/wfimH94MMY6le2Hge7rks2hP79x2F+zllk/0HGR6sli/Op
bVnG+deXcf77llH/GfQP76O/+h7ZUMrT3Cn015TD7u5VjnzB6eXov3JPOfTq
75Ctf8qhz6msAPt7VCB/dKrkbqH/zgrkM4M024LtvypQr1dWifMX7lYJferJ
ldR/GznxpuQeof/3SuovrQIru1TBXz+hCutbbhXm6bxeRf2/kKPiasRrO1XD
bh5Htm8ke69Wc/4/VnP+hTWYnzFYQ/2JGvTbva4G/Q5eJis/1KC/en4t8ll9
tcjnzCH7V9dS/wu11P8t7WZuHc+/UYd83pHk8Io6zEd9nvHG13XIn9ihHux2
1kNfcHg99CmX12M9/Rmy9QXZURuwH/xJDdR/KFm7lGw+2YD52p9KFufFy2iE
3rC1EfHqDLJxUSPn/1gj9Loh7cF2OvW36MinH6SjPut8svMI4/2PdKwXbTOe
918T2TxAsrjv7HMki/ve82gPP5Ccuv+3akI+o7GJ899Psrjf3TObkC94gP7K
arK+xQTsL6tuAuzOPpLF/vZt2qN7ydq79Df/I9vVzbz/92yGvvC0Zs7/brLx
Nv0Tf9PuVrTw/jNbOP9TadfvoN16i+z82UL94+Lod7RrHHq0k+KYn3lrHPXa
b8RRr/dbHP0PtVbOf2eycXwr1kvc3Ir87mutyBf83Ir6leKJyKfvOBH5rGMl
i/3t3EC7v1Ry6vk3Yj6toI3nf6AN/bbntnH+10oWzy/hS5LF8436Pe1G3qQ0
i+e9RC/ZnT0J8cFVtCsvkPUNksV5tHLa0yyet5zuds5/Vjvio0Vk7bl25DO/
kiz2i53VgXxeh+TU++/MDuRTL+tAv4ynyYnPJYvnb3d0J+oP2sjKoZ3UfwnZ
eqIT9TvrafdHdsEexcnawV2Yl3lhF/TZS7pQj7eO/uG23bCrzZLF+5kxXXLq
+895ZPdhyeJ9J1jLfMo2BvavPt5AfmuawfmfTX9/sYH+R2sMrK8N70lz6vtX
g2TxPm1Ppd1bSA7v70G/1Pclp87/sF7u/9pexLt7Sxbfg4IFvahfubcX/dZX
9aJ+699e9MOp6kN+fwo5mt+Hfml39aE+c2Uf6rE3Shbfs7zyfnC4ez/81VPI
xu39WC+xguz+0Y9+B7EB6FN2JesnSk59/7yF7CwfQH3+rwNYLyoZ5P0/eZDz
nzfI+d8kWXyf8ZbRP/xpEPWpRUOwG0NDqCdxzNBm//8BRNHeVg==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{2.556144*^9, 2.5875936*^9}, {-4., 34.}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {2.556144*^9, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
               DateString[
                Part[#, 1], "DateShort"], 
               Part[#, 2]}& )[{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}]& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{2.556144*^9, 2.5875936*^9}, {-4., 34.}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {2.556144*^9, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
              DateString[
               Part[#, 1], "DateShort"], 
              Part[#, 2]}& )[{
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}]& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          DateListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxVmHd41VQYh4OiolJIa1tautJL9wylvaV0pVtxRVwoihEVRUGuihsl4t5R
3DPuLXHgHnEhimJQVFCUiFsccQ9c3HOfe3he/rj0fb5xvt/3nXOeJKUz5k45
bAtFUeYMU5Tk/5v+6cdv/2lP6s9sY9OPdbNkLcnOa5Lzkuz/TP+oaGSaU0E7
jkS8eSzZvoH+3lLJUfemnzCiXS3ISPMIf9OPMSBZTXJibgb83WszsF7wUgbq
V77fHJ9kPW+UjBf6e0fB7syWXCf0XyW5Suj3R2E9bQPZzBmN9e1uyYVJ9mZJ
LktyuEiynmT1ObLxFf0TWSrqcTtU6AlmSh4h9F+mQo/+tIr81ueMd0Zngv22
TPQ7OiST+i/JRH3mE5JjQv/6TPTDG5mFesK45Cah/+AszMO4MAv1JJZkIZ+7
Lovz33YH6FOaJU8Q+qdLbhb6zyM7D0tuEPrXSq5IcrR1Nvqvjc9GfnNaNuLt
s7Oh11vM+HBNNvqlDs9Jc1zob8hBfxJTc+DvLsyh/vtzMA/l/Ryspw/Lhd2q
zUW8s7dksV/9BfSP7sml/lW50Gf+S7tdNQb99aaM4fznSx4v9N9Fu7GSnNg4
BvW45Xm4n4Ld86BHOSWP+m+n3VqRB73OH3nI78fyef53yUc92on5mJd5C+32
ctq9X/PRj7BkbJonCv2TycY8ya1C/02SO4T+ZZInCf0/kZWiAp7/Ick1Qv8x
BajPuZ7sv1KA+UQ/FCC/NrYQ9Zj9hZz/0YWo37umkPN/sRD9UL8rxPrGmCLk
T/RIFufBPUqyOG/BlZLFeVX8IuTXv5HcJvRnF1N/VzH0+kcUY73ocsnivGvP
FlP/l5K7hP7MEs6/nRweVoJ+qE4J1jOektwi9H8mWdxv7igN/sFEDf1QDtE4
/4s16LMe15Df+UTDvPztS9G/qIWsWZLFfjAvkNwu9D9aSv0fl2K9cESM858Q
Q73GgTHoSZwb4/wfimH94MMY6le2Hge7rks2hP79x2F+zllk/0HGR6sli/Op
bVnG+deXcf77llH/GfQP76O/+h7ZUMrT3Cn015TD7u5VjnzB6eXov3JPOfTq
75Ctf8qhz6msAPt7VCB/dKrkbqH/zgrkM4M024LtvypQr1dWifMX7lYJferJ
ldR/GznxpuQeof/3SuovrQIru1TBXz+hCutbbhXm6bxeRf2/kKPiasRrO1XD
bh5Htm8ke69Wc/4/VnP+hTWYnzFYQ/2JGvTbva4G/Q5eJis/1KC/en4t8ll9
tcjnzCH7V9dS/wu11P8t7WZuHc+/UYd83pHk8Io6zEd9nvHG13XIn9ihHux2
1kNfcHg99CmX12M9/Rmy9QXZURuwH/xJDdR/KFm7lGw+2YD52p9KFufFy2iE
3rC1EfHqDLJxUSPn/1gj9Loh7cF2OvW36MinH6SjPut8svMI4/2PdKwXbTOe
918T2TxAsrjv7HMki/ve82gPP5Ccuv+3akI+o7GJ899Psrjf3TObkC94gP7K
arK+xQTsL6tuAuzOPpLF/vZt2qN7ydq79Df/I9vVzbz/92yGvvC0Zs7/brLx
Nv0Tf9PuVrTw/jNbOP9TadfvoN16i+z82UL94+Lod7RrHHq0k+KYn3lrHPXa
b8RRr/dbHP0PtVbOf2eycXwr1kvc3Ir87mutyBf83Ir6leKJyKfvOBH5rGMl
i/3t3EC7v1Ry6vk3Yj6toI3nf6AN/bbntnH+10oWzy/hS5LF8436Pe1G3qQ0
i+e9RC/ZnT0J8cFVtCsvkPUNksV5tHLa0yyet5zuds5/Vjvio0Vk7bl25DO/
kiz2i53VgXxeh+TU++/MDuRTL+tAv4ynyYnPJYvnb3d0J+oP2sjKoZ3UfwnZ
eqIT9TvrafdHdsEexcnawV2Yl3lhF/TZS7pQj7eO/uG23bCrzZLF+5kxXXLq
+895ZPdhyeJ9J1jLfMo2BvavPt5AfmuawfmfTX9/sYH+R2sMrK8N70lz6vtX
g2TxPm1Ppd1bSA7v70G/1Pclp87/sF7u/9pexLt7Sxbfg4IFvahfubcX/dZX
9aJ+699e9MOp6kN+fwo5mt+Hfml39aE+c2Uf6rE3Shbfs7zyfnC4ez/81VPI
xu39WC+xguz+0Y9+B7EB6FN2JesnSk59/7yF7CwfQH3+rwNYLyoZ5P0/eZDz
nzfI+d8kWXyf8ZbRP/xpEPWpRUOwG0NDqCdxzNBm//8BRNHeVg==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{2.556144*^9, 2.5875936*^9}, {-4., 34.}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {2.556144*^9, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
            DateString[
             Part[#, 1], "DateShort"], 
            Part[#, 2]}& )[{
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}]& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.556144*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{2.5481952*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.556144*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.56392*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.5717824*^9, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.5797312*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.58768*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.595456*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.5481952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5508736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5534656*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.556144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.556144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5588224*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5612416*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.56392*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.56392*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.566512*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5691904*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5717824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5717824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5744608*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5771392*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5797312*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5797312*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5824096*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5850016*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.58768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.58768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5903584*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5927776*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.595456*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{2.5481952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.556144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.56392*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.5717824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.5797312*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.58768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.595456*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.5481952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5508736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5534656*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.556144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.556144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5588224*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5612416*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.56392*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.56392*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.566512*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5691904*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5717824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5717824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5744608*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5771392*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5797312*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5797312*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5824096*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5850016*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.58768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.58768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5903584*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5927776*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.595456*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& )}},
  PlotLabel->FormBox[
   "\"Temperature leta z najve\[CHacek] po\[ZHacek]ari\"", TraditionalForm],
  PlotRange->{{2.556144*^9, 2.5875936*^9}, {-4., 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.9339205560133457`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"44a4597a-1663-4624-89a9-f218347b98e4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[2], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxVmHd81VQUxyMuFEccKApqQERB1AiigCIBxT2iKG6NKCou4t4aBboobTrp
bmhpKV2kLd3Qxr017q1R3DiCe4933+dd/b4/oN/Pufec3++cm5eXjJ6/6OwF
QxRFuWELRUn8/+9HfWTxxlnJP0cZ//5jfCVZS7C9x5IUj0iwZyzB+vDaJViv
FEkem2B9ULKeYOsLrnd3W4r1wQzJhyY4vlryxARr+Uux31wvWU2w8ynjvpoG
vdH0NPhRF6Rhv5ErWRH+e//jxMfbSA53TEc+Zarkg4T/+enQb2Wnw6/bRQ6i
dOiNt88Aa1MyUM+8jHEnMwP99jsykD96LwP9UYdmpvhw4X9SJvTaF2divZeW
iX6FfibqK+9wvb51FuLWYVnQ715ADhZnYX/ckoV62ptkc8gyrHcmSh4n/M9b
Rv8O16tNkscI/68xbv9N9sZno7/hXMlHCP/3SxbnV2/Ixn7rZcm7C/9/ZNP/
uOXg2JQszpN2z3L4MeskTxL+XyT7v0qeKvzvn5PiI4X/M3Kw3rhT8mThvyYH
frznctCv8Kcc6FNG53L+p+ZCr3VbLvrnVueifvB0LvTG3+fS/74u5mue5NL/
zS7m4VcwHj3h0v9mF/qMkXnIb8/Jwzy8RXnwF5aSlcfy4E//Jg/9tEbkw487
Ox/7g+vzOf9iyROE/4fzkd/clE//wwtwPfszC7A+WkhWCwswX2OgAP2xPy9A
fm/XQnB4TCHyKVdLFt8feh7Z6i+EPvcTyVOE/52LkC+eRtaulDxG+M8hOz1F
6K//URHqRzsUYx7qUcXwY1xeTP/LilHf62Q8/EDy0cL/9itSfIzwf4Tk6cL/
pZKnCf8ZjAft5PhdsrZtCeqbh5egf85FJfDjL+X6aG0J8qlvc72xVSnYPpTs
nU8OHypFfaWlFP70NyQfK/xvUYbr2z1Ysjh/wbllyB8/IFlcz1pjGf2/ynzO
X2Xw5x9UDo7OLsd+9b5y6DdWlyOf/VI56nu/c394QAXyKyZZv5tsrapAPveF
CuQLfuH6eEwlzpN2eiXi5h2SxflzVjLuP1vJ+f9YifqqVoW4cUoV/d9ahfpe
FTl8qgrzVb5nXN+nGvqsE6sRd29iPChnPH6crMXV0Gfu7XH+x5P9GyXPEP5L
PPRHfdRDfuNrD37sPVemeKbwP0uyON/hdStRTyleSf+BZEP4/zLFjmB39xrE
g2NrUD++pgb90Qpq6H9DDfQ4n9XAr79LLe//R9fS/1W18Ge4tdBn99Uin/dx
LfSGO61K8SzhfxpZv4JsLV9F/92rUD/4kOvjYXXoh3ZkHfSYVh32O1l16L+/
rg79i95nPnW7erAxuR777UsY99LroS9sIyvv1kOPvs1qfv/pq6HfvZDxYAk5
biVrb61GfnPLBszDOaQB6/3zGqAvepBxtVly8vp/nWwra3B+vAmSk+f/nDXo
l/LAGvpfw7j1Soodocf9k/HgwEbE47Ma6f/eRtQ368lOSPZ/a4SeaGwT+qWe
KVlcD8ZdZLu2ifN/von+f25Cf5Qxzfz+P62Z87+9GfVdrxnzCZ5hPP6B+bT9
WtAv8+QW5HduaUE+v5IcPSlZnD/1O8nifmCMauX8TyB7tmRxPYVlreiH8ngr
9OjftqKetdda+HGPkyx+jwU3SE7e/1eQtUfWQq/5FdnZw8f93Dd86I+u9VFP
LfLpf5Dr7S98zNfbrY3zn9GGeSjXkPX8NuSz1rehnvspOVDboT+e3o64toBs
5rZDn9Pbjvr+RuaLduyg/6lkY34H8tvZZK+LHEYdmI8ybF2Kk88/U8jWZetQ
z81ch/4EHVwfv0fWhnamWPyeNyd1cv4Xd0KPnyZZPA9EvmTxe1N9pxP5ja27
ELcP60L/vAsYDxdLFs+PSqtk8bymv9lF/0O6U5x8/pnYzfnP60Y/Yqeb/pu6
Uc98TXLy/cffkpPvP8b3oB/R3B70T72/B/0xGsj2yz2c/x890BeO64U+5axe
rNfvIVt1kpO//1/sRT+CX8nx/n1g7Yw+5DPvJDs1fdDvP0eOfupDf9TR/ein
cWo/6tm39WO/V92PeuHT3K/80I/8+r7rsd86SbI4P+7NjAcV6zGv+AnGtc2M
myM3YJ7OHLK/SLI4H1HpBuhVH5OcfP/7jeTk+88RA/DjzR7AvMPrB5BfWTGA
/frDkkcFCf+bJA9NsDt8MMXifV4wc5DzXzgIvVqhZPExB/7H/wCm7ovU
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{2.619216*^9, 2.6506656*^9}, {-7., 35.}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {2.619216*^9, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
               DateString[
                Part[#, 1], "DateShort"], 
               Part[#, 2]}& )[{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}]& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{2.619216*^9, 2.6506656*^9}, {-7., 35.}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {2.619216*^9, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
              DateString[
               Part[#, 1], "DateShort"], 
              Part[#, 2]}& )[{
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}]& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          DateListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{2.619216*^9, 2.6506656*^9}, {-7., 35.}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {2.619216*^9, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
            DateString[
             Part[#, 1], "DateShort"], 
            Part[#, 2]}& )[{
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}]& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.619216*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{2.6112672*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.619216*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.626992*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6348544*^9, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6428032*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6112672*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6139456*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6165376*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.619216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.619216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6218944*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6243136*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.626992*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.626992*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.629584*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6322624*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6348544*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6348544*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6375328*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6402112*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6428032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6428032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6454816*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6480736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6534304*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.655936*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{2.6112672*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.619216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.626992*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6348544*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6428032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6112672*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6139456*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6165376*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.619216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.619216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6218944*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6243136*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.626992*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.626992*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.629584*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6322624*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6348544*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6348544*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6375328*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6402112*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6428032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6428032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6454816*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6480736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6534304*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.655936*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& )}},
  PlotLabel->FormBox[
   "\"Temperature leta z najmanj po\[ZHacek]ari\"", TraditionalForm],
  PlotRange->{{2.619216*^9, 2.6506656*^9}, {-7., 35.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.933920556700777*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"705a693c-922f-49f5-bd06-1ab2ea71dd2b"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[2], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{9.466848*^8, 9.781344*^8}, {0, 35.}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {9.466848*^8, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
               DateString[
                Part[#, 1], "DateShort"], 
               Part[#, 2]}& )[{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}]& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{9.466848*^8, 9.781344*^8}, {0, 35.}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {9.466848*^8, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
              DateString[
               Part[#, 1], "DateShort"], 
              Part[#, 2]}& )[{
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}]& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          DateListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{9.466848*^8, 9.781344*^8}, {0, 35.}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {9.466848*^8, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
            DateString[
             Part[#, 1], "DateShort"], 
            Part[#, 2]}& )[{
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}]& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{9.466848*^8, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{9.38736*^8, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.623232*^8, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.70272*^8, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.782208*^8, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.859968*^8, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.38736*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.414144*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.440064*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.493632*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.517824*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.570528*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.597312*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.623232*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.623232*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.650016*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.6768*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.70272*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.70272*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.729504*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.755424*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.782208*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.782208*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.808992*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.833184*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.859968*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{9.38736*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.623232*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.70272*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.782208*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.859968*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.38736*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.414144*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.440064*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.493632*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.517824*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.570528*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.597312*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.623232*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.623232*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.650016*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.6768*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.70272*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.70272*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.729504*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.755424*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.782208*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.782208*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.808992*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.833184*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.859968*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& )}},
  PlotLabel->FormBox[
   "\"Temperature leta z najve\[CHacek] pogorene povr\[SHacek]ine\"", 
    TraditionalForm],
  PlotRange->{{9.466848*^8, 9.781344*^8}, {0, 35.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.933920557356057*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"268e9403-cc68-4eb3-b172-7603bfa9d0b7"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[2], LineBox[CompressedData["
1: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
xXl0l5KDxkHojXf58//+/QvSCOeW
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
xXl0l5KDxkHojXf58//+/QvSCOeW
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{2.650752*^9, 2.682288*^9}, {-2., 33.}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {2.650752*^9, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
               DateString[
                Part[#, 1], "DateShort"], 
               Part[#, 2]}& )[{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}]& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{2.650752*^9, 2.682288*^9}, {-2., 33.}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {2.650752*^9, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
              DateString[
               Part[#, 1], "DateShort"], 
              Part[#, 2]}& )[{
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}]& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          DateListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
xXl0l5KDxkHojXf58//+/QvSCOeW
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{2.650752*^9, 2.682288*^9}, {-2., 33.}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {2.650752*^9, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
            DateString[
             Part[#, 1], "DateShort"], 
            Part[#, 2]}& )[{
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}]& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.650752*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{2.6428032*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6664768*^9, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6744256*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6823744*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6901504*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6428032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6454816*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6480736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6534304*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.655936*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6612064*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6638848*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6664768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6664768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6691552*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6718336*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6744256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6744256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.677104*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.679696*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6850528*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.687472*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6901504*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{2.6428032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6664768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6744256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6901504*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {2.6428032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6454816*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6480736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.650752*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6534304*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.655936*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6586144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6612064*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6638848*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6664768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6664768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6691552*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6718336*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6744256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6744256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.677104*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.679696*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6850528*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.687472*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.6901504*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& )}},
  PlotLabel->FormBox[
   "\"Temperature leta z najmanj pogorene povr\[SHacek]ine\"", 
    TraditionalForm],
  PlotRange->{{2.650752*^9, 2.682288*^9}, {-2., 33.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.9339205580129414`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"98562aa3-3281-437b-b6b4-d3a1a946e809"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[2], LineBox[CompressedData["
1:eJxVmGV4FUkQRRsCi0NwhyS4Q3BvYBd3dw/u7jQEt+Du7u4SGoLzcPfg7hZ8
Nz1fz+bkR5LzzdyuqlvVPe+Nb8uuNQMiCyE6RxIi/G/4T/Syp0s5/+WW//3S
m13OHM6qQTnLPuEsI5cHi3Uu5zH6WhUs+xv9zwrUr6ho2dvoq1ZCPP2lEvWL
KltOb/Tlq1hOZvTvq+C6nlPVcnSjL10N68uX1Zj/9OqW/Yy+WA3L+Yz+MVlO
qmk5r9EXrGU5o9HfczmV0Y+pbTm70eepw/g36zD/4XVRn8pWDywvk8Xg+qhX
Z2gAf9VZsuzb0LIwep9GLof/6BONcF11b4z1ZYom7F9IE/avY1POT6JmlrMa
/QGXcxp9m+asP24L9m9XC+bfvCXrj9EK1/WWVvSvYWvLiYzeKwD5ifUB6K+u
3QbzrH61Yf4r27L+au1Y/9d26K9a3J7zV6ED5lt86MD4cztiXlSZTpy/V52Y
/4zO8FMX70L/n3TBejKoK9YThbrhug4lq7HduX/9ezD+rR7wWwf2RD4qey/m
f6UX6x/S23JBo8/Yh/vvHFn264t5Eb79mP9Jl815pnr0pz7lAMQTR1wubPSd
BoJV4kGWixl9sMtFjL7tYLCON4Tzs3sI6pUthnL+YyrOz1aXzbypRsOwvowy
HOuLDS4XMPo6gZYLGf3vQOpXjbBc0uirjwTrMJdLGP2SUZaLGn3F0fTv42jm
P28Mz++/xyI/+Xos+iNmjuP8lhjP+Xs6HuvLyRNwXRSeiHj6/kTWP24S8pV5
gzh/t4Pgpx4x2XJ+o88xhfNzdQrqEUOncv9mmsb5PU+W/adz//nN4PyfctmZ
v54zOT+pZjH+0VmoV3eeTX2SOYx/kCzazeX+8Z7H/u1x2TzvZMv5WF/EWsD5
2+aymTfVeCHnL+oi7CexcRH7V3cx9X/IcvUSzk+NpWD9bSnyVUuXcf4qLYdf
4hNZz1/B+P+s5P5/QxazVrH+kqupf7aa+ilrqC+ylvoHa1GPGr+O/cu3nvnf
WY9+6JEbsF9Vzo2Mf20j/BZqE/3PvJnzc2Ez1pMDtuB8EOm2Yn19eivyU722
MX7q7ZaLG/2x7fBLd9nB8yfpTrDUO5GPaL8L13X83Vhf7SXLVnvof+y99H/7
XtbfZB/z/2s/538TWdc7gPuVCKZ+TTD7V/Mg6/9+kPplmvVXPkT/P5P1gsP0
r2wI9W9DWP/sI5x/eZTz8/wo/Zt6jOdP0eP07+Fx1KMmnGD9+U+y/rsuO+fn
qFM8f3Od5v6/ThbDPMhPZznD/l88w/gDz1Kf/hz985BV7/OMn+aCZWn0xy9Q
3/Ui6092ifEPkUWHy/Q/wRX6v+8K47e+Sv/iXOP+23GN9Te9zv5Fu8H52UzW
9W+y/ki3qF97i/7Vus34P25Tv/wOz48qd5n/l7tYTy+8x/rLhVL/LpT+zblP
fakH9P/FA+qnPWT+xR5R/8hlZ/4mPqb/BZ4w/j2yHv2U+zf3M/b/xjPWP/w5
5zfrC/bv0gvqB71k/AyvGP+My+bzhOrzGizTvqH+xBvko7u95fmd/B3rP0wW
Hd9z/yb8wOfXfpedzw8BHy07n1/jfuLzZ+cn3K+afUY/ZPQvqEds+cL8G3xl
/pHD+PxfF8b8a39j/39+Y/wV37GerPqDz8+vZL3oJ1iV/0X/3/9i/+f+Rjxd
+g/9e0mW04UH/hWP5IlYn37sslP/pMieiP2RBb08EdcToV64rsdE8SD/PFFx
v7wZFfFE4F+Mny2aJ2K96jJZDo6O9UXGGKhHn3XZ+fzfN6Ynoj/SJxbjn4yF
9XT32Jad758p4mB9GRIH/ohOccE6UTzLzvP/QDxcl228mX+8+Jad7z+74sMv
1TwB7pcxEqI+sTUh9Q0TsX6vxPR/PVnUSUL/fyVh/1cmpf/VklEfloz+LU7O
/ldIgXzkhxTUz0tp2Xl/UyaVZef9xyuynJHasvP+pkQay35G/yQN9UFp0U9Z
yAd+ifs+uF+P9bUsdLje38+y8/7nlh/9H5HOsvP+KHt6V2/iX0nP+odkYP2Z
MtK/c2TVLxP775sZ9YhTLpvv+7pHFvipUmYFyyMuO9/fOmfj/k2cnfMTTJZt
c3B+vXNSvzsn/FAtcll23v/FzM3+bcuNfuhGeXC/iuJP/zf4o1+ibl7kp3+T
1ap8WF9Wz8/+f8v/fz3/AmOmHF8=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxVmGV4FUkQRRsCi0NwhyS4Q3BvYBd3dw/u7jQEt+Du7u4SGoLzcPfg7hZ8
Nz1fz+bkR5LzzdyuqlvVPe+Nb8uuNQMiCyE6RxIi/G/4T/Syp0s5/+WW//3S
m13OHM6qQTnLPuEsI5cHi3Uu5zH6WhUs+xv9zwrUr6ho2dvoq1ZCPP2lEvWL
KltOb/Tlq1hOZvTvq+C6nlPVcnSjL10N68uX1Zj/9OqW/Yy+WA3L+Yz+MVlO
qmk5r9EXrGU5o9HfczmV0Y+pbTm70eepw/g36zD/4XVRn8pWDywvk8Xg+qhX
Z2gAf9VZsuzb0LIwep9GLof/6BONcF11b4z1ZYom7F9IE/avY1POT6JmlrMa
/QGXcxp9m+asP24L9m9XC+bfvCXrj9EK1/WWVvSvYWvLiYzeKwD5ifUB6K+u
3QbzrH61Yf4r27L+au1Y/9d26K9a3J7zV6ED5lt86MD4cztiXlSZTpy/V52Y
/4zO8FMX70L/n3TBejKoK9YThbrhug4lq7HduX/9ezD+rR7wWwf2RD4qey/m
f6UX6x/S23JBo8/Yh/vvHFn264t5Eb79mP9Jl815pnr0pz7lAMQTR1wubPSd
BoJV4kGWixl9sMtFjL7tYLCON4Tzs3sI6pUthnL+YyrOz1aXzbypRsOwvowy
HOuLDS4XMPo6gZYLGf3vQOpXjbBc0uirjwTrMJdLGP2SUZaLGn3F0fTv42jm
P28Mz++/xyI/+Xos+iNmjuP8lhjP+Xs6HuvLyRNwXRSeiHj6/kTWP24S8pV5
gzh/t4Pgpx4x2XJ+o88xhfNzdQrqEUOncv9mmsb5PU+W/adz//nN4PyfctmZ
v54zOT+pZjH+0VmoV3eeTX2SOYx/kCzazeX+8Z7H/u1x2TzvZMv5WF/EWsD5
2+aymTfVeCHnL+oi7CexcRH7V3cx9X/IcvUSzk+NpWD9bSnyVUuXcf4qLYdf
4hNZz1/B+P+s5P5/QxazVrH+kqupf7aa+ilrqC+ylvoHa1GPGr+O/cu3nvnf
WY9+6JEbsF9Vzo2Mf20j/BZqE/3PvJnzc2Ez1pMDtuB8EOm2Yn19eivyU722
MX7q7ZaLG/2x7fBLd9nB8yfpTrDUO5GPaL8L13X83Vhf7SXLVnvof+y99H/7
XtbfZB/z/2s/538TWdc7gPuVCKZ+TTD7V/Mg6/9+kPplmvVXPkT/P5P1gsP0
r2wI9W9DWP/sI5x/eZTz8/wo/Zt6jOdP0eP07+Fx1KMmnGD9+U+y/rsuO+fn
qFM8f3Od5v6/ThbDPMhPZznD/l88w/gDz1Kf/hz985BV7/OMn+aCZWn0xy9Q
3/Ui6092ifEPkUWHy/Q/wRX6v+8K47e+Sv/iXOP+23GN9Te9zv5Fu8H52UzW
9W+y/ki3qF97i/7Vus34P25Tv/wOz48qd5n/l7tYTy+8x/rLhVL/LpT+zblP
fakH9P/FA+qnPWT+xR5R/8hlZ/4mPqb/BZ4w/j2yHv2U+zf3M/b/xjPWP/w5
5zfrC/bv0gvqB71k/AyvGP+My+bzhOrzGizTvqH+xBvko7u95fmd/B3rP0wW
Hd9z/yb8wOfXfpedzw8BHy07n1/jfuLzZ+cn3K+afUY/ZPQvqEds+cL8G3xl
/pHD+PxfF8b8a39j/39+Y/wV37GerPqDz8+vZL3oJ1iV/0X/3/9i/+f+Rjxd
+g/9e0mW04UH/hWP5IlYn37sslP/pMieiP2RBb08EdcToV64rsdE8SD/PFFx
v7wZFfFE4F+Mny2aJ2K96jJZDo6O9UXGGKhHn3XZ+fzfN6Ynoj/SJxbjn4yF
9XT32Jad758p4mB9GRIH/ohOccE6UTzLzvP/QDxcl228mX+8+Jad7z+74sMv
1TwB7pcxEqI+sTUh9Q0TsX6vxPR/PVnUSUL/fyVh/1cmpf/VklEfloz+LU7O
/ldIgXzkhxTUz0tp2Xl/UyaVZef9xyuynJHasvP+pkQay35G/yQN9UFp0U9Z
yAd+ifs+uF+P9bUsdLje38+y8/7nlh/9H5HOsvP+KHt6V2/iX0nP+odkYP2Z
MtK/c2TVLxP775sZ9YhTLpvv+7pHFvipUmYFyyMuO9/fOmfj/k2cnfMTTJZt
c3B+vXNSvzsn/FAtcll23v/FzM3+bcuNfuhGeXC/iuJP/zf4o1+ibl7kp3+T
1ap8WF9Wz8/+f8v/fz3/AmOmHF8=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{9.151488*^8, 9.465984*^8}, {-2., 32.}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {9.151488*^8, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
               DateString[
                Part[#, 1], "DateShort"], 
               Part[#, 2]}& )[{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}]& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{9.151488*^8, 9.465984*^8}, {-2., 32.}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {9.151488*^8, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
              DateString[
               Part[#, 1], "DateShort"], 
              Part[#, 2]}& )[{
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}]& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          DateListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxVmGV4FUkQRRsCi0NwhyS4Q3BvYBd3dw/u7jQEt+Du7u4SGoLzcPfg7hZ8
Nz1fz+bkR5LzzdyuqlvVPe+Nb8uuNQMiCyE6RxIi/G/4T/Syp0s5/+WW//3S
m13OHM6qQTnLPuEsI5cHi3Uu5zH6WhUs+xv9zwrUr6ho2dvoq1ZCPP2lEvWL
KltOb/Tlq1hOZvTvq+C6nlPVcnSjL10N68uX1Zj/9OqW/Yy+WA3L+Yz+MVlO
qmk5r9EXrGU5o9HfczmV0Y+pbTm70eepw/g36zD/4XVRn8pWDywvk8Xg+qhX
Z2gAf9VZsuzb0LIwep9GLof/6BONcF11b4z1ZYom7F9IE/avY1POT6JmlrMa
/QGXcxp9m+asP24L9m9XC+bfvCXrj9EK1/WWVvSvYWvLiYzeKwD5ifUB6K+u
3QbzrH61Yf4r27L+au1Y/9d26K9a3J7zV6ED5lt86MD4cztiXlSZTpy/V52Y
/4zO8FMX70L/n3TBejKoK9YThbrhug4lq7HduX/9ezD+rR7wWwf2RD4qey/m
f6UX6x/S23JBo8/Yh/vvHFn264t5Eb79mP9Jl815pnr0pz7lAMQTR1wubPSd
BoJV4kGWixl9sMtFjL7tYLCON4Tzs3sI6pUthnL+YyrOz1aXzbypRsOwvowy
HOuLDS4XMPo6gZYLGf3vQOpXjbBc0uirjwTrMJdLGP2SUZaLGn3F0fTv42jm
P28Mz++/xyI/+Xos+iNmjuP8lhjP+Xs6HuvLyRNwXRSeiHj6/kTWP24S8pV5
gzh/t4Pgpx4x2XJ+o88xhfNzdQrqEUOncv9mmsb5PU+W/adz//nN4PyfctmZ
v54zOT+pZjH+0VmoV3eeTX2SOYx/kCzazeX+8Z7H/u1x2TzvZMv5WF/EWsD5
2+aymTfVeCHnL+oi7CexcRH7V3cx9X/IcvUSzk+NpWD9bSnyVUuXcf4qLYdf
4hNZz1/B+P+s5P5/QxazVrH+kqupf7aa+ilrqC+ylvoHa1GPGr+O/cu3nvnf
WY9+6JEbsF9Vzo2Mf20j/BZqE/3PvJnzc2Ez1pMDtuB8EOm2Yn19eivyU722
MX7q7ZaLG/2x7fBLd9nB8yfpTrDUO5GPaL8L13X83Vhf7SXLVnvof+y99H/7
XtbfZB/z/2s/538TWdc7gPuVCKZ+TTD7V/Mg6/9+kPplmvVXPkT/P5P1gsP0
r2wI9W9DWP/sI5x/eZTz8/wo/Zt6jOdP0eP07+Fx1KMmnGD9+U+y/rsuO+fn
qFM8f3Od5v6/ThbDPMhPZznD/l88w/gDz1Kf/hz985BV7/OMn+aCZWn0xy9Q
3/Ui6092ifEPkUWHy/Q/wRX6v+8K47e+Sv/iXOP+23GN9Te9zv5Fu8H52UzW
9W+y/ki3qF97i/7Vus34P25Tv/wOz48qd5n/l7tYTy+8x/rLhVL/LpT+zblP
fakH9P/FA+qnPWT+xR5R/8hlZ/4mPqb/BZ4w/j2yHv2U+zf3M/b/xjPWP/w5
5zfrC/bv0gvqB71k/AyvGP+My+bzhOrzGizTvqH+xBvko7u95fmd/B3rP0wW
Hd9z/yb8wOfXfpedzw8BHy07n1/jfuLzZ+cn3K+afUY/ZPQvqEds+cL8G3xl
/pHD+PxfF8b8a39j/39+Y/wV37GerPqDz8+vZL3oJ1iV/0X/3/9i/+f+Rjxd
+g/9e0mW04UH/hWP5IlYn37sslP/pMieiP2RBb08EdcToV64rsdE8SD/PFFx
v7wZFfFE4F+Mny2aJ2K96jJZDo6O9UXGGKhHn3XZ+fzfN6Ynoj/SJxbjn4yF
9XT32Jad758p4mB9GRIH/ohOccE6UTzLzvP/QDxcl228mX+8+Jad7z+74sMv
1TwB7pcxEqI+sTUh9Q0TsX6vxPR/PVnUSUL/fyVh/1cmpf/VklEfloz+LU7O
/ldIgXzkhxTUz0tp2Xl/UyaVZef9xyuynJHasvP+pkQay35G/yQN9UFp0U9Z
yAd+ifs+uF+P9bUsdLje38+y8/7nlh/9H5HOsvP+KHt6V2/iX0nP+odkYP2Z
MtK/c2TVLxP775sZ9YhTLpvv+7pHFvipUmYFyyMuO9/fOmfj/k2cnfMTTJZt
c3B+vXNSvzsn/FAtcll23v/FzM3+bcuNfuhGeXC/iuJP/zf4o1+ibl7kp3+T
1ap8WF9Wz8/+f8v/fz3/AmOmHF8=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{9.151488*^8, 9.465984*^8}, {-2., 32.}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {9.151488*^8, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
            DateString[
             Part[#, 1], "DateShort"], 
            Part[#, 2]}& )[{
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}]& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{9.151488*^8, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{9.072*^8, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.151488*^8, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.229248*^8, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.307872*^8, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.38736*^8, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.072*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.098784*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.124704*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.151488*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.151488*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.178272*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.202464*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.229248*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.229248*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.255168*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.281952*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.307872*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.307872*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.334656*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.36144*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.38736*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.38736*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.414144*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.440064*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.493632*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.517824*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{9.072*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.151488*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.229248*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.307872*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.38736*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {9.072*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.098784*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.124704*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.151488*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.151488*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.178272*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.202464*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.229248*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.229248*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.255168*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.281952*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.307872*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.307872*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.334656*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.36144*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.38736*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.38736*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.414144*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.440064*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.493632*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.517824*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {9.544608*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& )}},
  PlotLabel->FormBox[
   "\"Temperature leta z najve\[CHacek]jimi po\[ZHacek]ari\"", 
    TraditionalForm],
  PlotRange->{{9.151488*^8, 9.465984*^8}, {-2., 32.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.9339205586736517`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"60d02ac0-af51-4749-afab-94278bc088b7"],

Cell[BoxData[
 TemplateBox[{
  "18.67945205479452`", 
   "\"Povpre\[CHacek]na temperatura leta z najve\[CHacek] po\[ZHacek]ari\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.933920558841235*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"a5dc03f4-8fab-4ffc-aaa2-0f8224658ad8"],

Cell[BoxData[
 TemplateBox[{
  "19.087671232876712`", 
   "\"Povpre\[CHacek]na temperatura leta z najmanj po\[ZHacek]ari\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.933920558848222*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"ef9a18ac-c80b-4507-887a-49af19002728"],

Cell[BoxData[
 TemplateBox[{
  "19.413698630136988`", 
   "\"Povpre\[CHacek]na temperatura leta z najve\[CHacek] pogorele povr\
\[SHacek]ine\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.9339205588531723`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"9cb59a2d-5274-4df2-b593-c18cf5abe031"],

Cell[BoxData[
 TemplateBox[{
  "19.256830601092897`", 
   "\"Povpre\[CHacek]na temperatura leta z najmanj pogorele \
povr\[SHacek]ine\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.933920558858158*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"d841f7b7-4db1-4374-a2a8-d6be4a294233"],

Cell[BoxData[
 TemplateBox[{
  "19.28219178082192`", 
   "\"Povpre\[CHacek]na temperatura leta z najve\[CHacek]jimi \
po\[ZHacek]ari\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9339160166874866`*^9, 3.93391605233762*^9}, 
   3.9339162420137663`*^9, 3.9339163357099905`*^9, 3.933916381343542*^9, 
   3.9339164808956556`*^9, 3.9339165513923364`*^9, 3.93391668230577*^9, 
   3.9339168347949877`*^9, {3.933916920220957*^9, 3.9339169500957685`*^9}, {
   3.933917030265667*^9, 3.9339170541522665`*^9}, 3.933917116404753*^9, 
   3.9339172935740776`*^9, 3.93391736439454*^9, 3.9339205588631787`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"46ae83a6-b4e9-46da-b317-6becde27073c"]
}, Open  ]],

Cell["\<\
Iz zgornjih grafov ter \[SHacek]tevilk opazimo, da temperatura ni vplivala na \
velikost ali \[SHacek]tevilo po\[ZHacek]arov toliko, kot bi si mislili.
\
\>", "Text",
 CellChangeTimes->{{3.933920577286936*^9, 3.933920632761103*^9}, {
  3.9340280399422445`*^9, 
  3.9340280438018985`*^9}},ExpressionUUID->"3a296457-34e2-4ddd-a7a2-\
404dd41aa042"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428, 735.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1. Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e065a4de-1f48-4e85-8222-f9e840065dbd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 250, 4, 98, "Title",ExpressionUUID->"cd5cdfde-a1b8-4f8c-9356-23962c548238"],
Cell[CellGroupData[{
Cell[855, 30, 170, 3, 67, "Section",ExpressionUUID->"e427a261-146d-4715-87a5-5e46a7dd4ffb"],
Cell[1028, 35, 546, 11, 81, "Text",ExpressionUUID->"34123523-3fca-434b-8fb5-856375786daf"],
Cell[CellGroupData[{
Cell[1599, 50, 1917, 32, 48, "Input",ExpressionUUID->"7d59329c-1169-4fab-b674-85db0ff17c06"],
Cell[3519, 84, 83215, 1599, 624, "Output",ExpressionUUID->"dd790551-fe4d-4dc1-ad79-b46c15f70a97"],
Cell[86737, 1685, 91362, 1782, 630, "Output",ExpressionUUID->"f650310d-7d09-4e91-98b2-42afb7b4c9c7"]
}, Open  ]],
Cell[178114, 3470, 190, 3, 28, "Input",ExpressionUUID->"048bce1f-80c5-4815-8ebd-88bb07cc7ae4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178341, 3478, 272, 6, 67, "Section",ExpressionUUID->"f5b3f871-ed71-466a-975c-c1edccb66453"],
Cell[178616, 3486, 826, 14, 81, "Text",ExpressionUUID->"e564cd88-fc16-42c4-82c5-fb2093343a77"],
Cell[CellGroupData[{
Cell[179467, 3504, 7805, 173, 374, "Input",ExpressionUUID->"61040692-9fec-40d8-9546-78dabe795eb8"],
Cell[187275, 3679, 63019, 1166, 630, "Output",ExpressionUUID->"ff39008e-1088-4b11-8b57-d7d52645620e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250343, 4851, 280, 5, 67, "Section",ExpressionUUID->"01f7cc6e-d90e-447d-b53b-3611731b54f9"],
Cell[CellGroupData[{
Cell[250648, 4860, 3867, 94, 124, "Input",ExpressionUUID->"52bdb619-73c1-404d-ac96-b3b29814fd83"],
Cell[254518, 4956, 12150, 261, 838, "Output",ExpressionUUID->"a1b23236-c934-4382-9520-8270249f5ef4"],
Cell[266671, 5219, 12469, 263, 819, "Output",ExpressionUUID->"211c0f92-a373-4977-b2d1-15d0d8fa9b26"],
Cell[279143, 5484, 14195, 295, 789, "Output",ExpressionUUID->"c540ff0c-084f-48b8-8637-356d5cf6f9dd"],
Cell[293341, 5781, 216578, 3708, 847, "Output",ExpressionUUID->"6d70dbe5-8598-4a63-8bd5-17a1e35405c2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[509968, 9495, 282, 7, 105, "Section",ExpressionUUID->"1bf40e58-01cb-4ba0-a4ff-5630ba5a0725"],
Cell[CellGroupData[{
Cell[510275, 9506, 3325, 79, 243, "Input",ExpressionUUID->"73c60815-483f-42e1-bfff-2394a956faf0"],
Cell[513603, 9587, 29393, 514, 107, "Output",ExpressionUUID->"2e7543c2-9cd2-4485-93ef-1f71e0e864f7"],
Cell[542999, 10103, 29384, 514, 107, "Output",ExpressionUUID->"e8aea0d4-9bd9-4137-ac8d-69e961a3b660"],
Cell[572386, 10619, 29407, 515, 107, "Output",ExpressionUUID->"9afd4cf6-5bd3-47a2-b482-3b441e5cfd5a"],
Cell[601796, 11136, 29392, 514, 107, "Output",ExpressionUUID->"a6f7f1e6-9ac7-4fd7-a27f-5e3649aaecda"],
Cell[631191, 11652, 29416, 515, 107, "Output",ExpressionUUID->"db859137-8298-4078-95e7-500c0bbf2a72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660644, 12172, 274, 6, 48, "Input",ExpressionUUID->"25082115-5742-4e04-96e0-d01d97ab77aa"],
Cell[660921, 12180, 193, 2, 32, "Output",ExpressionUUID->"923d6602-5d97-4626-8fd0-1838a2f41208"]
}, Open  ]],
Cell[661129, 12185, 1265, 21, 127, "Text",ExpressionUUID->"c3858421-03dc-416c-8825-14291840610d"],
Cell[662397, 12208, 204, 4, 28, "Input",ExpressionUUID->"c8fcd3cd-c292-40be-9ec3-bd25ca940f2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662638, 12217, 193, 3, 67, "Section",ExpressionUUID->"e7c1b861-9830-4dcb-9b6b-bcfdc40c26e8"],
Cell[CellGroupData[{
Cell[662856, 12224, 1743, 41, 124, "Input",ExpressionUUID->"dc21b767-2a20-4d68-b471-9cabd2bb5553"],
Cell[664602, 12267, 599, 9, 32, "Output",ExpressionUUID->"cbe73e6f-c755-4364-887f-dbd4dea02f23"],
Cell[665204, 12278, 593, 9, 32, "Output",ExpressionUUID->"a39ec885-734c-45ff-92e1-9105648f3fb0"],
Cell[665800, 12289, 598, 9, 32, "Output",ExpressionUUID->"8ca7ffb6-8789-460c-a098-a8a02fe21716"],
Cell[666401, 12300, 598, 9, 32, "Output",ExpressionUUID->"d611375b-d671-42d1-b6e0-30b4aab035ee"]
}, Open  ]],
Cell[667014, 12312, 1244, 22, 196, "Text",ExpressionUUID->"2037cafa-94d7-4818-bb24-0636e0288e4c"],
Cell[CellGroupData[{
Cell[668283, 12338, 6439, 177, 300, "Input",ExpressionUUID->"cf91ac8a-3da5-4c71-9c1d-67b8b6aefea9"],
Cell[674725, 12517, 9820, 226, 379, "Output",ExpressionUUID->"0b58fc0c-c919-488f-a562-b7e4d8531abb"],
Cell[684548, 12745, 9914, 226, 360, "Output",ExpressionUUID->"6db8e1a2-ad5c-4641-896a-2cb87a904b36"],
Cell[694465, 12973, 10794, 242, 331, "Output",ExpressionUUID->"ef8bf09b-80fd-448b-9e46-c03e529a5e96"],
Cell[705262, 13217, 9958, 226, 379, "Output",ExpressionUUID->"792d46e2-3e63-4761-9289-ccac8b04da14"],
Cell[715223, 13445, 10149, 229, 360, "Output",ExpressionUUID->"d8761f16-0265-494f-9a47-59a2636cf707"],
Cell[725375, 13676, 11108, 249, 331, "Output",ExpressionUUID->"c5eb27e2-8374-4efb-8a61-37a7a43fd6eb"]
}, Open  ]],
Cell[736498, 13928, 409, 8, 58, "Text",ExpressionUUID->"5301dfa1-7b1a-46aa-bba8-e7f4526b2e38"],
Cell[CellGroupData[{
Cell[736932, 13940, 1772, 45, 124, "Input",ExpressionUUID->"4585e205-1b27-4cb0-8b1f-30d12e0c96d3"],
Cell[738707, 13987, 343, 4, 32, "Output",ExpressionUUID->"5a3f9c28-3cc3-4857-bfab-b958ceb9bea5"],
Cell[739053, 13993, 345, 4, 32, "Output",ExpressionUUID->"318c9476-ab3a-4386-bca5-f3b984194f53"],
Cell[739401, 13999, 343, 4, 32, "Output",ExpressionUUID->"3c5abd97-efbf-4975-b86c-ffabcf689a1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739781, 14008, 1578, 40, 143, "Input",ExpressionUUID->"d6bcd16e-d482-4613-86d3-e55be062e199"],
Cell[741362, 14050, 259, 3, 32, "Output",ExpressionUUID->"de0f9186-5985-4471-bef7-a4a7679d7da5"],
Cell[741624, 14055, 265, 3, 32, "Output",ExpressionUUID->"68dfee3f-bd4c-42d8-859a-a51c2bceb9b1"],
Cell[741892, 14060, 262, 3, 32, "Output",ExpressionUUID->"f3cc2035-fef1-4bab-9377-edfdc3b0c488"]
}, Open  ]],
Cell[742169, 14066, 471, 9, 35, "Text",ExpressionUUID->"88c17a19-c6d1-4f53-a2f5-930ee80cb2b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[742677, 14080, 181, 3, 67, "Section",ExpressionUUID->"edfc8365-21fd-4291-b49e-6035bb9e3732"],
Cell[742861, 14085, 343, 7, 35, "Text",ExpressionUUID->"f082b249-4324-4904-abba-1f8f6883b172"],
Cell[CellGroupData[{
Cell[743229, 14096, 12337, 330, 881, "Input",ExpressionUUID->"139fcd88-c004-41f6-bca7-5d49e400616d"],
Cell[755569, 14428, 25509, 584, 260, "Output",ExpressionUUID->"44a4597a-1663-4624-89a9-f218347b98e4"],
Cell[781081, 15014, 25526, 584, 260, "Output",ExpressionUUID->"705a693c-922f-49f5-bd06-1ab2ea71dd2b"],
Cell[806610, 15600, 25459, 585, 260, "Output",ExpressionUUID->"268e9403-cc68-4eb3-b172-7603bfa9d0b7"],
Cell[832072, 16187, 25464, 585, 260, "Output",ExpressionUUID->"98562aa3-3281-437b-b6b4-d3a1a946e809"],
Cell[857539, 16774, 25396, 585, 260, "Output",ExpressionUUID->"60d02ac0-af51-4749-afab-94278bc088b7"],
Cell[882938, 17361, 1325, 26, 51, "Output",ExpressionUUID->"a5dc03f4-8fab-4ffc-aaa2-0f8224658ad8"],
Cell[884266, 17389, 1319, 26, 51, "Output",ExpressionUUID->"ef9a18ac-c80b-4507-887a-49af19002728"],
Cell[885588, 17417, 1341, 27, 51, "Output",ExpressionUUID->"9cb59a2d-5274-4df2-b593-c18cf5abe031"],
Cell[886932, 17446, 1332, 27, 51, "Output",ExpressionUUID->"d841f7b7-4db1-4374-a2a8-d6be4a294233"],
Cell[888267, 17475, 1333, 27, 51, "Output",ExpressionUUID->"46ae83a6-b4e9-46da-b317-6becde27073c"]
}, Open  ]],
Cell[889615, 17505, 355, 8, 58, "Text",ExpressionUUID->"3a296457-34e2-4ddd-a7a2-404dd41aa042"]
}, Open  ]]
}, Open  ]]
}
]
*)

